/home/ursin/.local/share/virtualenvs/proton-2oP9uAK9/bin/python /home/ursin/development/PA3/proton/src/preprocessing/pre_process.py --data_path=data/spider/original/dev.json --ner_data_path=data/spider/ner_dev.json --table_path=data/spider/original/tables.json --database_path=data/spider/original/database --conceptNet=data/spider/conceptNet --output=data/spider/preprocessed_dev.json
Question: How many singers do we have?
SQL: SELECT count(*) FROM singer
Look for potential candidates "[('singers', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001430 seconds.
Processed example 0 out of 1034

Question: What is the total number of singers?
SQL: SELECT count(*) FROM singer
Look for potential candidates "[('number', 0.75), ('singers', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001391 seconds.
Processed example 1 out of 1034

Question: Show name, country, age for all singers ordered by age from the oldest to the youngest.
SQL: SELECT name ,  country ,  age FROM singer ORDER BY age DESC
Look for potential candidates "[('Show name', 0.75), ('Show', 0.75), ('name', 0.75), ('country', 0.75), ('age', 0.75), ('singers', 0.75), ('youngest', 0.75), ('oldest', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.004192 seconds.
Processed example 2 out of 1034

Question: What are the names, countries, and ages for every singer in descending order of age?
SQL: SELECT name ,  country ,  age FROM singer ORDER BY age DESC
Look for potential candidates "[('names', 0.75), ('ages', 0.75), ('countries', 0.75), ('singer', 0.75), ('order', 0.75), ('age', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003190 seconds.
Processed example 3 out of 1034

Question: What is the average, minimum, and maximum age of all singers from France?
SQL: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
Look for potential candidates "[('France', 0.75), ('average', 0.75), ('age', 0.75), ('singers', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[('France', 'country', 'singer')]"
Elapsed time is 0.002206 seconds.
Processed example 4 out of 1034

Question: What is the average, minimum, and maximum age for all French singers?
SQL: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
Look for potential candidates "[('French', 0.75), ('average', 0.75), ('age', 0.75), ('singers', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002237 seconds.
Processed example 5 out of 1034

Question: Show the name and the release year of the song by the youngest singer.
SQL: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1
Look for potential candidates "[('song', 0.75), ('name', 0.75), ('singer', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001740 seconds.
Processed example 6 out of 1034

Question: What are the names and release years for all the songs of the youngest singer?
SQL: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1
Look for potential candidates "[('names', 0.75), ('songs', 0.75), ('singer', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001773 seconds.
Processed example 7 out of 1034

Question: What are all distinct countries where singers above age 20 are from?
SQL: SELECT DISTINCT country FROM singer WHERE age  >  20
Look for potential candidates "[('countries', 0.75), ('singers', 0.75), ('age', 0.75), ('20', 1.0)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001942 seconds.
Processed example 8 out of 1034

Question: What are  the different countries with singers above age 20?
SQL: SELECT DISTINCT country FROM singer WHERE age  >  20
Look for potential candidates "[('countries', 0.75), ('singers', 0.75), ('age', 0.75), ('20', 1.0)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001815 seconds.
Processed example 9 out of 1034

Question: Show all countries and the number of singers in each country.
SQL: SELECT country ,  count(*) FROM singer GROUP BY country
Look for potential candidates "[('number', 0.75), ('singers', 0.75), ('countries', 0.75), ('country', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002304 seconds.
Processed example 10 out of 1034

Question: How many singers are from each country?
SQL: SELECT country ,  count(*) FROM singer GROUP BY country
Look for potential candidates "[('singers', 0.75), ('country', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001557 seconds.
Processed example 11 out of 1034

Question: List all song names by singers above the average age.
SQL: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)
Look for potential candidates "[('singers', 0.75), ('song names', 0.75), ('song', 0.75), ('names', 0.75), ('age', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002739 seconds.
Processed example 12 out of 1034

Question: What are all the song names by singers who are older than average?
SQL: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)
Look for potential candidates "[('singers', 0.75), ('song names', 0.75), ('song', 0.75), ('names', 0.75), ('average', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002738 seconds.
Processed example 13 out of 1034

Question: Show location and name for all stadiums with a capacity between 5000 and 10000.
SQL: SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
Look for potential candidates "[('Show location', 0.75), ('Show', 0.75), ('location', 0.75), ('name', 0.75), ('stadiums', 0.75), ('capacity', 0.75), ('10000', 1.0), ('5000', 1.0)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003298 seconds.
Processed example 14 out of 1034

Question: What are the locations and names of all stations with capacity between 5000 and 10000?
SQL: SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
Look for potential candidates "[('locations', 0.75), ('stations', 0.75), ('names', 0.75), ('capacity', 0.75), ('10000', 1.0), ('5000', 1.0)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002397 seconds.
Processed example 15 out of 1034

Question: What is the maximum capacity and the average of all stadiums ?
SQL: select max(capacity), average from stadium
Look for potential candidates "[('capacity', 0.75), ('average', 0.75), ('stadiums', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001831 seconds.
Processed example 16 out of 1034

Question: What is the average and maximum capacities for all stadiums ?
SQL: select avg(capacity) ,  max(capacity) from stadium
Look for potential candidates "[('capacities', 0.75), ('average', 0.75), ('stadiums', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001795 seconds.
Processed example 17 out of 1034

Question: What is the name and capacity for the stadium with highest average attendance?
SQL: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
Look for potential candidates "[('name', 0.75), ('capacity', 0.75), ('stadium', 0.75), ('attendance', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002237 seconds.
Processed example 18 out of 1034

Question: What is the name and capacity for the stadium with the highest average attendance?
SQL: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
Look for potential candidates "[('name', 0.75), ('capacity', 0.75), ('stadium', 0.75), ('attendance', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002314 seconds.
Processed example 19 out of 1034

Question: How many concerts are there in year 2014 or 2015?
SQL: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
Look for potential candidates "[('concerts', 0.75), ('2014', 1.0), ('2015', 1.0)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[('2014', 'year', 'concert'), ('2014', 'song release year', 'singer'), ('2015', 'year', 'concert')]"
Elapsed time is 0.001014 seconds.
Processed example 20 out of 1034

Question: How many concerts occurred in 2014 or 2015?
SQL: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
Look for potential candidates "[('concerts', 0.75), ('2014', 1.0), ('2015', 1.0)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[('2014', 'year', 'concert'), ('2014', 'song release year', 'singer'), ('2015', 'year', 'concert')]"
Elapsed time is 0.000945 seconds.
Processed example 21 out of 1034

Question: Show the stadium name and the number of concerts in each stadium.
SQL: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
Look for potential candidates "[('number', 0.75), ('concerts', 0.75), ('stadium', 0.75), ('stadium name', 0.75), ('name', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002761 seconds.
Processed example 22 out of 1034

Question: For each stadium, how many concerts play there?
SQL: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
Look for potential candidates "[('stadium', 0.75), ('concerts', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001407 seconds.
Processed example 23 out of 1034

Question: Show the stadium name and capacity with most number of concerts in year 2014 or after.
SQL: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('number', 0.75), ('capacity', 0.75), ('concerts', 0.75), ('stadium name', 0.75), ('stadium', 0.75), ('name', 0.75), ('2014', 1.0)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[('2014', 'year', 'concert'), ('2014', 'song release year', 'singer')]"
Elapsed time is 0.003279 seconds.
Processed example 24 out of 1034

Question: What is the name and capacity of the stadium with the most concerts after 2013 ?
SQL: select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1
Look for potential candidates "[('name', 0.75), ('stadium', 0.75), ('capacity', 0.75), ('concerts', 0.75), ('2013', 1.0)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[('2013', 'song release year', 'singer')]"
Elapsed time is 0.002355 seconds.
Processed example 25 out of 1034

Question: Which year has most number of concerts?
SQL: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('number', 0.75), ('concerts', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001325 seconds.
Processed example 26 out of 1034

Question: What is the year that had the most concerts?
SQL: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('concerts', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000885 seconds.
Processed example 27 out of 1034

Question: Show the stadium names without any concert.
SQL: SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
Look for potential candidates "[('stadium names', 0.75), ('stadium', 0.75), ('names', 0.75), ('concert', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002250 seconds.
Processed example 28 out of 1034

Question: What are the names of the stadiums without any concerts?
SQL: SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
Look for potential candidates "[('names', 0.75), ('stadiums', 0.75), ('concerts', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001771 seconds.
Processed example 29 out of 1034

Question: Show countries where a singer above age 40 and a singer below 30 are from.
SQL: SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30
Look for potential candidates "[('Show countries', 0.75), ('Show', 0.75), ('countries', 0.75), ('singer', 0.75), ('age', 0.75), ('40', 1.0), ('30', 1.0)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002907 seconds.
Processed example 30 out of 1034

Question: Show names for all stadiums except for stadiums having a concert in year 2014.
SQL: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014
Look for potential candidates "[('Show names', 0.75), ('Show', 0.75), ('names', 0.75), ('stadiums', 0.75), ('concert', 0.75), ('2014', 1.0)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[('2014', 'year', 'concert'), ('2014', 'song release year', 'singer')]"
Elapsed time is 0.002820 seconds.
Processed example 31 out of 1034

Question: What are the names of all stadiums that did not have a concert in 2014?
SQL: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014
Look for potential candidates "[('stadiums', 0.75), ('names', 0.75), ('concert', 0.75), ('2014', 1.0)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[('2014', 'year', 'concert'), ('2014', 'song release year', 'singer')]"
Elapsed time is 0.001869 seconds.
Processed example 32 out of 1034

Question: Show the name and theme for all concerts and the number of singers in each concert.
SQL: SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id
Look for potential candidates "[('name', 0.75), ('theme', 0.75), ('concerts', 0.75), ('number', 0.75), ('concert', 0.75), ('singers', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003230 seconds.
Processed example 33 out of 1034

Question: What are the names , themes , and number of singers for every concert ?
SQL: select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id
Look for potential candidates "[('names', 0.75), ('themes', 0.75), ('number', 0.75), ('concert', 0.75), ('singers', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002740 seconds.
Processed example 34 out of 1034

Question: List singer names and number of concerts for each singer.
SQL: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id
Look for potential candidates "[('List singer names', 0.75), ('List', 0.75), ('singer', 0.75), ('names', 0.75), ('List singer', 0.75), ('singer names', 0.75), ('number', 0.75), ('concerts', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.004420 seconds.
Processed example 35 out of 1034

Question: What are the names of the singers and number of concerts for each person?
SQL: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id
Look for potential candidates "[('names', 0.75), ('singers', 0.75), ('number', 0.75), ('person', 0.75), ('concerts', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002768 seconds.
Processed example 36 out of 1034

Question: List all singer names in concerts in year 2014.
SQL: SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014
Look for potential candidates "[('concerts', 0.75), ('singer names', 0.75), ('singer', 0.75), ('names', 0.75), ('2014', 1.0)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[('2014', 'year', 'concert'), ('2014', 'song release year', 'singer')]"
Elapsed time is 0.002531 seconds.
Processed example 37 out of 1034

Question: What are the names of the singers who performed in a concert in 2014?
SQL: SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014
Look for potential candidates "[('singers', 0.75), ('names', 0.75), ('concert', 0.75), ('2014', 1.0)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[('2014', 'year', 'concert'), ('2014', 'song release year', 'singer')]"
Elapsed time is 0.001947 seconds.
Processed example 38 out of 1034

Question: what is the name and nation of the singer who have a song having 'Hey' in its name?
SQL: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'
Look for potential candidates "[('Hey', 0.9), ('singer', 0.75), ('name', 0.75), ('nation', 0.75), ('song', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002732 seconds.
Processed example 39 out of 1034

Question: What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?
SQL: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'
Look for potential candidates "[('Hey', 0.9), ('name', 0.75), ('singer', 0.75), ('word', 0.75), ('country', 0.75), ('origin', 0.75), ('song', 0.75), ('title', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.004219 seconds.
Processed example 40 out of 1034

Question: Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.
SQL: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015
Look for potential candidates "[('name', 0.75), ('stadiums', 0.75), ('concerts', 0.75), ('location', 0.75), ('2014', 1.0), ('2015', 1.0)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[('2014', 'year', 'concert'), ('2014', 'song release year', 'singer'), ('2015', 'year', 'concert')]"
Elapsed time is 0.002427 seconds.
Processed example 41 out of 1034

Question: What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?
SQL: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015
Look for potential candidates "[('concerts', 0.75), ('stadiums', 0.75), ('locations', 0.75), ('names', 0.75), ('2014', 1.0), ('2015', 1.0)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[('2014', 'year', 'concert'), ('2014', 'song release year', 'singer'), ('2015', 'year', 'concert')]"
Elapsed time is 0.002407 seconds.
Processed example 42 out of 1034

Question: Find the number of concerts happened in the stadium with the highest capacity .
SQL: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)
Look for potential candidates "[('number', 0.75), ('concerts', 0.75), ('stadium', 0.75), ('capacity', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002324 seconds.
Processed example 43 out of 1034

Question: What are the number of concerts that occurred in the stadium with the largest capacity ?
SQL: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)
Look for potential candidates "[('concerts', 0.75), ('number', 0.75), ('stadium', 0.75), ('capacity', 0.75)]" in database concert_singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002385 seconds.
Processed example 44 out of 1034

Question: Find the number of pets whose weight is heavier than 10.
SQL: SELECT count(*) FROM pets WHERE weight  >  10
Look for potential candidates "[('number', 0.75), ('weight', 0.75), ('pets', 0.75), ('10', 1.0)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003744 seconds.
Processed example 45 out of 1034

Question: How many pets have a greater weight than 10?
SQL: SELECT count(*) FROM pets WHERE weight  >  10
Look for potential candidates "[('pets', 0.75), ('weight', 0.75), ('10', 1.0)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002606 seconds.
Processed example 46 out of 1034

Question: Find the weight of the youngest dog.
SQL: SELECT weight FROM pets ORDER BY pet_age LIMIT 1
Look for potential candidates "[('weight', 0.75), ('dog', 0.75)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[('dog', 'pet type', 'pets')]"
Elapsed time is 0.002468 seconds.
Processed example 47 out of 1034

Question: How much does the youngest dog weigh?
SQL: SELECT weight FROM pets ORDER BY pet_age LIMIT 1
Look for potential candidates "[('dog', 0.75)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[('dog', 'pet type', 'pets')]"
Elapsed time is 0.001440 seconds.
Processed example 48 out of 1034

Question: Find the maximum weight for each type of pet. List the maximum weight and pet type.
SQL: SELECT max(weight) ,  petType FROM pets GROUP BY petType
Look for potential candidates "[('List', 0.75), ('weight', 0.75), ('pet', 0.75), ('type', 0.75), ('pet type', 0.75)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[('Lisa', 'first name', 'student')]"
Elapsed time is 0.005875 seconds.
Processed example 49 out of 1034

Question: List the maximum weight and type for each type of pet.
SQL: SELECT max(weight) ,  petType FROM pets GROUP BY petType
Look for potential candidates "[('weight', 0.75), ('type', 0.75), ('pet', 0.75)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003630 seconds.
Processed example 50 out of 1034

Question: Find number of pets owned by students who are older than 20.
SQL: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20
Look for potential candidates "[('number', 0.75), ('students', 0.75), ('pets', 0.75), ('20', 1.0)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[('20', 'age', 'student')]"
Elapsed time is 0.003702 seconds.
Processed example 51 out of 1034

Question: How many pets are owned by students that have an age greater than 20?
SQL: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20
Look for potential candidates "[('pets', 0.75), ('students', 0.75), ('age', 0.75), ('20', 1.0)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[('20', 'age', 'student')]"
Elapsed time is 0.003722 seconds.
Processed example 52 out of 1034

Question: Find the number of dog pets that are raised by female students (with sex F).
SQL: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'
Look for potential candidates "[('F', 1.0), ('female', 1.0), ('number', 0.75), ('dog pets', 0.75), ('dog', 0.75), ('pets', 0.75), ('students', 0.75), ('sex', 0.75)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[('F', 'sex', 'student'), ('dog', 'pet type', 'pets')]"
Elapsed time is 0.006883 seconds.
Processed example 53 out of 1034

Question: How many dog pets are raised by female students?
SQL: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'
Look for potential candidates "[('F', 1.0), ('female', 1.0), ('students', 0.75), ('dog pets', 0.75), ('dog', 0.75), ('pets', 0.75)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[('F', 'sex', 'student'), ('dog', 'pet type', 'pets')]"
Elapsed time is 0.004948 seconds.
Processed example 54 out of 1034

Question: Find the number of distinct type of pets.
SQL: SELECT count(DISTINCT pettype) FROM pets
Look for potential candidates "[('number', 0.75), ('type', 0.75), ('pets', 0.75)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003455 seconds.
Processed example 55 out of 1034

Question: How many different types of pet are there?
SQL: SELECT count(DISTINCT pettype) FROM pets
Look for potential candidates "[('types', 0.75), ('pet', 0.75)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002538 seconds.
Processed example 56 out of 1034

Question: Find the first name of students who have cat or dog pet.
SQL: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'
Look for potential candidates "[('students', 0.75), ('name', 0.75), ('cat', 0.75), ('dog pet', 0.75), ('dog', 0.75), ('pet', 0.75), ('1', 1.0)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[('cat', 'pet type', 'pets'), ('1', 'pet age', 'pets'), ('dog', 'pet type', 'pets')]"
Elapsed time is 0.007068 seconds.
Processed example 57 out of 1034

Question: What are the first names of every student who has a cat or dog as a pet?
SQL: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'
Look for potential candidates "[('student', 0.75), ('names', 0.75), ('cat', 0.75), ('pet', 0.75), ('dog', 0.75), ('1', 1.0)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[('cat', 'pet type', 'pets'), ('1', 'pet age', 'pets'), ('dog', 'pet type', 'pets')]"
Elapsed time is 0.005850 seconds.
Processed example 58 out of 1034

Question: Find the first name of students who have both cat and dog pets .
SQL: select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'
Look for potential candidates "[('students', 0.75), ('name', 0.75), ('pets', 0.75), ('dog', 0.75), ('cat', 0.75), ('1', 1.0)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[('cat', 'pet type', 'pets'), ('1', 'pet age', 'pets'), ('dog', 'pet type', 'pets')]"
Elapsed time is 0.005847 seconds.
Processed example 59 out of 1034

Question: What are the students' first names who have both cats and dogs as pets?
SQL: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'
Look for potential candidates "[('students', 0.75), ('names', 0.75), ('cats', 0.75), ('pets', 0.75), ('dogs', 0.75), ('1', 1.0)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[('1', 'pet age', 'pets'), ('dog', 'pet type', 'pets'), ('cat', 'pet type', 'pets')]"
Elapsed time is 0.005944 seconds.
Processed example 60 out of 1034

Question: Find the major and age of students who do not have a cat pet.
SQL: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
Look for potential candidates "[('students', 0.75), ('age', 0.75), ('cat pet', 0.75), ('cat', 0.75), ('pet', 0.75)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[('cat', 'pet type', 'pets')]"
Elapsed time is 0.005605 seconds.
Processed example 61 out of 1034

Question: What major is every student who does not own a cat as a pet, and also how old are they?
SQL: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
Look for potential candidates "[('student', 0.75), ('major', 0.75), ('cat', 0.75), ('pet', 0.75)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[('cat', 'pet type', 'pets')]"
Elapsed time is 0.004888 seconds.
Processed example 62 out of 1034

Question: Find the id of students who do not have a cat pet.
SQL: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
Look for potential candidates "[('students', 0.75), ('id', 0.75), ('cat pet', 0.75), ('cat', 0.75), ('pet', 0.75)]" in database pets_1 (include primary keys: True)
Confirmed the following candidates "[('cat', 'pet type', 'pets')]"
Elapsed time is 0.007177 seconds.
Processed example 63 out of 1034

Question: What are the ids of the students who do not own cats as pets?
SQL: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
Look for potential candidates "[('students', 0.75), ('ids', 0.75), ('pets', 0.75), ('cats', 0.75)]" in database pets_1 (include primary keys: True)
Confirmed the following candidates "[('cat', 'pet type', 'pets')]"
Elapsed time is 0.006758 seconds.
Processed example 64 out of 1034

Question: Find the first name and age of students who have a dog but do not have a cat as a pet.
SQL: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
Look for potential candidates "[('students', 0.75), ('name', 0.75), ('age', 0.75), ('dog', 0.75), ('cat', 0.75), ('pet', 0.75), ('1', 1.0)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[('cat', 'pet type', 'pets'), ('1', 'pet age', 'pets'), ('dog', 'pet type', 'pets')]"
Elapsed time is 0.006964 seconds.
Processed example 65 out of 1034

Question: What is the first name of every student who has a dog but does not have a cat?
SQL: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
Look for potential candidates "[('student', 0.75), ('name', 0.75), ('dog', 0.75), ('cat', 0.75), ('1', 1.0)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[('cat', 'pet type', 'pets'), ('1', 'pet age', 'pets'), ('dog', 'pet type', 'pets')]"
Elapsed time is 0.004869 seconds.
Processed example 66 out of 1034

Question: Find the type and weight of the youngest pet.
SQL: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1
Look for potential candidates "[('type', 0.75), ('weight', 0.75), ('pet', 0.75)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003575 seconds.
Processed example 67 out of 1034

Question: What type of pet is the youngest animal, and how much does it weigh?
SQL: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1
Look for potential candidates "[('type', 0.75), ('animal', 0.75), ('pet', 0.75)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003506 seconds.
Processed example 68 out of 1034

Question: Find the id and weight of all pets whose age is older than 1.
SQL: SELECT petid ,  weight FROM pets WHERE pet_age  >  1
Look for potential candidates "[('id', 0.75), ('age', 0.75), ('pets', 0.75), ('weight', 0.75), ('1', 1.0)]" in database pets_1 (include primary keys: True)
Confirmed the following candidates "[('1', 'pet age', 'pets')]"
Elapsed time is 0.005381 seconds.
Processed example 69 out of 1034

Question: What is the id and weight of every pet who is older than 1?
SQL: SELECT petid ,  weight FROM pets WHERE pet_age  >  1
Look for potential candidates "[('id', 0.75), ('weight', 0.75), ('pet', 0.75), ('1', 1.0)]" in database pets_1 (include primary keys: True)
Confirmed the following candidates "[('1', 'pet age', 'pets')]"
Elapsed time is 0.004290 seconds.
Processed example 70 out of 1034

Question: Find the average and maximum age for each type of pet.
SQL: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype
Look for potential candidates "[('age', 0.75), ('average', 0.75), ('pet', 0.75), ('type', 0.75)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.004646 seconds.
Processed example 71 out of 1034

Question: What is the average and maximum age for each pet type?
SQL: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype
Look for potential candidates "[('average', 0.75), ('age', 0.75), ('pet type', 0.75), ('pet', 0.75), ('type', 0.75)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.005786 seconds.
Processed example 72 out of 1034

Question: Find the average weight for each pet type.
SQL: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype
Look for potential candidates "[('weight', 0.75), ('pet type', 0.75), ('pet', 0.75), ('type', 0.75)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.004693 seconds.
Processed example 73 out of 1034

Question: What is the average weight for each type of pet?
SQL: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype
Look for potential candidates "[('weight', 0.75), ('pet', 0.75), ('type', 0.75)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.004167 seconds.
Processed example 74 out of 1034

Question: Find the first name and age of students who have a pet.
SQL: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid
Look for potential candidates "[('name', 0.75), ('students', 0.75), ('age', 0.75), ('pet', 0.75), ('1', 1.0)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[('1', 'pet age', 'pets')]"
Elapsed time is 0.004790 seconds.
Processed example 75 out of 1034

Question: What are the different first names and ages of the students who do have pets?
SQL: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid
Look for potential candidates "[('students', 0.75), ('ages', 0.75), ('names', 0.75), ('pets', 0.75), ('1', 1.0)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[('1', 'pet age', 'pets')]"
Elapsed time is 0.004716 seconds.
Processed example 76 out of 1034

Question: Find the id of the pet owned by student whose last name is ‘Smith’.
SQL: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'
Look for potential candidates "[('Smith', 0.9), ('id', 0.75), ('student', 0.75), ('pet', 0.75), ('name', 0.75)]" in database pets_1 (include primary keys: True)
Confirmed the following candidates "[('Smith', 'last name', 'student')]"
Elapsed time is 0.006568 seconds.
Processed example 77 out of 1034

Question: What is the id of the pet owned by the student whose last name is 'Smith'?
SQL: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'
Look for potential candidates "[('Smith', 0.9), ('student', 0.75), ('id', 0.75), ('pet', 0.75), ('name', 0.75)]" in database pets_1 (include primary keys: True)
Confirmed the following candidates "[('Smith', 'last name', 'student')]"
Elapsed time is 0.006755 seconds.
Processed example 78 out of 1034

Question: Find the number of pets for each student who has any pet and student id.
SQL: SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid
Look for potential candidates "[('number', 0.75), ('student', 0.75), ('pets', 0.75), ('id', 0.75), ('pet', 0.75)]" in database pets_1 (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.006535 seconds.
Processed example 79 out of 1034

Question: For students who have pets , how many pets does each student have ? list their ids instead of names .
SQL: select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid
Look for potential candidates "[('students', 0.75), ('pets', 0.75), ('student', 0.75), ('ids', 0.75), ('names', 0.75)]" in database pets_1 (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.006617 seconds.
Processed example 80 out of 1034

Question: Find the first name and gender of student who have more than one pet.
SQL: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1
Look for potential candidates "[('name', 0.75), ('student', 0.75), ('gender', 0.75), ('pet', 0.75), ('1', 1.0)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[('1', 'pet age', 'pets')]"
Elapsed time is 0.004785 seconds.
Processed example 81 out of 1034

Question: What is the first name and gender of the all the students who have more than one pet?
SQL: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1
Look for potential candidates "[('students', 0.75), ('name', 0.75), ('gender', 0.75), ('pet', 0.75), ('1', 1.0)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[('1', 'pet age', 'pets')]"
Elapsed time is 0.004738 seconds.
Processed example 82 out of 1034

Question: Find the last name of the student who has a cat that is age 3.
SQL: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
Look for potential candidates "[('cat', 0.75), ('student', 0.75), ('name', 0.75), ('3', 1.0)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[('cat', 'pet type', 'pets'), ('3', 'pet age', 'pets')]"
Elapsed time is 0.003654 seconds.
Processed example 83 out of 1034

Question: What is the last name of the student who has a cat that is 3 years old?
SQL: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
Look for potential candidates "[('student', 0.75), ('cat', 0.75), ('name', 0.75), ('3', 1.0)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[('cat', 'pet type', 'pets'), ('3', 'pet age', 'pets')]"
Elapsed time is 0.003767 seconds.
Processed example 84 out of 1034

Question: Find the average age of students who do not have any pet .
SQL: select avg(age) from student where stuid not in (select stuid from has_pet)
Look for potential candidates "[('students', 0.75), ('age', 0.75), ('pet', 0.75)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003939 seconds.
Processed example 85 out of 1034

Question: What is the average age for all students who do not own any pets ?
SQL: select avg(age) from student where stuid not in (select stuid from has_pet)
Look for potential candidates "[('students', 0.75), ('age', 0.75), ('pets', 0.75)]" in database pets_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003696 seconds.
Processed example 86 out of 1034

Question: How many continents are there?
SQL: SELECT count(*) FROM CONTINENTS;
Look for potential candidates "[('continents', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.016656 seconds.
Processed example 87 out of 1034

Question: What is the number of continents?
SQL: SELECT count(*) FROM CONTINENTS;
Look for potential candidates "[('number', 0.75), ('continents', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.031493 seconds.
Processed example 88 out of 1034

Question: How many countries does each continent have? List the continent id, continent name and the number of countries.
SQL: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;
Look for potential candidates "[('List', 0.75), ('countries', 0.75), ('continent', 0.75), ('continent id', 0.75), ('id', 0.75), ('number', 0.75), ('continent name', 0.75), ('name', 0.75)]" in database car_1 (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.136861 seconds.
Processed example 89 out of 1034

Question: For each continent, list its id, name, and how many countries it has?
SQL: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;
Look for potential candidates "[('continent', 0.75), ('name', 0.75), ('id', 0.75), ('countries', 0.75)]" in database car_1 (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.068600 seconds.
Processed example 90 out of 1034

Question: How many countries are listed?
SQL: SELECT count(*) FROM COUNTRIES;
Look for potential candidates "[('countries', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.016804 seconds.
Processed example 91 out of 1034

Question: How many countries exist?
SQL: SELECT count(*) FROM COUNTRIES;
Look for potential candidates "[('countries', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.016554 seconds.
Processed example 92 out of 1034

Question: How many models does each car maker produce? List maker full name, id and the number.
SQL: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;
Look for potential candidates "[('List', 0.75), ('models', 0.75), ('car maker', 0.75), ('car', 0.75), ('maker', 0.75), ('List maker', 0.75), ('number', 0.75), ('name', 0.75), ('id', 0.75)]" in database car_1 (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.152651 seconds.
Processed example 93 out of 1034

Question: What is the full name of each car maker, along with its id and how many models it produces?
SQL: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;
Look for potential candidates "[('name', 0.75), ('car maker', 0.75), ('car', 0.75), ('maker', 0.75), ('id', 0.75), ('models', 0.75)]" in database car_1 (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.102000 seconds.
Processed example 94 out of 1034

Question: Which model of the car has the minimum horsepower?
SQL: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;
Look for potential candidates "[('model', 0.75), ('car', 0.75), ('horsepower', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.045422 seconds.
Processed example 95 out of 1034

Question: What is the model of the car with the smallest amount of horsepower?
SQL: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;
Look for potential candidates "[('model', 0.75), ('car', 0.75), ('horsepower', 0.75), ('amount', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.061246 seconds.
Processed example 96 out of 1034

Question: Find the model of the car whose weight is below the average weight.
SQL: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)
Look for potential candidates "[('model', 0.75), ('weight', 0.75), ('car', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.046224 seconds.
Processed example 97 out of 1034

Question: What is the model for the car with a weight smaller than the average?
SQL: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)
Look for potential candidates "[('model', 0.75), ('car', 0.75), ('weight', 0.75), ('average', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.060203 seconds.
Processed example 98 out of 1034

Question: Find the name of the makers that produced some cars in the year of 1970?
SQL: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';
Look for potential candidates "[('name', 0.75), ('makers', 0.75), ('cars', 0.75), ('1970', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('1970', 'weight', 'cars data'), ('1970', 'year', 'cars data')]"
Elapsed time is 0.048166 seconds.
Processed example 99 out of 1034

Question: What is the name of the different car makers who produced a car in 1970?
SQL: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';
Look for potential candidates "[('car makers', 0.75), ('car', 0.75), ('makers', 0.75), ('name', 0.75), ('1970', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('1970', 'weight', 'cars data'), ('1970', 'year', 'cars data')]"
Elapsed time is 0.067979 seconds.
Processed example 100 out of 1034

Question: Find the make and production time of the cars that were produced in the earliest year?
SQL: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);
Look for potential candidates "[('make', 0.75), ('cars', 0.75), ('production', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.046192 seconds.
Processed example 101 out of 1034

Question: What is the maker of the carr produced in the earliest year and what year was it?
SQL: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);
Look for potential candidates "[('maker', 0.75), ('carr', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.030568 seconds.
Processed example 102 out of 1034

Question: Which distinct car models are the produced after 1980?
SQL: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;
Look for potential candidates "[('car models', 0.75), ('car', 0.75), ('models', 0.75), ('1980', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('1980', 'weight', 'cars data'), ('1980', 'year', 'cars data')]"
Elapsed time is 0.047209 seconds.
Processed example 103 out of 1034

Question: What are the different models for the cards produced after 1980?
SQL: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;
Look for potential candidates "[('models', 0.75), ('cards', 0.75), ('1980', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('1980', 'weight', 'cars data'), ('1980', 'year', 'cars data')]"
Elapsed time is 0.031806 seconds.
Processed example 104 out of 1034

Question: How many car makers are there in each continents? List the continent name and the count.
SQL: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;
Look for potential candidates "[('List', 0.75), ('car makers', 0.75), ('car', 0.75), ('makers', 0.75), ('continents', 0.75), ('count', 0.75), ('continent name', 0.75), ('continent', 0.75), ('name', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.134572 seconds.
Processed example 105 out of 1034

Question: What is the name of each continent and how many car makers are there in each one?
SQL: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;
Look for potential candidates "[('name', 0.75), ('continent', 0.75), ('car makers', 0.75), ('car', 0.75), ('makers', 0.75), ('one', 0.75), ('1', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.091356 seconds.
Processed example 106 out of 1034

Question: Which of the countries has the most car makers? List the country name.
SQL: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;
Look for potential candidates "[('List', 0.75), ('countries', 0.75), ('car makers', 0.75), ('car', 0.75), ('makers', 0.75), ('country name', 0.75), ('country', 0.75), ('name', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.119454 seconds.
Processed example 107 out of 1034

Question: What is the name of the country with the most car makers?
SQL: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;
Look for potential candidates "[('name', 0.75), ('country', 0.75), ('car makers', 0.75), ('car', 0.75), ('makers', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.075354 seconds.
Processed example 108 out of 1034

Question: How many car models are produced by each maker ? Only list the count and the maker full name .
SQL: select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;
Look for potential candidates "[('Only', 0.75), ('car models', 0.75), ('car', 0.75), ('models', 0.75), ('maker', 0.75), ('name', 0.75), ('count', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.103773 seconds.
Processed example 109 out of 1034

Question: What is the number of car models that are produced by each maker and what is the id and full name of each maker?
SQL: SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;
Look for potential candidates "[('car models', 0.75), ('car', 0.75), ('models', 0.75), ('number', 0.75), ('maker', 0.75), ('name', 0.75), ('id', 0.75)]" in database car_1 (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.119035 seconds.
Processed example 110 out of 1034

Question: What is the accelerate of the car make amc hornet sportabout (sw)?
SQL: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';
Look for potential candidates "[('car', 0.75), ('amc hornet', 0.75), ('amc', 0.75), ('hornet', 0.75), ('sportabout', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('amc', 'maker', 'car makers'), ('amc hornet', 'make', 'car names'), ('amc', 'model', 'model list')]"
Elapsed time is 0.078214 seconds.
Processed example 111 out of 1034

Question: How much does the car accelerate that makes amc hornet sportabout (sw)?
SQL: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';
Look for potential candidates "[('car', 0.75), ('hornet', 0.75), ('sportabout', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.046973 seconds.
Processed example 112 out of 1034

Question: How many car makers are there in france?
SQL: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';
Look for potential candidates "[('car makers', 0.75), ('car', 0.75), ('makers', 0.75), ('france', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('france', 'country name', 'countries')]"
Elapsed time is 0.060009 seconds.
Processed example 113 out of 1034

Question: What is the number of makers of care in France?
SQL: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';
Look for potential candidates "[('France', 0.75), ('number', 0.75), ('makers', 0.75), ('care', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('france', 'country name', 'countries')]"
Elapsed time is 0.060451 seconds.
Processed example 114 out of 1034

Question: How many car models are produced in the usa?
SQL: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';
Look for potential candidates "[('car models', 0.75), ('car', 0.75), ('models', 0.75), ('usa', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('usa', 'country name', 'countries')]"
Elapsed time is 0.060906 seconds.
Processed example 115 out of 1034

Question: What is the count of the car models produced in the United States?
SQL: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';
Look for potential candidates "[('USA', 0.9), ('US', 0.9), ('United States', 0.9), ('United States of America', 0.9), ('count', 0.75), ('car models', 0.75), ('car', 0.75), ('models', 0.75), ('United', 0.75), ('States', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('usa', 'country name', 'countries')]"
Elapsed time is 0.151572 seconds.
Processed example 116 out of 1034

Question: What is the average miles per gallon(mpg) of the cars with 4 cylinders?
SQL: SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;
Look for potential candidates "[('cylinders', 0.75), ('cars', 0.75), ('4', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('4', 'cylinders', 'cars data')]"
Elapsed time is 0.033231 seconds.
Processed example 117 out of 1034

Question: What is the average miles per gallon of all the cards with 4 cylinders?
SQL: SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;
Look for potential candidates "[('gallon', 0.75), ('cylinders', 0.75), ('cards', 0.75), ('4', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('4', 'cylinders', 'cars data')]"
Elapsed time is 0.047980 seconds.
Processed example 118 out of 1034

Question: What is the smallest weight of the car produced with 8 cylinders on 1974 ?
SQL: select min(weight) from cars_data where cylinders  =  8 and year  =  1974
Look for potential candidates "[('weight', 0.75), ('car', 0.75), ('cylinders', 0.75), ('1974', 1.0), ('8', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('1974', 'year', 'cars data'), ('8', 'cylinders', 'cars data')]"
Elapsed time is 0.048709 seconds.
Processed example 119 out of 1034

Question: What is the minimum weight of the car with 8 cylinders produced in 1974 ?
SQL: select min(weight) from cars_data where cylinders  =  8 and year  =  1974
Look for potential candidates "[('weight', 0.75), ('car', 0.75), ('cylinders', 0.75), ('1974', 1.0), ('8', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('1974', 'year', 'cars data'), ('8', 'cylinders', 'cars data')]"
Elapsed time is 0.048205 seconds.
Processed example 120 out of 1034

Question: What are all the makers and models?
SQL: SELECT Maker ,  Model FROM MODEL_LIST;
Look for potential candidates "[('makers', 0.75), ('models', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.030779 seconds.
Processed example 121 out of 1034

Question: What are the makers and models?
SQL: SELECT Maker ,  Model FROM MODEL_LIST;
Look for potential candidates "[('makers', 0.75), ('models', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.031529 seconds.
Processed example 122 out of 1034

Question: What are the countries having at least one car maker? List name and id.
SQL: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;
Look for potential candidates "[('List', 0.75), ('countries', 0.75), ('car maker', 0.75), ('car', 0.75), ('maker', 0.75), ('id', 0.75), ('List name', 0.75), ('name', 0.75), ('1', 1.0)]" in database car_1 (include primary keys: True)
Confirmed the following candidates "[('1', 'cont id', 'continents'), ('1', 'make id', 'car names'), ('1', 'model id', 'model list'), ('1', 'country id', 'countries'), ('1', 'id', 'car makers')]"
Elapsed time is 0.139500 seconds.
Processed example 123 out of 1034

Question: What are the names and ids of all countries with at least one car maker?
SQL: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;
Look for potential candidates "[('names', 0.75), ('countries', 0.75), ('ids', 0.75), ('car maker', 0.75), ('car', 0.75), ('maker', 0.75), ('1', 1.0)]" in database car_1 (include primary keys: True)
Confirmed the following candidates "[('1', 'cont id', 'continents'), ('1', 'make id', 'car names'), ('1', 'model id', 'model list'), ('1', 'country id', 'countries'), ('1', 'id', 'car makers')]"
Elapsed time is 0.104118 seconds.
Processed example 124 out of 1034

Question: What is the number of the cars with horsepower more than 150?
SQL: SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;
Look for potential candidates "[('number', 0.75), ('cars', 0.75), ('150', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('150', 'horsepower', 'cars data')]"
Elapsed time is 0.032505 seconds.
Processed example 125 out of 1034

Question: What is the number of cars with a horsepower greater than 150?
SQL: SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;
Look for potential candidates "[('number', 0.75), ('cars', 0.75), ('horsepower', 0.75), ('150', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('150', 'horsepower', 'cars data')]"
Elapsed time is 0.047204 seconds.
Processed example 126 out of 1034

Question: What is the average weight of cars each year?
SQL: SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;
Look for potential candidates "[('weight', 0.75), ('cars', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.030939 seconds.
Processed example 127 out of 1034

Question: What is the average weight and year for each year?
SQL: SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;
Look for potential candidates "[('weight', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.015998 seconds.
Processed example 128 out of 1034

Question: Which countries in europe have at least 3 car manufacturers?
SQL: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;
Look for potential candidates "[('countries', 0.75), ('car manufacturers', 0.75), ('car', 0.75), ('manufacturers', 0.75), ('europe', 0.75), ('3', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('europe', 'continent', 'continents'), ('3', 'cylinders', 'cars data')]"
Elapsed time is 0.078188 seconds.
Processed example 129 out of 1034

Question: What are the names of all European countries with at least 3 manufacturers?
SQL: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;
Look for potential candidates "[('European', 0.75), ('names', 0.75), ('countries', 0.75), ('manufacturers', 0.75), ('3', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('3', 'cylinders', 'cars data'), ('europe', 'continent', 'continents')]"
Elapsed time is 0.063789 seconds.
Processed example 130 out of 1034

Question: What is the maximum horsepower and the make of the car models with 3 cylinders?
SQL: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;
Look for potential candidates "[('horsepower', 0.75), ('make', 0.75), ('cylinders', 0.75), ('car models', 0.75), ('car', 0.75), ('models', 0.75), ('3', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('3', 'cylinders', 'cars data')]"
Elapsed time is 0.093339 seconds.
Processed example 131 out of 1034

Question: What is the largest amount of horsepower for the models with 3 cylinders and what make is it?
SQL: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;
Look for potential candidates "[('amount', 0.75), ('models', 0.75), ('horsepower', 0.75), ('make', 0.75), ('cylinders', 0.75), ('3', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('3', 'cylinders', 'cars data')]"
Elapsed time is 0.078410 seconds.
Processed example 132 out of 1034

Question: Which model saves the most gasoline? That is to say, have the maximum miles per gallon.
SQL: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;
Look for potential candidates "[('That', 0.75), ('model', 0.75), ('gasoline', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.046685 seconds.
Processed example 133 out of 1034

Question: What is the car model with the highest mpg ?
SQL: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;
Look for potential candidates "[('car model', 0.75), ('car', 0.75), ('model', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.046833 seconds.
Processed example 134 out of 1034

Question: What is the average horsepower of the cars before 1980?
SQL: SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;
Look for potential candidates "[('horsepower', 0.75), ('cars', 0.75), ('1980', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('1980', 'weight', 'cars data'), ('1980', 'year', 'cars data')]"
Elapsed time is 0.032769 seconds.
Processed example 135 out of 1034

Question: What is the average horsepower for all cars produced before 1980 ?
SQL: select avg(horsepower) from cars_data where year  <  1980;
Look for potential candidates "[('horsepower', 0.75), ('cars', 0.75), ('1980', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('1980', 'weight', 'cars data'), ('1980', 'year', 'cars data')]"
Elapsed time is 0.034444 seconds.
Processed example 136 out of 1034

Question: What is the average edispl of the cars of model volvo?
SQL: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';
Look for potential candidates "[('edispl', 0.75), ('cars', 0.75), ('model volvo', 0.75), ('model', 0.75), ('volvo', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('Volvo', 'full name', 'car makers'), ('volvo', 'model', 'model list'), ('volvo', 'maker', 'car makers')]"
Elapsed time is 0.077138 seconds.
Processed example 137 out of 1034

Question: What is the average edispl for all volvos?
SQL: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';
Look for potential candidates "[('edispl', 0.75), ('volvos', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('volvo', 'maker', 'car makers'), ('volvo', 'model', 'model list'), ('Volvo', 'full name', 'car makers')]"
Elapsed time is 0.031788 seconds.
Processed example 138 out of 1034

Question: What is the maximum accelerate for different number of cylinders?
SQL: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;
Look for potential candidates "[('maximum', 0.75), ('cylinders', 0.75), ('number', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.046567 seconds.
Processed example 139 out of 1034

Question: What is the maximum accelerate for all the different cylinders?
SQL: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;
Look for potential candidates "[('maximum', 0.75), ('cylinders', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.031440 seconds.
Processed example 140 out of 1034

Question: Which model has the most version(make) of cars?
SQL: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;
Look for potential candidates "[('model', 0.75), ('version', 0.75), ('cars', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.045824 seconds.
Processed example 141 out of 1034

Question: What model has the most different versions?
SQL: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;
Look for potential candidates "[('model', 0.75), ('versions', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.031349 seconds.
Processed example 142 out of 1034

Question: How many cars have more than 4 cylinders?
SQL: SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;
Look for potential candidates "[('cars', 0.75), ('cylinders', 0.75), ('4', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('4', 'cylinders', 'cars data')]"
Elapsed time is 0.033212 seconds.
Processed example 143 out of 1034

Question: What is the number of cars with more than 4 cylinders?
SQL: SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;
Look for potential candidates "[('number', 0.75), ('cars', 0.75), ('cylinders', 0.75), ('4', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('4', 'cylinders', 'cars data')]"
Elapsed time is 0.047888 seconds.
Processed example 144 out of 1034

Question: how many cars were produced in 1980?
SQL: SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;
Look for potential candidates "[('cars', 0.75), ('1980', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('1980', 'weight', 'cars data'), ('1980', 'year', 'cars data')]"
Elapsed time is 0.017995 seconds.
Processed example 145 out of 1034

Question: In 1980, how many cars were made?
SQL: SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;
Look for potential candidates "[('In 1980', 0.75), ('cars', 0.75), ('1980', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('1980', 'weight', 'cars data'), ('1980', 'year', 'cars data')]"
Elapsed time is 0.033053 seconds.
Processed example 146 out of 1034

Question: How many car models were produced by the maker with full name American Motor Company?
SQL: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';
Look for potential candidates "[('American Motor Company', 0.75), ('car models', 0.75), ('car', 0.75), ('models', 0.75), ('maker', 0.75), ('American', 0.75), ('Motor', 0.75), ('Company', 0.75), ('American Motor', 0.75), ('Motor Company', 0.75), ('name', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('American Motor Company', 'full name', 'car makers'), ('america', 'continent', 'continents')]"
Elapsed time is 0.167698 seconds.
Processed example 147 out of 1034

Question: What is the number of car models created by the car maker American Motor Company?
SQL: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';
Look for potential candidates "[('American Motor Company', 0.75), ('American', 0.75), ('Motor', 0.75), ('Company', 0.75), ('American Motor', 0.75), ('Motor Company', 0.75), ('number', 0.75), ('car models', 0.75), ('car', 0.75), ('models', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('American Motor Company', 'full name', 'car makers'), ('america', 'continent', 'continents')]"
Elapsed time is 0.151880 seconds.
Processed example 148 out of 1034

Question: Which makers designed more than 3 car models? List full name and the id.
SQL: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;
Look for potential candidates "[('List', 0.75), ('makers', 0.75), ('car models', 0.75), ('car', 0.75), ('models', 0.75), ('id', 0.75), ('name', 0.75), ('3', 1.0)]" in database car_1 (include primary keys: True)
Confirmed the following candidates "[('3', 'country id', 'countries'), ('3', 'id', 'car makers'), ('3', 'make id', 'car names'), ('3', 'cylinders', 'cars data'), ('3', 'cont id', 'continents'), ('3', 'model id', 'model list')]"
Elapsed time is 0.119656 seconds.
Processed example 149 out of 1034

Question: What are the names and ids of all makers with more than 3 models?
SQL: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;
Look for potential candidates "[('names', 0.75), ('ids', 0.75), ('makers', 0.75), ('models', 0.75), ('3', 1.0)]" in database car_1 (include primary keys: True)
Confirmed the following candidates "[('3', 'country id', 'countries'), ('3', 'id', 'car makers'), ('3', 'make id', 'car names'), ('3', 'cylinders', 'cars data'), ('3', 'cont id', 'continents'), ('3', 'model id', 'model list')]"
Elapsed time is 0.071722 seconds.
Processed example 150 out of 1034

Question: Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?
SQL: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;
Look for potential candidates "[('General Motors', 0.75), ('models', 0.75), ('maker', 0.75), ('name', 0.75), ('General', 0.75), ('Motors', 0.75), ('3500', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('General Motors', 'full name', 'car makers')]"
Elapsed time is 0.095330 seconds.
Processed example 151 out of 1034

Question: What are the different models created by either the car maker General Motors or weighed more than 3500?
SQL: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;
Look for potential candidates "[('General Motors', 0.75), ('General', 0.75), ('Motors', 0.75), ('models', 0.75), ('3500', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('General Motors', 'full name', 'car makers')]"
Elapsed time is 0.064939 seconds.
Processed example 152 out of 1034

Question: In which years cars were produced weighing no less than 3000 and no more than 4000 ?
SQL: select distinct year from cars_data where weight between 3000 and 4000;
Look for potential candidates "[('no', 0.9), ('cars', 0.75), ('4000', 1.0), ('3000', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.034513 seconds.
Processed example 153 out of 1034

Question: What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?
SQL: select distinct year from cars_data where weight between 3000 and 4000;
Look for potential candidates "[('cars', 0.75), ('4000', 1.0), ('3000', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.019415 seconds.
Processed example 154 out of 1034

Question: What is the horsepower of the car with the largest accelerate?
SQL: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;
Look for potential candidates "[('horsepower', 0.75), ('car', 0.75), ('largest', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.046933 seconds.
Processed example 155 out of 1034

Question: What is the horsepower of the car with the greatest accelerate?
SQL: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;
Look for potential candidates "[('horsepower', 0.75), ('car', 0.75), ('greatest', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.046589 seconds.
Processed example 156 out of 1034

Question: For model volvo, how many cylinders does the car with the least accelerate have?
SQL: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;
Look for potential candidates "[('model volvo', 0.75), ('model', 0.75), ('volvo', 0.75), ('cylinders', 0.75), ('car', 0.75), ('least', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('Volvo', 'full name', 'car makers'), ('volvo', 'model', 'model list'), ('volvo', 'maker', 'car makers')]"
Elapsed time is 0.091272 seconds.
Processed example 157 out of 1034

Question: For a volvo model, how many cylinders does the version with least accelerate have?
SQL: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;
Look for potential candidates "[('model', 0.75), ('cylinders', 0.75), ('version', 0.75), ('least', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.060820 seconds.
Processed example 158 out of 1034

Question: How many cars have a larger accelerate than the car with the largest horsepower?
SQL: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );
Look for potential candidates "[('cars', 0.75), ('car', 0.75), ('horsepower', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.045610 seconds.
Processed example 159 out of 1034

Question: What is the number of cars with a greater accelerate than the one with the most horsepower?
SQL: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );
Look for potential candidates "[('number', 0.75), ('cars', 0.75), ('horsepower', 0.75), ('one', 0.75), ('1', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.061579 seconds.
Processed example 160 out of 1034

Question: How many countries has more than 2 car makers ?
SQL: select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2
Look for potential candidates "[('countries', 0.75), ('car makers', 0.75), ('car', 0.75), ('makers', 0.75), ('2', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.064271 seconds.
Processed example 161 out of 1034

Question: What is the number of countries with more than 2 car makers ?
SQL: select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2
Look for potential candidates "[('number', 0.75), ('countries', 0.75), ('car makers', 0.75), ('car', 0.75), ('makers', 0.75), ('2', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.077863 seconds.
Processed example 162 out of 1034

Question: How many cars has over 6 cylinders?
SQL: SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;
Look for potential candidates "[('cars', 0.75), ('cylinders', 0.75), ('6', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('6', 'cylinders', 'cars data')]"
Elapsed time is 0.033115 seconds.
Processed example 163 out of 1034

Question: What is the number of carsw ith over 6 cylinders?
SQL: SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;
Look for potential candidates "[('number', 0.75), ('carsw', 0.75), ('cylinders', 0.75), ('6', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('6', 'cylinders', 'cars data')]"
Elapsed time is 0.048016 seconds.
Processed example 164 out of 1034

Question: For the cars with 4 cylinders, which model has the largest horsepower?
SQL: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;
Look for potential candidates "[('cars', 0.75), ('model', 0.75), ('cylinders', 0.75), ('horsepower', 0.75), ('4', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('4', 'cylinders', 'cars data')]"
Elapsed time is 0.063110 seconds.
Processed example 165 out of 1034

Question: For all of the 4 cylinder cars, which model has the most horsepower?
SQL: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;
Look for potential candidates "[('all', 0.75), ('model', 0.75), ('cars', 0.75), ('horsepower', 0.75), ('4', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('4', 'cylinders', 'cars data')]"
Elapsed time is 0.062155 seconds.
Processed example 166 out of 1034

Question: Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.
SQL: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;
Look for potential candidates "[('List', 0.75), ('cars', 0.75), ('horsepower', 0.75), ('ones', 0.75), ('car makeid', 0.75), ('car', 0.75), ('makeid', 0.75), ('cylinders', 0.75), ('name', 0.75), ('3', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('3', 'cylinders', 'cars data')]"
Elapsed time is 0.136386 seconds.
Processed example 167 out of 1034

Question: Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?
SQL: select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;
Look for potential candidates "[('cars', 0.75), ('ids', 0.75), ('horsepower', 0.75), ('cylinders', 0.75), ('names', 0.75), ('4', 1.0)]" in database car_1 (include primary keys: True)
Confirmed the following candidates "[('4', 'cylinders', 'cars data'), ('4', 'country id', 'countries'), ('4', 'make id', 'car names'), ('4', 'id', 'car makers'), ('4', 'model id', 'model list'), ('4', 'cont id', 'continents')]"
Elapsed time is 0.089046 seconds.
Processed example 168 out of 1034

Question: What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ?
SQL: select max(mpg) from cars_data where cylinders  =  8 or year  <  1980
Look for potential candidates "[('car', 0.75), ('gallon', 0.75), ('cylinders', 0.75), ('1980', 1.0), ('8', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('1980', 'weight', 'cars data'), ('1980', 'year', 'cars data'), ('8', 'cylinders', 'cars data')]"
Elapsed time is 0.049998 seconds.
Processed example 169 out of 1034

Question: What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ?
SQL: select max(mpg) from cars_data where cylinders  =  8 or year  <  1980
Look for potential candidates "[('cars', 0.75), ('cylinders', 0.75), ('mpg', 0.75), ('1980', 1.0), ('8', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('1980', 'weight', 'cars data'), ('1980', 'year', 'cars data'), ('8', 'cylinders', 'cars data')]"
Elapsed time is 0.048810 seconds.
Processed example 170 out of 1034

Question: Which models are lighter than 3500 but not built by the 'Ford Motor Company'?
SQL: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';
Look for potential candidates "[('Ford Motor Company', 0.9), ('models', 0.75), ('Ford', 0.75), ('Motor', 0.75), ('Company', 0.75), ('Ford Motor', 0.75), ('Motor Company', 0.75), ('3500', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('ford', 'model', 'model list'), ('Ford Motor Company', 'full name', 'car makers'), ('ford', 'maker', 'car makers')]"
Elapsed time is 0.110121 seconds.
Processed example 171 out of 1034

Question: What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?
SQL: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';
Look for potential candidates "[('Ford Motor Company', 0.75), ('models', 0.75), ('Ford', 0.75), ('Motor', 0.75), ('Company', 0.75), ('Ford Motor', 0.75), ('Motor Company', 0.75), ('3500', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[('ford', 'model', 'model list'), ('Ford Motor Company', 'full name', 'car makers'), ('ford', 'maker', 'car makers')]"
Elapsed time is 0.109149 seconds.
Processed example 172 out of 1034

Question: What are the name of the countries where there is not a single car maker?
SQL: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;
Look for potential candidates "[('countries', 0.75), ('name', 0.75), ('car maker', 0.75), ('car', 0.75), ('maker', 0.75), ('1', 1.0)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.077506 seconds.
Processed example 173 out of 1034

Question: What are the names of the countries with no car makers?
SQL: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;
Look for potential candidates "[('no', 0.9), ('names', 0.75), ('countries', 0.75), ('car makers', 0.75), ('car', 0.75), ('makers', 0.75)]" in database car_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.092895 seconds.
Processed example 174 out of 1034

Question: Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker .
SQL: select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;
Look for potential candidates "[('List', 0.75), ('car makers', 0.75), ('car', 0.75), ('makers', 0.75), ('models', 0.75), ('id', 0.75), ('maker', 0.75), ('2', 1.0), ('3', 1.0)]" in database car_1 (include primary keys: True)
Confirmed the following candidates "[('2', 'make id', 'car names'), ('2', 'country id', 'countries'), ('3', 'country id', 'countries'), ('3', 'id', 'car makers'), ('2', 'model id', 'model list'), ('3', 'make id', 'car names'), ('2', 'id', 'car makers'), ('2', 'cont id', 'continents'), ('3', 'cylinders', 'cars data'), ('3', 'cont id', 'continents')]"
Elapsed time is 0.123734 seconds.
Processed example 175 out of 1034

Question: What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?
SQL: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;
Look for potential candidates "[('car makers', 0.75), ('car', 0.75), ('makers', 0.75), ('ids', 0.75), ('models', 0.75), ('cars', 0.75), ('3', 1.0), ('2', 1.0)]" in database car_1 (include primary keys: True)
Confirmed the following candidates "[('2', 'make id', 'car names'), ('2', 'country id', 'countries'), ('3', 'country id', 'countries'), ('3', 'id', 'car makers'), ('2', 'model id', 'model list'), ('3', 'make id', 'car names'), ('2', 'id', 'car makers'), ('2', 'cont id', 'continents'), ('3', 'cylinders', 'cars data'), ('3', 'cont id', 'continents')]"
Elapsed time is 0.105706 seconds.
Processed example 176 out of 1034

Question: What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?
SQL: SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';
Look for potential candidates "[('fiat', 0.9), ('id', 0.75), ('countries', 0.75), ('names', 0.75), ('car makers', 0.75), ('car', 0.75), ('makers', 0.75), ('model', 0.75), ('3', 1.0)]" in database car_1 (include primary keys: True)
Confirmed the following candidates "[('3', 'country id', 'countries'), ('3', 'id', 'car makers'), ('3', 'make id', 'car names'), ('Fiat', 'full name', 'car makers'), ('3', 'cylinders', 'cars data'), ('3', 'cont id', 'continents'), ('fiat', 'model', 'model list'), ('3', 'model id', 'model list'), ('fiat', 'maker', 'car makers')]"
Elapsed time is 0.139731 seconds.
Processed example 177 out of 1034

Question: What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?
SQL: select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';
Look for potential candidates "[('countries', 0.75), ('names', 0.75), ('ids', 0.75), ('fiat model', 0.75), ('fiat', 0.75), ('model', 0.75), ('car makers', 0.75), ('car', 0.75), ('makers', 0.75), ('3', 1.0)]" in database car_1 (include primary keys: True)
Confirmed the following candidates "[('3', 'country id', 'countries'), ('3', 'id', 'car makers'), ('3', 'make id', 'car names'), ('Fiat', 'full name', 'car makers'), ('3', 'cylinders', 'cars data'), ('3', 'cont id', 'continents'), ('fiat', 'model', 'model list'), ('3', 'model id', 'model list'), ('fiat', 'maker', 'car makers')]"
Elapsed time is 0.157762 seconds.
Processed example 178 out of 1034

Question: Which country does Airline "JetBlue Airways" belong to?
SQL: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
Look for potential candidates "[('JetBlue Airways', 0.9), ('Airline', 0.75), ('country', 0.75), ('JetBlue', 0.75), ('Airways', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('JetBlue', 'abbreviation', 'airlines'), ('JetBlue Airways', 'airline name', 'airlines')]"
Elapsed time is 0.037264 seconds.
Processed example 179 out of 1034

Question: What country is Jetblue Airways affiliated with?
SQL: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
Look for potential candidates "[('Jetblue Airways', 0.75), ('country', 0.75), ('Jetblue', 0.75), ('Airways', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('JetBlue', 'abbreviation', 'airlines'), ('JetBlue Airways', 'airline name', 'airlines')]"
Elapsed time is 0.030061 seconds.
Processed example 180 out of 1034

Question: What is the abbreviation of Airline "JetBlue Airways"?
SQL: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
Look for potential candidates "[('JetBlue Airways', 0.9), ('Airline', 0.75), ('JetBlue', 0.75), ('Airways', 0.75), ('abbreviation', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('JetBlue', 'abbreviation', 'airlines'), ('JetBlue Airways', 'airline name', 'airlines')]"
Elapsed time is 0.037333 seconds.
Processed example 181 out of 1034

Question: Which abbreviation corresponds to Jetblue Airways?
SQL: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
Look for potential candidates "[('Jetblue Airways', 0.75), ('abbreviation', 0.75), ('Jetblue', 0.75), ('Airways', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('JetBlue', 'abbreviation', 'airlines'), ('JetBlue Airways', 'airline name', 'airlines')]"
Elapsed time is 0.030307 seconds.
Processed example 182 out of 1034

Question: List all airline names and their abbreviations in "USA".
SQL: SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"
Look for potential candidates "[('USA', 1.0), ('US', 0.9), ('United States', 0.9), ('United States of America', 0.9), ('airline names', 0.75), ('airline', 0.75), ('names', 0.75), ('abbreviations', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('USA', 'country', 'airlines'), ('US', 'country abbrev', 'airports'), ('United States ', 'country', 'airports')]"
Elapsed time is 0.055526 seconds.
Processed example 183 out of 1034

Question: What are the airline names and abbreviations for airlines in the USA?
SQL: SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"
Look for potential candidates "[('USA', 1.0), ('US', 0.9), ('United States', 0.9), ('United States of America', 0.9), ('airlines', 0.75), ('abbreviations', 0.75), ('airline names', 0.75), ('airline', 0.75), ('names', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('USA', 'country', 'airlines'), ('US', 'country abbrev', 'airports'), ('United States ', 'country', 'airports')]"
Elapsed time is 0.063578 seconds.
Processed example 184 out of 1034

Question: List the airport code and name in the city of Anthony.
SQL: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"
Look for potential candidates "[('Anthony', 0.75), ('airport code', 0.75), ('airport', 0.75), ('code', 0.75), ('name', 0.75), ('city', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('Anthony ', 'airport name', 'airports'), ('Anthony ', 'city', 'airports')]"
Elapsed time is 0.049118 seconds.
Processed example 185 out of 1034

Question: Give the airport code and airport name corresonding to the city Anthony.
SQL: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"
Look for potential candidates "[('Anthony', 0.75), ('airport code', 0.75), ('airport', 0.75), ('code', 0.75), ('airport name', 0.75), ('name', 0.75), ('city', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('Anthony ', 'airport name', 'airports'), ('Anthony ', 'city', 'airports')]"
Elapsed time is 0.056210 seconds.
Processed example 186 out of 1034

Question: How many airlines do we have?
SQL: SELECT count(*) FROM AIRLINES
Look for potential candidates "[('airlines', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.009077 seconds.
Processed example 187 out of 1034

Question: What is the total number of airlines?
SQL: SELECT count(*) FROM AIRLINES
Look for potential candidates "[('number', 0.75), ('airlines', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.018212 seconds.
Processed example 188 out of 1034

Question: How many airports do we have?
SQL: SELECT count(*) FROM AIRPORTS
Look for potential candidates "[('airports', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.009281 seconds.
Processed example 189 out of 1034

Question: Return the number of  airports.
SQL: SELECT count(*) FROM AIRPORTS
Look for potential candidates "[('number', 0.75), ('airports', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.016084 seconds.
Processed example 190 out of 1034

Question: How many flights do we have?
SQL: SELECT count(*) FROM FLIGHTS
Look for potential candidates "[('flights', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.008341 seconds.
Processed example 191 out of 1034

Question: Return the number of flights.
SQL: SELECT count(*) FROM FLIGHTS
Look for potential candidates "[('number', 0.75), ('flights', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.015918 seconds.
Processed example 192 out of 1034

Question: Which airline has abbreviation 'UAL'?
SQL: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"
Look for potential candidates "[('UAL', 1.0), ('AL', 0.9), ('Alabama', 0.9), ('airline', 0.75), ('abbreviation', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('UAL', 'abbreviation', 'airlines')]"
Elapsed time is 0.031504 seconds.
Processed example 193 out of 1034

Question: Give the airline with abbreviation 'UAL'.
SQL: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"
Look for potential candidates "[('UAL', 1.0), ('AL', 0.9), ('Alabama', 0.9), ('airline', 0.75), ('abbreviation', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('UAL', 'abbreviation', 'airlines')]"
Elapsed time is 0.031688 seconds.
Processed example 194 out of 1034

Question: How many airlines are from USA?
SQL: SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"
Look for potential candidates "[('USA', 1.0), ('US', 0.9), ('United States', 0.9), ('United States of America', 0.9), ('airlines', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('USA', 'country', 'airlines'), ('US', 'country abbrev', 'airports'), ('United States ', 'country', 'airports')]"
Elapsed time is 0.032282 seconds.
Processed example 195 out of 1034

Question: Return the number of airlines in the USA.
SQL: SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"
Look for potential candidates "[('USA', 1.0), ('US', 0.9), ('United States', 0.9), ('United States of America', 0.9), ('airlines', 0.75), ('number', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('USA', 'country', 'airlines'), ('US', 'country abbrev', 'airports'), ('United States ', 'country', 'airports')]"
Elapsed time is 0.041641 seconds.
Processed example 196 out of 1034

Question: Which city and country is the Alton airport at?
SQL: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"
Look for potential candidates "[('Alton', 0.75), ('city', 0.75), ('country', 0.75), ('airport', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('Alton ', 'airport name', 'airports'), ('Alton ', 'city', 'airports')]"
Elapsed time is 0.031678 seconds.
Processed example 197 out of 1034

Question: Give the city and country for the Alton airport.
SQL: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"
Look for potential candidates "[('Alton', 0.75), ('city', 0.75), ('country', 0.75), ('airport', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('Alton ', 'airport name', 'airports'), ('Alton ', 'city', 'airports')]"
Elapsed time is 0.032326 seconds.
Processed example 198 out of 1034

Question: What is the airport name for airport 'AKO'?
SQL: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"
Look for potential candidates "[('AKO', 1.0), ('AK', 0.9), ('Alaska', 0.9), ('airport name', 0.75), ('airport', 0.75), ('name', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.039867 seconds.
Processed example 199 out of 1034

Question: Return the name of the airport with code 'AKO'.
SQL: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"
Look for potential candidates "[('AKO', 1.0), ('AK', 0.9), ('Alaska', 0.9), ('airport', 0.75), ('name', 0.75), ('code', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.039532 seconds.
Processed example 200 out of 1034

Question: What are airport names at City 'Aberdeen'?
SQL: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"
Look for potential candidates "[('Aberdeen', 0.9), ('City', 0.75), ('airport names', 0.75), ('airport', 0.75), ('names', 0.75), ("City 'Aberdeen", 0.75), ("'Aberdeen", 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('Aberdeen ', 'city', 'airports')]"
Elapsed time is 0.053088 seconds.
Processed example 201 out of 1034

Question: What are the names of airports in Aberdeen?
SQL: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"
Look for potential candidates "[('Aberdeen', 0.75), ('names', 0.75), ('airports', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('Aberdeen ', 'city', 'airports')]"
Elapsed time is 0.023153 seconds.
Processed example 202 out of 1034

Question: How many flights depart from 'APG'?
SQL: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"
Look for potential candidates "[('APG', 1.0), ('flights', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.009063 seconds.
Processed example 203 out of 1034

Question: Count the number of flights departing from 'APG'.
SQL: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"
Look for potential candidates "[('APG', 1.0), ('number', 0.75), ('flights', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.016314 seconds.
Processed example 204 out of 1034

Question: How many flights have destination ATO?
SQL: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"
Look for potential candidates "[('ATO', 1.0), ('flights', 0.75), ('destination', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.016894 seconds.
Processed example 205 out of 1034

Question: Count the number of flights into ATO.
SQL: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"
Look for potential candidates "[('ATO', 1.0), ('number', 0.75), ('flights', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.016246 seconds.
Processed example 206 out of 1034

Question: How many flights depart from City Aberdeen?
SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
Look for potential candidates "[('City Aberdeen', 0.75), ('flights', 0.75), ('City', 0.75), ('Aberdeen', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('Aberdeen ', 'city', 'airports')]"
Elapsed time is 0.030782 seconds.
Processed example 207 out of 1034

Question: Return the number of flights departing from Aberdeen.
SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
Look for potential candidates "[('Aberdeen', 0.75), ('flights', 0.75), ('number', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('Aberdeen ', 'city', 'airports')]"
Elapsed time is 0.023084 seconds.
Processed example 208 out of 1034

Question: How many flights arriving in Aberdeen city?
SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
Look for potential candidates "[('Aberdeen', 0.75), ('flights', 0.75), ('city', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('Aberdeen ', 'city', 'airports')]"
Elapsed time is 0.023535 seconds.
Processed example 209 out of 1034

Question: Return the number of flights arriving in Aberdeen.
SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
Look for potential candidates "[('Aberdeen', 0.75), ('flights', 0.75), ('number', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('Aberdeen ', 'city', 'airports')]"
Elapsed time is 0.023572 seconds.
Processed example 210 out of 1034

Question: How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?
SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"
Look for potential candidates "[('Aberdeen', 0.9), ('Ashley', 0.9), ('City', 0.75), ('flights', 0.75), ("City 'Ashley", 0.75), ("'Ashley", 0.75), ('destination', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.053548 seconds.
Processed example 211 out of 1034

Question: How many flights fly from Aberdeen to Ashley?
SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"
Look for potential candidates "[('Aberdeen', 0.75), ('Ashley', 0.75), ('flights', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('Aberdeen ', 'city', 'airports'), ('Ashley ', 'airport name', 'airports'), ('Ashley ', 'city', 'airports')]"
Elapsed time is 0.023786 seconds.
Processed example 212 out of 1034

Question: How many flights does airline 'JetBlue Airways' have?
SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"
Look for potential candidates "[('JetBlue Airways', 0.9), ('flights', 0.75), ('JetBlue', 0.75), ('Airways', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('JetBlue', 'abbreviation', 'airlines'), ('JetBlue Airways', 'airline name', 'airlines')]"
Elapsed time is 0.031675 seconds.
Processed example 213 out of 1034

Question: Give the number of Jetblue Airways flights.
SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"
Look for potential candidates "[('Jetblue Airways', 0.75), ('number', 0.75), ('Jetblue', 0.75), ('Airways', 0.75), ('flights', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('JetBlue', 'abbreviation', 'airlines'), ('JetBlue Airways', 'airline name', 'airlines')]"
Elapsed time is 0.039780 seconds.
Processed example 214 out of 1034

Question: How many 'United Airlines' flights go to Airport 'ASY'?
SQL: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"
Look for potential candidates "[('United Airlines', 0.9), ('ASY', 1.0), ('Airport', 0.75), ('flights', 0.75), ('United', 0.75), ('Airlines', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('United Airlines', 'airline name', 'airlines')]"
Elapsed time is 0.040613 seconds.
Processed example 215 out of 1034

Question: Count the number of United Airlines flights arriving in ASY Airport.
SQL: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"
Look for potential candidates "[('ASY', 1.0), ('United Airlines', 0.75), ('ASY Airport', 0.75), ('number', 0.75), ('flights', 0.75), ('United', 0.75), ('Airlines', 0.75), ('Airport', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('United Airlines', 'airline name', 'airlines')]"
Elapsed time is 0.055749 seconds.
Processed example 216 out of 1034

Question: How many 'United Airlines' flights depart from Airport 'AHD'?
SQL: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"
Look for potential candidates "[('United Airlines', 0.9), ('AHD', 1.0), ('Airport', 0.75), ('flights', 0.75), ('United', 0.75), ('Airlines', 0.75), ("Airport 'AHD", 0.75), ("'AHD", 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('United Airlines', 'airline name', 'airlines')]"
Elapsed time is 0.055423 seconds.
Processed example 217 out of 1034

Question: Return the number of United Airlines flights leaving from AHD Airport.
SQL: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"
Look for potential candidates "[('AHD', 1.0), ('United Airlines', 0.75), ('AHD Airport', 0.75), ('flights', 0.75), ('number', 0.75), ('United', 0.75), ('Airlines', 0.75), ('Airport', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('United Airlines', 'airline name', 'airlines')]"
Elapsed time is 0.054857 seconds.
Processed example 218 out of 1034

Question: How many United Airlines flights go to City 'Aberdeen'?
SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"
Look for potential candidates "[('Aberdeen', 0.9), ('United Airlines', 0.75), ('City', 0.75), ('flights', 0.75), ('United', 0.75), ('Airlines', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('United Airlines', 'airline name', 'airlines')]"
Elapsed time is 0.047589 seconds.
Processed example 219 out of 1034

Question: Count the number of United Airlines flights that arrive in Aberdeen.
SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"
Look for potential candidates "[('United Airlines', 0.75), ('Aberdeen', 0.75), ('flights', 0.75), ('number', 0.75), ('United', 0.75), ('Airlines', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('United Airlines', 'airline name', 'airlines'), ('Aberdeen ', 'city', 'airports')]"
Elapsed time is 0.046952 seconds.
Processed example 220 out of 1034

Question: Which city has most number of arriving flights?
SQL: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('city', 0.75), ('number', 0.75), ('flights', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.023420 seconds.
Processed example 221 out of 1034

Question: Which city has the most frequent destination airport?
SQL: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('city', 0.75), ('destination airport', 0.75), ('destination', 0.75), ('airport', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.031268 seconds.
Processed example 222 out of 1034

Question: Which city has most number of departing flights?
SQL: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('city', 0.75), ('number', 0.75), ('flights', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.023192 seconds.
Processed example 223 out of 1034

Question: Which city is the most frequent source airport?
SQL: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('city', 0.75), ('source airport', 0.75), ('source', 0.75), ('airport', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.030406 seconds.
Processed example 224 out of 1034

Question: What is the code of airport that has the highest number of flights?
SQL: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('code', 0.75), ('airport', 0.75), ('flights', 0.75), ('number', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.030403 seconds.
Processed example 225 out of 1034

Question: What is the airport code of the airport with the most flights?
SQL: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('airport code', 0.75), ('airport', 0.75), ('code', 0.75), ('flights', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.030208 seconds.
Processed example 226 out of 1034

Question: What is the code of airport that has fewest number of flights?
SQL: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1
Look for potential candidates "[('code', 0.75), ('airport', 0.75), ('flights', 0.75), ('number', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.030290 seconds.
Processed example 227 out of 1034

Question: Give the code of the airport with the least flights.
SQL: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1
Look for potential candidates "[('code', 0.75), ('airport', 0.75), ('flights', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.022858 seconds.
Processed example 228 out of 1034

Question: Which airline has most number of flights?
SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('airline', 0.75), ('number', 0.75), ('flights', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.023207 seconds.
Processed example 229 out of 1034

Question: What airline serves the most flights?
SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('airline', 0.75), ('flights', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.015925 seconds.
Processed example 230 out of 1034

Question: Find the abbreviation and country of the airline that has fewest number of flights?
SQL: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
Look for potential candidates "[('airline', 0.75), ('abbreviation', 0.75), ('country', 0.75), ('flights', 0.75), ('number', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.038158 seconds.
Processed example 231 out of 1034

Question: What is the abbreviation of the airilne has the fewest flights and what country is it in?
SQL: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
Look for potential candidates "[('abbreviation', 0.75), ('airilne', 0.75), ('flights', 0.75), ('country', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.030625 seconds.
Processed example 232 out of 1034

Question: What are airlines that have some flight departing from airport 'AHD'?
SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"
Look for potential candidates "[('AHD', 1.0), ('airlines', 0.75), ('flight', 0.75), ('airport', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.023707 seconds.
Processed example 233 out of 1034

Question: Which airlines have a flight with source airport AHD?
SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"
Look for potential candidates "[('AHD', 1.0), ('airlines', 0.75), ('flight', 0.75), ('source airport AHD', 0.75), ('source', 0.75), ('airport', 0.75), ('source airport', 0.75), ('airport AHD', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.055006 seconds.
Processed example 234 out of 1034

Question: What are airlines that have flights arriving at airport 'AHD'?
SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"
Look for potential candidates "[('AHD', 1.0), ('airlines', 0.75), ('flights', 0.75), ('airport', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.023840 seconds.
Processed example 235 out of 1034

Question: Which airlines have a flight with destination airport AHD?
SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"
Look for potential candidates "[('AHD', 1.0), ('airlines', 0.75), ('flight', 0.75), ('destination airport AHD', 0.75), ('destination', 0.75), ('airport', 0.75), ('destination airport', 0.75), ('airport AHD', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.054226 seconds.
Processed example 236 out of 1034

Question: Find all airlines that have flights from both airports 'APG' and 'CVO'.
SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"
Look for potential candidates "[('APG', 1.0), ('CVO', 1.0), ('airlines', 0.75), ('airports', 0.75), ('flights', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.024487 seconds.
Processed example 237 out of 1034

Question: Which airlines have departing flights from both APG and CVO airports?
SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"
Look for potential candidates "[('APG', 1.0), ('CVO', 1.0), ('airlines', 0.75), ('flights', 0.75), ('airports', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.024489 seconds.
Processed example 238 out of 1034

Question: Find all airlines that have flights from airport 'CVO' but not from 'APG'.
SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"
Look for potential candidates "[('CVO', 1.0), ('APG', 1.0), ('airlines', 0.75), ('airport', 0.75), ('flights', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.024437 seconds.
Processed example 239 out of 1034

Question: Which airlines have departures from CVO but not from APG airports?
SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"
Look for potential candidates "[('CVO', 1.0), ('APG', 1.0), ('airlines', 0.75), ('departures', 0.75), ('airports', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.024608 seconds.
Processed example 240 out of 1034

Question: Find all airlines that have at least 10 flights.
SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10
Look for potential candidates "[('airlines', 0.75), ('flights', 0.75), ('10', 1.0)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('10', 'flight number', 'flights')]"
Elapsed time is 0.016496 seconds.
Processed example 241 out of 1034

Question: Which airlines have at least 10 flights?
SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10
Look for potential candidates "[('airlines', 0.75), ('flights', 0.75), ('10', 1.0)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('10', 'flight number', 'flights')]"
Elapsed time is 0.016418 seconds.
Processed example 242 out of 1034

Question: Find all airlines that have fewer than 200 flights.
SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200
Look for potential candidates "[('airlines', 0.75), ('flights', 0.75), ('200', 1.0)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('200', 'flight number', 'flights')]"
Elapsed time is 0.016370 seconds.
Processed example 243 out of 1034

Question: Which airlines have less than 200 flights?
SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200
Look for potential candidates "[('airlines', 0.75), ('flights', 0.75), ('200', 1.0)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('200', 'flight number', 'flights')]"
Elapsed time is 0.016432 seconds.
Processed example 244 out of 1034

Question: What are flight numbers of Airline "United Airlines"?
SQL: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"
Look for potential candidates "[('United Airlines', 0.9), ('United', 0.75), ('Airlines', 0.75), ('flight numbers', 0.75), ('flight', 0.75), ('numbers', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('United Airlines', 'airline name', 'airlines')]"
Elapsed time is 0.044858 seconds.
Processed example 245 out of 1034

Question: Which flight numbers correspond to United Airlines flights?
SQL: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"
Look for potential candidates "[('United Airlines', 0.75), ('flight numbers', 0.75), ('flight', 0.75), ('numbers', 0.75), ('flights', 0.75), ('United', 0.75), ('Airlines', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('United Airlines', 'airline name', 'airlines')]"
Elapsed time is 0.052931 seconds.
Processed example 246 out of 1034

Question: What are flight numbers of flights departing from Airport "APG"?
SQL: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"
Look for potential candidates "[('APG', 1.0), ('Airport', 0.75), ('flight numbers', 0.75), ('flight', 0.75), ('numbers', 0.75), ('flights', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.038967 seconds.
Processed example 247 out of 1034

Question: Give the flight numbers of flights leaving from APG.
SQL: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"
Look for potential candidates "[('APG', 1.0), ('flights', 0.75), ('flight numbers', 0.75), ('flight', 0.75), ('numbers', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.031837 seconds.
Processed example 248 out of 1034

Question: What are flight numbers of flights arriving at Airport "APG"?
SQL: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"
Look for potential candidates "[('APG', 1.0), ('Airport', 0.75), ('flight numbers', 0.75), ('flight', 0.75), ('numbers', 0.75), ('flights', 0.75), ('Airport ``APG', 0.75), ('``APG', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.053328 seconds.
Processed example 249 out of 1034

Question: Give the flight numbers of flights landing at APG.
SQL: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"
Look for potential candidates "[('APG', 1.0), ('flights', 0.75), ('flight numbers', 0.75), ('flight', 0.75), ('numbers', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.031809 seconds.
Processed example 250 out of 1034

Question: What are flight numbers of flights departing from City "Aberdeen "?
SQL: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
Look for potential candidates "[('Aberdeen ', 0.9), ('City', 0.75), ('Aberdeen', 0.75), ('flight numbers', 0.75), ('flight', 0.75), ('numbers', 0.75), ('flights', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('Aberdeen ', 'city', 'airports'), ('Aberdeen ', 'city', 'airports')]"
Elapsed time is 0.054358 seconds.
Processed example 251 out of 1034

Question: Give the flight numbers of flights leaving from Aberdeen.
SQL: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
Look for potential candidates "[('Aberdeen', 0.75), ('flights', 0.75), ('flight numbers', 0.75), ('flight', 0.75), ('numbers', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('Aberdeen ', 'city', 'airports')]"
Elapsed time is 0.038818 seconds.
Processed example 252 out of 1034

Question: What are flight numbers of flights arriving at City "Aberdeen"?
SQL: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
Look for potential candidates "[('Aberdeen', 0.9), ('City', 0.75), ('flight numbers', 0.75), ('flight', 0.75), ('numbers', 0.75), ('flights', 0.75), ('City ``Aberdeen', 0.75), ('``Aberdeen', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.061410 seconds.
Processed example 253 out of 1034

Question: Give the flight numbers of flights arriving in Aberdeen.
SQL: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
Look for potential candidates "[('Aberdeen', 0.75), ('flights', 0.75), ('flight numbers', 0.75), ('flight', 0.75), ('numbers', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('Aberdeen ', 'city', 'airports')]"
Elapsed time is 0.038201 seconds.
Processed example 254 out of 1034

Question: Find the number of flights landing in the city of Aberdeen or Abilene.
SQL: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"
Look for potential candidates "[('Aberdeen', 0.75), ('Abilene', 0.75), ('number', 0.75), ('flights', 0.75), ('city', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('Aberdeen ', 'city', 'airports'), ('Abilene ', 'city', 'airports')]"
Elapsed time is 0.037982 seconds.
Processed example 255 out of 1034

Question: How many flights land in Aberdeen or Abilene?
SQL: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"
Look for potential candidates "[('Aberdeen', 0.75), ('Abilene', 0.75), ('flights', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[('Aberdeen ', 'city', 'airports'), ('Abilene ', 'city', 'airports')]"
Elapsed time is 0.022907 seconds.
Processed example 256 out of 1034

Question: Find the name of airports which do not have any flight in and out.
SQL: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
Look for potential candidates "[('airports', 0.75), ('name', 0.75), ('flight', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.023224 seconds.
Processed example 257 out of 1034

Question: Which airports do not have departing or arriving flights?
SQL: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
Look for potential candidates "[('airports', 0.75), ('flights', 0.75)]" in database flight_2 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.015894 seconds.
Processed example 258 out of 1034

Question: How many employees are there?
SQL: SELECT count(*) FROM employee
Look for potential candidates "[('employees', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001217 seconds.
Processed example 259 out of 1034

Question: Count the number of employees
SQL: SELECT count(*) FROM employee
Look for potential candidates "[('number', 0.75), ('employees', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001340 seconds.
Processed example 260 out of 1034

Question: Sort employee names by their age in ascending order.
SQL: SELECT name FROM employee ORDER BY age
Look for potential candidates "[('employee names', 0.75), ('employee', 0.75), ('names', 0.75), ('age', 0.75), ('order', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002807 seconds.
Processed example 261 out of 1034

Question: List the names of employees and sort in ascending order of age.
SQL: SELECT name FROM employee ORDER BY age
Look for potential candidates "[('names', 0.75), ('employees', 0.75), ('age', 0.75), ('order', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002328 seconds.
Processed example 262 out of 1034

Question: What is the number of employees from each city?
SQL: SELECT count(*) ,  city FROM employee GROUP BY city
Look for potential candidates "[('number', 0.75), ('employees', 0.75), ('city', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001847 seconds.
Processed example 263 out of 1034

Question: Count the number of employees for each city.
SQL: SELECT count(*) ,  city FROM employee GROUP BY city
Look for potential candidates "[('number', 0.75), ('employees', 0.75), ('city', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001955 seconds.
Processed example 264 out of 1034

Question: Which cities do more than one employee under age 30 come from?
SQL: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
Look for potential candidates "[('cities', 0.75), ('employee', 0.75), ('age', 0.75), ('30', 1.0), ('1', 1.0)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[('30', 'age', 'employee')]"
Elapsed time is 0.002048 seconds.
Processed example 265 out of 1034

Question: Find the cities that have more than one employee under age 30.
SQL: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
Look for potential candidates "[('cities', 0.75), ('employee', 0.75), ('age', 0.75), ('1', 1.0), ('30', 1.0)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[('30', 'age', 'employee')]"
Elapsed time is 0.001885 seconds.
Processed example 266 out of 1034

Question: Find the number of shops in each location.
SQL: SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION
Look for potential candidates "[('number', 0.75), ('shops', 0.75), ('location', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001933 seconds.
Processed example 267 out of 1034

Question: How many shops are there in each location?
SQL: SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION
Look for potential candidates "[('shops', 0.75), ('location', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001403 seconds.
Processed example 268 out of 1034

Question: Find the manager name and district of the shop whose number of products is the largest.
SQL: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
Look for potential candidates "[('largest', 0.75), ('manager name', 0.75), ('manager', 0.75), ('name', 0.75), ('shop', 0.75), ('district', 0.75), ('products', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003812 seconds.
Processed example 269 out of 1034

Question: What are the manager name and district of the shop that sells the largest number of products?
SQL: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
Look for potential candidates "[('shop', 0.75), ('manager name', 0.75), ('manager', 0.75), ('name', 0.75), ('district', 0.75), ('number', 0.75), ('products', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003721 seconds.
Processed example 270 out of 1034

Question: find the minimum and maximum number of products of all stores.
SQL: SELECT min(Number_products) ,  max(Number_products) FROM shop
Look for potential candidates "[('number', 0.75), ('products', 0.75), ('stores', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001809 seconds.
Processed example 271 out of 1034

Question: What are the minimum and maximum number of products across all the shops?
SQL: SELECT min(Number_products) ,  max(Number_products) FROM shop
Look for potential candidates "[('number', 0.75), ('products', 0.75), ('shops', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001855 seconds.
Processed example 272 out of 1034

Question: Return the name, location and district of all shops in descending order of number of products.
SQL: SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
Look for potential candidates "[('name', 0.75), ('location', 0.75), ('shops', 0.75), ('district', 0.75), ('number', 0.75), ('products', 0.75), ('order', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003795 seconds.
Processed example 273 out of 1034

Question: Sort all the shops by number products in descending order, and return the name, location and district of each shop.
SQL: SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
Look for potential candidates "[('shops', 0.75), ('order', 0.75), ('products', 0.75), ('district', 0.75), ('name', 0.75), ('shop', 0.75), ('location', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003727 seconds.
Processed example 274 out of 1034

Question: Find the names of stores whose number products is more than the average number of products.
SQL: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
Look for potential candidates "[('names', 0.75), ('stores', 0.75), ('products', 0.75), ('number', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002322 seconds.
Processed example 275 out of 1034

Question: Which shops' number products is above the average? Give me the shop names.
SQL: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
Look for potential candidates "[('Give', 0.75), ('shops', 0.75), ('products', 0.75), ('average', 0.75), ('shop names', 0.75), ('shop', 0.75), ('names', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003856 seconds.
Processed example 276 out of 1034

Question: find the name of employee who was awarded the most times in the evaluation.
SQL: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('name', 0.75), ('employee', 0.75), ('evaluation', 0.75), ('times', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002348 seconds.
Processed example 277 out of 1034

Question: Which employee received the most awards in evaluations? Give me the employee name.
SQL: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('Give', 0.75), ('employee', 0.75), ('awards', 0.75), ('evaluations', 0.75), ('employee name', 0.75), ('name', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003330 seconds.
Processed example 278 out of 1034

Question: Find the name of the employee who got the highest one time bonus.
SQL: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
Look for potential candidates "[('employee', 0.75), ('name', 0.75), ('bonus', 0.75), ('1', 1.0)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001877 seconds.
Processed example 279 out of 1034

Question: Which employee received the biggest bonus? Give me the employee name.
SQL: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
Look for potential candidates "[('Give', 0.75), ('employee', 0.75), ('bonus', 0.75), ('employee name', 0.75), ('name', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002816 seconds.
Processed example 280 out of 1034

Question: Find the names of employees who never won any award in the evaluation.
SQL: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
Look for potential candidates "[('employees', 0.75), ('names', 0.75), ('evaluation', 0.75), ('award', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002385 seconds.
Processed example 281 out of 1034

Question: What are the names of the employees who never received any evaluation?
SQL: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
Look for potential candidates "[('employees', 0.75), ('names', 0.75), ('evaluation', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001860 seconds.
Processed example 282 out of 1034

Question: What is the name of the shop that is hiring the largest number of employees?
SQL: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('shop', 0.75), ('name', 0.75), ('employees', 0.75), ('number', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002291 seconds.
Processed example 283 out of 1034

Question: Which shop has the most employees? Give me the shop name.
SQL: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('Give', 0.75), ('shop', 0.75), ('employees', 0.75), ('shop name', 0.75), ('name', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002783 seconds.
Processed example 284 out of 1034

Question: Find the name of the shops that do not hire any employee.
SQL: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
Look for potential candidates "[('shops', 0.75), ('name', 0.75), ('employee', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001873 seconds.
Processed example 285 out of 1034

Question: Which shops run with no employees? Find the shop names
SQL: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
Look for potential candidates "[('no', 0.9), ('Find', 0.75), ('shops', 0.75), ('employees', 0.75), ('shop names', 0.75), ('shop', 0.75), ('names', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003664 seconds.
Processed example 286 out of 1034

Question: Find the number of employees hired in each shop; show the shop name as well.
SQL: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name
Look for potential candidates "[('number', 0.75), ('employees', 0.75), ('shop', 0.75), ('shop name', 0.75), ('name', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002841 seconds.
Processed example 287 out of 1034

Question: For each shop, return the number of employees working there and the name of the shop.
SQL: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name
Look for potential candidates "[('shop', 0.75), ('employees', 0.75), ('number', 0.75), ('name', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002246 seconds.
Processed example 288 out of 1034

Question: What is total bonus given in all evaluations?
SQL: SELECT sum(bonus) FROM evaluation
Look for potential candidates "[('bonus', 0.75), ('evaluations', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001402 seconds.
Processed example 289 out of 1034

Question: Find the total amount of bonus given in all the evaluations.
SQL: SELECT sum(bonus) FROM evaluation
Look for potential candidates "[('amount', 0.75), ('bonus', 0.75), ('evaluations', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001861 seconds.
Processed example 290 out of 1034

Question: Give me all the information about hiring.
SQL: SELECT * FROM hiring
Look for potential candidates "[('information', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000875 seconds.
Processed example 291 out of 1034

Question: What is all the information about hiring?
SQL: SELECT * FROM hiring
Look for potential candidates "[('information', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000877 seconds.
Processed example 292 out of 1034

Question: Which district has both stores with less than 3000 products and stores with more than 10000 products?
SQL: SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000
Look for potential candidates "[('district', 0.75), ('stores', 0.75), ('products', 0.75), ('3000', 1.0), ('10000', 1.0)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[('10000', 'number products', 'shop')]"
Elapsed time is 0.001987 seconds.
Processed example 293 out of 1034

Question: Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.
SQL: SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000
Look for potential candidates "[('districts', 0.75), ('shops', 0.75), ('products', 0.75), ('3000', 1.0), ('10000', 1.0)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[('10000', 'number products', 'shop')]"
Elapsed time is 0.001999 seconds.
Processed example 294 out of 1034

Question: How many different store locations are there?
SQL: SELECT count(DISTINCT LOCATION) FROM shop
Look for potential candidates "[('store locations', 0.75), ('store', 0.75), ('locations', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001812 seconds.
Processed example 295 out of 1034

Question: Count the number of distinct store locations.
SQL: SELECT count(DISTINCT LOCATION) FROM shop
Look for potential candidates "[('number', 0.75), ('store locations', 0.75), ('store', 0.75), ('locations', 0.75)]" in database employee_hire_evaluation (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002323 seconds.
Processed example 296 out of 1034

Question: How many documents do we have?
SQL: SELECT count(*) FROM Documents
Look for potential candidates "[('documents', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001133 seconds.
Processed example 297 out of 1034

Question: Count the number of documents.
SQL: SELECT count(*) FROM Documents
Look for potential candidates "[('number', 0.75), ('documents', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001764 seconds.
Processed example 298 out of 1034

Question: List document IDs, document names, and document descriptions for all documents.
SQL: SELECT document_id ,  document_name ,  document_description FROM Documents
Look for potential candidates "[('ID', 1.0), ('IDs', 0.75), ('Idaho', 0.9), ('List document IDs', 0.75), ('List', 0.75), ('document', 0.75), ('List document', 0.75), ('document IDs', 0.75), ('document names', 0.75), ('names', 0.75), ('documents', 0.75), ('descriptions', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.011001 seconds.
Processed example 299 out of 1034

Question: What are the ids, names, and descriptions for all documents?
SQL: SELECT document_id ,  document_name ,  document_description FROM Documents
Look for potential candidates "[('ids', 0.75), ('names', 0.75), ('descriptions', 0.75), ('documents', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.004208 seconds.
Processed example 300 out of 1034

Question: What is the document name and template id for document with description with the letter 'w' in it?
SQL: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"
Look for potential candidates "[('description', 0.75), ('document name', 0.75), ('document', 0.75), ('name', 0.75), ('id', 0.75), ('template', 0.75), ('letter', 0.75), ('w', 1.0)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[('w', 'document description', 'documents')]"
Elapsed time is 0.007103 seconds.
Processed example 301 out of 1034

Question: Return the names and template ids for documents that contain the letter w in their description.
SQL: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"
Look for potential candidates "[('names', 0.75), ('documents', 0.75), ('template ids', 0.75), ('template', 0.75), ('ids', 0.75), ('description', 0.75), ('letter', 0.75), ('w', 1.0)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[('w', 'document description', 'documents')]"
Elapsed time is 0.007259 seconds.
Processed example 302 out of 1034

Question: What is the document id, template id and description for document named "Robbin CV"?
SQL: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"
Look for potential candidates "[('Robbin CV', 0.9), ('CV', 1.0), ('document id', 0.75), ('document', 0.75), ('id', 0.75), ('template id', 0.75), ('template', 0.75), ('description', 0.75), ('Robbin', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[('CV', 'template type description', 'reference template types'), ('Robbin CV', 'document name', 'documents'), ('CV', 'template type code', 'reference template types')]"
Elapsed time is 0.008172 seconds.
Processed example 303 out of 1034

Question: Return the document id, template id, and description for the document with the name Robbin CV.
SQL: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"
Look for potential candidates "[('CV', 1.0), ('Robbin CV', 0.75), ('Robbin', 0.75), ('template id', 0.75), ('template', 0.75), ('id', 0.75), ('document id', 0.75), ('document', 0.75), ('description', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[('CV', 'template type description', 'reference template types'), ('Robbin CV', 'document name', 'documents'), ('CV', 'template type code', 'reference template types')]"
Elapsed time is 0.008220 seconds.
Processed example 304 out of 1034

Question: How many different templates do all document use?
SQL: SELECT count(DISTINCT template_id) FROM Documents
Look for potential candidates "[('templates', 0.75), ('document use', 0.75), ('document', 0.75), ('use', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003321 seconds.
Processed example 305 out of 1034

Question: Count the number of different templates used for documents.
SQL: SELECT count(DISTINCT template_id) FROM Documents
Look for potential candidates "[('number', 0.75), ('templates', 0.75), ('documents', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002601 seconds.
Processed example 306 out of 1034

Question: How many documents are using the template with type code 'PPT'?
SQL: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'
Look for potential candidates "[('PPT', 1.0), ('documents', 0.75), ('template', 0.75), ('type code', 0.75), ('type', 0.75), ('code', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.004170 seconds.
Processed example 307 out of 1034

Question: Count the number of documents that use the PPT template type.
SQL: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'
Look for potential candidates "[('PPT', 1.0), ('documents', 0.75), ('number', 0.75), ('template type', 0.75), ('template', 0.75), ('type', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.004060 seconds.
Processed example 308 out of 1034

Question: Show all template ids and number of documents using each template.
SQL: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id
Look for potential candidates "[('number', 0.75), ('documents', 0.75), ('template', 0.75), ('template ids', 0.75), ('ids', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.005218 seconds.
Processed example 309 out of 1034

Question: What are all different template ids used for documents, and how many times were each of them used?
SQL: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id
Look for potential candidates "[('template ids', 0.75), ('template', 0.75), ('ids', 0.75), ('documents', 0.75), ('times', 0.75), ('each', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.006130 seconds.
Processed example 310 out of 1034

Question: What is the id and type code for the template used by the most documents?
SQL: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('id', 0.75), ('type code', 0.75), ('type', 0.75), ('code', 0.75), ('template', 0.75), ('documents', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.006180 seconds.
Processed example 311 out of 1034

Question: Return the id and type code of the template that is used for the greatest number of documents.
SQL: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('id', 0.75), ('template', 0.75), ('number', 0.75), ('type code', 0.75), ('type', 0.75), ('code', 0.75), ('documents', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.007112 seconds.
Processed example 312 out of 1034

Question: Show ids for all templates that are used by more than one document.
SQL: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1
Look for potential candidates "[('Show ids', 0.75), ('Show', 0.75), ('ids', 0.75), ('templates', 0.75), ('document', 0.75), ('1', 1.0)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[('1', 'template id', 'templates'), ('1', 'document id', 'documents'), ('1', 'version number', 'templates')]"
Elapsed time is 0.005346 seconds.
Processed example 313 out of 1034

Question: What are the template ids of any templates used in more than a single document?
SQL: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1
Look for potential candidates "[('template ids', 0.75), ('template', 0.75), ('ids', 0.75), ('templates', 0.75), ('document', 0.75), ('1', 1.0)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[('1', 'template id', 'templates'), ('1', 'document id', 'documents'), ('1', 'version number', 'templates')]"
Elapsed time is 0.005364 seconds.
Processed example 314 out of 1034

Question: Show ids for all templates not used by any document.
SQL: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
Look for potential candidates "[('Show ids', 0.75), ('Show', 0.75), ('ids', 0.75), ('templates', 0.75), ('document', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.005415 seconds.
Processed example 315 out of 1034

Question: What are the ids for templates that are not used in any documents?
SQL: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
Look for potential candidates "[('templates', 0.75), ('ids', 0.75), ('documents', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.003310 seconds.
Processed example 316 out of 1034

Question: How many templates do we have?
SQL: SELECT count(*) FROM Templates
Look for potential candidates "[('templates', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001149 seconds.
Processed example 317 out of 1034

Question: Count the number of templates.
SQL: SELECT count(*) FROM Templates
Look for potential candidates "[('number', 0.75), ('templates', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001815 seconds.
Processed example 318 out of 1034

Question: Show template ids, version numbers, and template type codes for all templates.
SQL: SELECT template_id ,  version_number ,  template_type_code FROM Templates
Look for potential candidates "[('Show template ids', 0.75), ('Show', 0.75), ('template', 0.75), ('ids', 0.75), ('Show template', 0.75), ('template ids', 0.75), ('version numbers', 0.75), ('version', 0.75), ('numbers', 0.75), ('templates', 0.75), ('template type codes', 0.75), ('type', 0.75), ('codes', 0.75), ('template type', 0.75), ('type codes', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.015294 seconds.
Processed example 319 out of 1034

Question: What are the ids, version numbers, and type codes for each template?
SQL: SELECT template_id ,  version_number ,  template_type_code FROM Templates
Look for potential candidates "[('ids', 0.75), ('version numbers', 0.75), ('version', 0.75), ('numbers', 0.75), ('template', 0.75), ('type codes', 0.75), ('type', 0.75), ('codes', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.007994 seconds.
Processed example 320 out of 1034

Question: Show all distinct template type codes for all templates.
SQL: SELECT DISTINCT template_type_code FROM Templates
Look for potential candidates "[('templates', 0.75), ('template type codes', 0.75), ('template', 0.75), ('type', 0.75), ('codes', 0.75), ('template type', 0.75), ('type codes', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.005554 seconds.
Processed example 321 out of 1034

Question: What are the different template type codes?
SQL: SELECT DISTINCT template_type_code FROM Templates
Look for potential candidates "[('template type codes', 0.75), ('template', 0.75), ('type', 0.75), ('codes', 0.75), ('template type', 0.75), ('type codes', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.004933 seconds.
Processed example 322 out of 1034

Question: What are the ids of templates with template type code PP or PPT?
SQL: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
Look for potential candidates "[('PP', 1.0), ('PPT', 1.0), ('ids', 0.75), ('templates', 0.75), ('template type code', 0.75), ('template', 0.75), ('type', 0.75), ('code', 0.75), ('template type', 0.75), ('type code', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[('PPT', 'template type code', 'reference template types'), ('PP', 'template type code', 'reference template types')]"
Elapsed time is 0.008353 seconds.
Processed example 323 out of 1034

Question: Return the ids of templates that have the code PP or PPT.
SQL: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
Look for potential candidates "[('PP', 1.0), ('PPT', 1.0), ('templates', 0.75), ('ids', 0.75), ('code', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[('PPT', 'template type code', 'reference template types'), ('PP', 'template type code', 'reference template types')]"
Elapsed time is 0.003407 seconds.
Processed example 324 out of 1034

Question: How many templates have template type code CV?
SQL: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"
Look for potential candidates "[('CV', 1.0), ('templates', 0.75), ('template type code CV', 0.75), ('template', 0.75), ('type', 0.75), ('code', 0.75), ('template type', 0.75), ('type code', 0.75), ('code CV', 0.75), ('template type code', 0.75), ('type code CV', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[('CV', 'template type description', 'reference template types')]"
Elapsed time is 0.007631 seconds.
Processed example 325 out of 1034

Question: Count the number of templates of the type CV.
SQL: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"
Look for potential candidates "[('CV', 1.0), ('number', 0.75), ('templates', 0.75), ('type CV', 0.75), ('type', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[('CV', 'template type description', 'reference template types')]"
Elapsed time is 0.003287 seconds.
Processed example 326 out of 1034

Question: What is the version number and template type code for the template with version number later than 5?
SQL: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5
Look for potential candidates "[('version number', 0.75), ('version', 0.75), ('number', 0.75), ('template', 0.75), ('template type code', 0.75), ('type', 0.75), ('code', 0.75), ('template type', 0.75), ('type code', 0.75), ('5', 1.0)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[('5', 'version number', 'templates')]"
Elapsed time is 0.006835 seconds.
Processed example 327 out of 1034

Question: Return the version numbers and template type codes of templates with a version number greater than 5.
SQL: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5
Look for potential candidates "[('templates', 0.75), ('version numbers', 0.75), ('version', 0.75), ('numbers', 0.75), ('template type codes', 0.75), ('template', 0.75), ('type', 0.75), ('codes', 0.75), ('template type', 0.75), ('type codes', 0.75), ('version number', 0.75), ('number', 0.75), ('5', 1.0)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[('5', 'version number', 'templates')]"
Elapsed time is 0.009039 seconds.
Processed example 328 out of 1034

Question: Show all template type codes and number of templates for each.
SQL: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code
Look for potential candidates "[('number', 0.75), ('each', 0.75), ('template type codes', 0.75), ('template', 0.75), ('type', 0.75), ('codes', 0.75), ('template type', 0.75), ('type codes', 0.75), ('templates', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.006871 seconds.
Processed example 329 out of 1034

Question: What are the different template type codes, and how many templates correspond to each?
SQL: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code
Look for potential candidates "[('template type codes', 0.75), ('template', 0.75), ('type', 0.75), ('codes', 0.75), ('template type', 0.75), ('type codes', 0.75), ('templates', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.005550 seconds.
Processed example 330 out of 1034

Question: Which template type code has most number of templates?
SQL: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('template type code', 0.75), ('template', 0.75), ('type', 0.75), ('code', 0.75), ('template type', 0.75), ('type code', 0.75), ('number', 0.75), ('templates', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.006079 seconds.
Processed example 331 out of 1034

Question: Return the type code of the template type that the most templates belong to.
SQL: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('template type', 0.75), ('template', 0.75), ('type', 0.75), ('type code', 0.75), ('code', 0.75), ('templates', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.004608 seconds.
Processed example 332 out of 1034

Question: Show all template type codes with less than three templates.
SQL: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3
Look for potential candidates "[('templates', 0.75), ('template type codes', 0.75), ('template', 0.75), ('type', 0.75), ('codes', 0.75), ('template type', 0.75), ('type codes', 0.75), ('3', 1.0)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[('3', 'version number', 'templates')]"
Elapsed time is 0.005520 seconds.
Processed example 333 out of 1034

Question: What are the codes of template types that have fewer than 3 templates?
SQL: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3
Look for potential candidates "[('template types', 0.75), ('template', 0.75), ('types', 0.75), ('codes', 0.75), ('templates', 0.75), ('3', 1.0)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[('3', 'version number', 'templates')]"
Elapsed time is 0.004111 seconds.
Processed example 334 out of 1034

Question: What the smallest version number and its template type code?
SQL: SELECT min(Version_Number) ,  template_type_code FROM Templates
Look for potential candidates "[('version number', 0.75), ('version', 0.75), ('number', 0.75), ('template type code', 0.75), ('template', 0.75), ('type', 0.75), ('code', 0.75), ('template type', 0.75), ('type code', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.006798 seconds.
Processed example 335 out of 1034

Question: Return the lowest version number, along with its corresponding template type code.
SQL: SELECT min(Version_Number) ,  template_type_code FROM Templates
Look for potential candidates "[('version number', 0.75), ('version', 0.75), ('number', 0.75), ('template type code', 0.75), ('template', 0.75), ('type', 0.75), ('code', 0.75), ('template type', 0.75), ('type code', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.006843 seconds.
Processed example 336 out of 1034

Question: What is the template type code of the template used by document with the name "Data base"?
SQL: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"
Look for potential candidates "[('Data base', 0.9), ('Data', 0.75), ('template type code', 0.75), ('template', 0.75), ('type', 0.75), ('code', 0.75), ('template type', 0.75), ('type code', 0.75), ('document', 0.75), ('base', 0.75), ('name', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[('Data base', 'document name', 'documents')]"
Elapsed time is 0.008168 seconds.
Processed example 337 out of 1034

Question: Return the template type code of the template that is used by a document named Data base.
SQL: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"
Look for potential candidates "[('Data', 0.75), ('template', 0.75), ('template type code', 0.75), ('type', 0.75), ('code', 0.75), ('template type', 0.75), ('type code', 0.75), ('Data base', 0.75), ('base', 0.75), ('document', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[('Data base', 'document name', 'documents')]"
Elapsed time is 0.007473 seconds.
Processed example 338 out of 1034

Question: Show all document names using templates with template type code BK.
SQL: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"
Look for potential candidates "[('BK', 1.0), ('templates', 0.75), ('document names', 0.75), ('document', 0.75), ('names', 0.75), ('template type code', 0.75), ('template', 0.75), ('type', 0.75), ('code', 0.75), ('template type', 0.75), ('type code', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.007480 seconds.
Processed example 339 out of 1034

Question: What are the names of documents that use templates with the code BK?
SQL: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"
Look for potential candidates "[('BK', 1.0), ('documents', 0.75), ('names', 0.75), ('templates', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002636 seconds.
Processed example 340 out of 1034

Question: Show all template type codes and the number of documents using each type.
SQL: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code
Look for potential candidates "[('number', 0.75), ('each type', 0.75), ('each', 0.75), ('type', 0.75), ('template type codes', 0.75), ('template', 0.75), ('codes', 0.75), ('template type', 0.75), ('type codes', 0.75), ('documents', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.007539 seconds.
Processed example 341 out of 1034

Question: What are the different template type codes, and how many documents use each type?
SQL: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code
Look for potential candidates "[('template type codes', 0.75), ('template', 0.75), ('type', 0.75), ('codes', 0.75), ('template type', 0.75), ('type codes', 0.75), ('documents', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.005595 seconds.
Processed example 342 out of 1034

Question: Which template type code is used by most number of documents?
SQL: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('template type code', 0.75), ('template', 0.75), ('type', 0.75), ('code', 0.75), ('template type', 0.75), ('type code', 0.75), ('documents', 0.75), ('number', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.006020 seconds.
Processed example 343 out of 1034

Question: Return the code of the template type that is most commonly used in documents.
SQL: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('template type', 0.75), ('template', 0.75), ('type', 0.75), ('code', 0.75), ('documents', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003947 seconds.
Processed example 344 out of 1034

Question: Show all template type codes that are not used by any document.
SQL: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
Look for potential candidates "[('template type codes', 0.75), ('template', 0.75), ('type', 0.75), ('codes', 0.75), ('template type', 0.75), ('type codes', 0.75), ('document', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.005429 seconds.
Processed example 345 out of 1034

Question: What are the codes of template types that are not used for any document?
SQL: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
Look for potential candidates "[('template types', 0.75), ('template', 0.75), ('types', 0.75), ('codes', 0.75), ('document', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.004042 seconds.
Processed example 346 out of 1034

Question: Show all template type codes and descriptions.
SQL: SELECT template_type_code ,  template_type_description FROM Ref_template_types
Look for potential candidates "[('template type codes', 0.75), ('template', 0.75), ('type', 0.75), ('codes', 0.75), ('template type', 0.75), ('type codes', 0.75), ('descriptions', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.005450 seconds.
Processed example 347 out of 1034

Question: What are the type codes and descriptions for all template types?
SQL: SELECT template_type_code ,  template_type_description FROM Ref_template_types
Look for potential candidates "[('descriptions', 0.75), ('type codes', 0.75), ('type', 0.75), ('codes', 0.75), ('template types', 0.75), ('template', 0.75), ('types', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.005364 seconds.
Processed example 348 out of 1034

Question: What is the template type descriptions for template type code "AD".
SQL: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"
Look for potential candidates "[('AD', 1.0), ('template type descriptions', 0.75), ('template', 0.75), ('type', 0.75), ('descriptions', 0.75), ('template type', 0.75), ('type descriptions', 0.75), ('template type code', 0.75), ('code', 0.75), ('type code', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.007087 seconds.
Processed example 349 out of 1034

Question: Return the template type description of the template type with the code AD.
SQL: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"
Look for potential candidates "[('AD', 1.0), ('template type', 0.75), ('template', 0.75), ('type', 0.75), ('code', 0.75), ('template type description', 0.75), ('description', 0.75), ('type description', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.005697 seconds.
Processed example 350 out of 1034

Question: What is the template type code for template type description "Book".
SQL: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"
Look for potential candidates "[('Book', 0.9), ('template type code', 0.75), ('template', 0.75), ('type', 0.75), ('code', 0.75), ('template type', 0.75), ('type code', 0.75), ('template type description', 0.75), ('description', 0.75), ('type description', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[('Book', 'template type description', 'reference template types')]"
Elapsed time is 0.007628 seconds.
Processed example 351 out of 1034

Question: Return the type code of the template type with the description "Book".
SQL: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"
Look for potential candidates "[('Book', 0.9), ('template type', 0.75), ('template', 0.75), ('type', 0.75), ('type code', 0.75), ('code', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[('Book', 'template type description', 'reference template types')]"
Elapsed time is 0.004563 seconds.
Processed example 352 out of 1034

Question: What are the distinct template type descriptions for the templates ever used by any document?
SQL: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
Look for potential candidates "[('templates', 0.75), ('template type descriptions', 0.75), ('template', 0.75), ('type', 0.75), ('descriptions', 0.75), ('template type', 0.75), ('type descriptions', 0.75), ('document', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.006275 seconds.
Processed example 353 out of 1034

Question: Return the different descriptions for templates that have been used in a document.
SQL: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
Look for potential candidates "[('templates', 0.75), ('descriptions', 0.75), ('document', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002658 seconds.
Processed example 354 out of 1034

Question: What are the template ids with template type description "Presentation".
SQL: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"
Look for potential candidates "[('Presentation', 0.9), ('template ids', 0.75), ('template', 0.75), ('ids', 0.75), ('template type description', 0.75), ('type', 0.75), ('description', 0.75), ('template type', 0.75), ('type description', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[('Presentation', 'template type description', 'reference template types')]"
Elapsed time is 0.009157 seconds.
Processed example 355 out of 1034

Question: Return the ids corresponding to templates with the description 'Presentation'.
SQL: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"
Look for potential candidates "[('Presentation', 0.9), ('templates', 0.75), ('ids', 0.75), ('description', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[('Presentation', 'template type description', 'reference template types')]"
Elapsed time is 0.004223 seconds.
Processed example 356 out of 1034

Question: How many paragraphs in total?
SQL: SELECT count(*) FROM Paragraphs
Look for potential candidates "[('paragraphs', 0.75), ('total', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001926 seconds.
Processed example 357 out of 1034

Question: Count the number of paragraphs.
SQL: SELECT count(*) FROM Paragraphs
Look for potential candidates "[('number', 0.75), ('paragraphs', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001829 seconds.
Processed example 358 out of 1034

Question: How many paragraphs for the document with name 'Summer Show'?
SQL: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'
Look for potential candidates "[('Summer Show', 0.9), ('Summer', 0.75), ('Show', 0.75), ('paragraphs', 0.75), ('document', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[('Summer Show', 'document name', 'documents')]"
Elapsed time is 0.004029 seconds.
Processed example 359 out of 1034

Question: Count the number of paragraphs in the document named 'Summer Show'.
SQL: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'
Look for potential candidates "[('Summer Show', 0.9), ('number', 0.75), ('document', 0.75), ('paragraphs', 0.75), ('Summer', 0.75), ('Show', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[('Summer Show', 'document name', 'documents')]"
Elapsed time is 0.004767 seconds.
Processed example 360 out of 1034

Question: Show paragraph details for paragraph with text 'Korea ' .
SQL: select other_details from paragraphs where paragraph_text like 'korea'
Look for potential candidates "[('Korea ', 0.9), ('Korea', 0.75), ('details', 0.75), ('paragraph', 0.75), ('text', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[('Korea', 'paragraph text', 'paragraphs')]"
Elapsed time is 0.003913 seconds.
Processed example 361 out of 1034

Question: What are the details for the paragraph that includes the text 'Korea ' ?
SQL: select other_details from paragraphs where paragraph_text like 'korea'
Look for potential candidates "[('Korea ', 0.9), ('Korea', 0.75), ('paragraph', 0.75), ('details', 0.75), ('text', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[('Korea', 'paragraph text', 'paragraphs')]"
Elapsed time is 0.003908 seconds.
Processed example 362 out of 1034

Question: Show all paragraph ids and texts for the document with name 'Welcome to NY'.
SQL: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'
Look for potential candidates "[('Welcome to NY', 0.9), ('NY', 1.0), ('Welcome', 0.75), ('New York', 0.9), ('document', 0.75), ('texts', 0.75), ('name', 0.75), ('paragraph ids', 0.75), ('paragraph', 0.75), ('ids', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[('Welcome to NY', 'document name', 'documents')]"
Elapsed time is 0.009182 seconds.
Processed example 363 out of 1034

Question: What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?
SQL: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'
Look for potential candidates "[('Welcome to NY', 0.9), ('NY', 1.0), ('Welcome', 0.75), ('New York', 0.9), ('ids', 0.75), ('paragraphs', 0.75), ('texts', 0.75), ('document', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[('Welcome to NY', 'document name', 'documents')]"
Elapsed time is 0.007350 seconds.
Processed example 364 out of 1034

Question: Show all paragraph texts for the document "Customer reviews".
SQL: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"
Look for potential candidates "[('Customer reviews', 0.9), ('Customer', 0.75), ('document', 0.75), ('paragraph texts', 0.75), ('paragraph', 0.75), ('texts', 0.75), ('reviews', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[('Customer reviews', 'document name', 'documents')]"
Elapsed time is 0.005612 seconds.
Processed example 365 out of 1034

Question: What are the paragraph texts for the document with the name 'Customer reviews'?
SQL: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"
Look for potential candidates "[('Customer reviews', 0.9), ('Customer', 0.75), ('paragraph texts', 0.75), ('paragraph', 0.75), ('texts', 0.75), ('document', 0.75), ('name', 0.75), ('reviews', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: False)
Confirmed the following candidates "[('Customer reviews', 'document name', 'documents')]"
Elapsed time is 0.006201 seconds.
Processed example 366 out of 1034

Question: Show all document ids and the number of paragraphs in each document. Order by document id.
SQL: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
Look for potential candidates "[('Order', 0.75), ('document', 0.75), ('paragraphs', 0.75), ('number', 0.75), ('document ids', 0.75), ('ids', 0.75), ('document id', 0.75), ('id', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.008248 seconds.
Processed example 367 out of 1034

Question: Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.
SQL: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
Look for potential candidates "[('number', 0.75), ('document ids', 0.75), ('document', 0.75), ('ids', 0.75), ('paragraphs', 0.75), ('id', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.006241 seconds.
Processed example 368 out of 1034

Question: Show all document ids, names and the number of paragraphs in each document.
SQL: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id
Look for potential candidates "[('names', 0.75), ('number', 0.75), ('document', 0.75), ('document ids', 0.75), ('ids', 0.75), ('paragraphs', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.006284 seconds.
Processed example 369 out of 1034

Question: What are the ids and names of each document, as well as the number of paragraphs in each?
SQL: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id
Look for potential candidates "[('names', 0.75), ('ids', 0.75), ('document', 0.75), ('paragraphs', 0.75), ('each', 0.75), ('number', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.006106 seconds.
Processed example 370 out of 1034

Question: List all document ids with at least two paragraphs.
SQL: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2
Look for potential candidates "[('document ids', 0.75), ('document', 0.75), ('ids', 0.75), ('paragraphs', 0.75), ('2', 1.0)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[('2', 'version number', 'templates')]"
Elapsed time is 0.004424 seconds.
Processed example 371 out of 1034

Question: What are the ids of documents that have 2 or more paragraphs?
SQL: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2
Look for potential candidates "[('documents', 0.75), ('ids', 0.75), ('paragraphs', 0.75), ('2', 1.0)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[('2', 'version number', 'templates')]"
Elapsed time is 0.003441 seconds.
Processed example 372 out of 1034

Question: What is the document id and name with greatest number of paragraphs?
SQL: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('document id', 0.75), ('document', 0.75), ('id', 0.75), ('name', 0.75), ('paragraphs', 0.75), ('number', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.006294 seconds.
Processed example 373 out of 1034

Question: Return the id and name of the document with the most paragraphs.
SQL: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('name', 0.75), ('id', 0.75), ('document', 0.75), ('paragraphs', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.004369 seconds.
Processed example 374 out of 1034

Question: What is the document id with least number of paragraphs?
SQL: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
Look for potential candidates "[('document id', 0.75), ('document', 0.75), ('id', 0.75), ('paragraphs', 0.75), ('number', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.005322 seconds.
Processed example 375 out of 1034

Question: Return the id of the document with the fewest paragraphs.
SQL: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
Look for potential candidates "[('document', 0.75), ('id', 0.75), ('paragraphs', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.003322 seconds.
Processed example 376 out of 1034

Question: What is the document id with 1 to 2 paragraphs?
SQL: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
Look for potential candidates "[('document id', 0.75), ('document', 0.75), ('id', 0.75), ('paragraphs', 0.75), ('2', 1.0), ('1', 1.0)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[('2', 'version number', 'templates'), ('1', 'template id', 'templates'), ('1', 'document id', 'documents'), ('1', 'version number', 'templates')]"
Elapsed time is 0.004636 seconds.
Processed example 377 out of 1034

Question: Give the ids of documents that have between one and two paragraphs.
SQL: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
Look for potential candidates "[('documents', 0.75), ('ids', 0.75), ('paragraphs', 0.75), ('2', 1.0), ('1', 1.0)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[('2', 'version number', 'templates'), ('1', 'template id', 'templates'), ('1', 'document id', 'documents'), ('1', 'version number', 'templates')]"
Elapsed time is 0.003596 seconds.
Processed example 378 out of 1034

Question: Show the document id with paragraph text 'Brazil' and 'Ireland'.
SQL: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'
Look for potential candidates "[('Brazil', 0.9), ('Ireland', 0.9), ('paragraph text', 0.75), ('paragraph', 0.75), ('text', 0.75), ('document id', 0.75), ('document', 0.75), ('id', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[('Ireland', 'paragraph text', 'paragraphs'), ('Brazil', 'paragraph text', 'paragraphs')]"
Elapsed time is 0.009711 seconds.
Processed example 379 out of 1034

Question: What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?
SQL: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'
Look for potential candidates "[('Brazil', 0.9), ('Ireland', 0.9), ('documents', 0.75), ('ids', 0.75), ('paragraph text', 0.75), ('paragraph', 0.75), ('text', 0.75)]" in database cre_Doc_Template_Mgt (include primary keys: True)
Confirmed the following candidates "[('Ireland', 'paragraph text', 'paragraphs'), ('Brazil', 'paragraph text', 'paragraphs')]"
Elapsed time is 0.008191 seconds.
Processed example 380 out of 1034

Question: How many teachers are there?
SQL: SELECT count(*) FROM teacher
Look for potential candidates "[('teachers', 0.75)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000789 seconds.
Processed example 381 out of 1034

Question: What is the total count of teachers?
SQL: SELECT count(*) FROM teacher
Look for potential candidates "[('count', 0.75), ('teachers', 0.75)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000983 seconds.
Processed example 382 out of 1034

Question: List the names of teachers in ascending order of age.
SQL: SELECT Name FROM teacher ORDER BY Age ASC
Look for potential candidates "[('names', 0.75), ('teachers', 0.75), ('age', 0.75), ('order', 0.75)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001265 seconds.
Processed example 383 out of 1034

Question: What are the names of the teachers ordered by ascending age?
SQL: SELECT Name FROM teacher ORDER BY Age ASC
Look for potential candidates "[('names', 0.75), ('teachers', 0.75), ('age', 0.75)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000994 seconds.
Processed example 384 out of 1034

Question: What are the age and hometown of teachers?
SQL: SELECT Age ,  Hometown FROM teacher
Look for potential candidates "[('age', 0.75), ('hometown', 0.75), ('teachers', 0.75)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001051 seconds.
Processed example 385 out of 1034

Question: What is the age and hometown of every teacher?
SQL: SELECT Age ,  Hometown FROM teacher
Look for potential candidates "[('age', 0.75), ('hometown', 0.75), ('teacher', 0.75)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000979 seconds.
Processed example 386 out of 1034

Question: List the name of teachers whose hometown is not `` Little Lever Urban District '' .
SQL: select name from teacher where hometown != "little lever urban district"
Look for potential candidates "[('Little Lever Urban District', 0.75), ('teachers', 0.75), ('name', 0.75), ('hometown', 0.75), ('Little', 0.75), ('Lever', 0.75), ('Urban', 0.75), ('District', 0.75), ('Little Lever', 0.75), ('Lever Urban', 0.75), ('Urban District', 0.75), ('Little Lever Urban', 0.75), ('Lever Urban District', 0.75)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[('Little Lever Urban District', 'hometown', 'teacher')]"
Elapsed time is 0.003373 seconds.
Processed example 387 out of 1034

Question: What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ?
SQL: select name from teacher where hometown != "little lever urban district"
Look for potential candidates "[('Little Lever Urban District', 0.75), ('teachers', 0.75), ('names', 0.75), ('hometown', 0.75), ('Little', 0.75), ('Lever', 0.75), ('Urban', 0.75), ('District', 0.75), ('Little Lever', 0.75), ('Lever Urban', 0.75), ('Urban District', 0.75), ('Little Lever Urban', 0.75), ('Lever Urban District', 0.75)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[('Little Lever Urban District', 'hometown', 'teacher')]"
Elapsed time is 0.003408 seconds.
Processed example 388 out of 1034

Question: Show the name of teachers aged either 32 or 33?
SQL: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
Look for potential candidates "[('teachers', 0.75), ('name', 0.75), ('32', 1.0), ('33', 1.0)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[('33', 'age', 'teacher'), ('32', 'age', 'teacher')]"
Elapsed time is 0.000815 seconds.
Processed example 389 out of 1034

Question: What are the names of the teachers who are aged either 32 or 33?
SQL: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
Look for potential candidates "[('teachers', 0.75), ('names', 0.75), ('32', 1.0), ('33', 1.0)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[('33', 'age', 'teacher'), ('32', 'age', 'teacher')]"
Elapsed time is 0.000814 seconds.
Processed example 390 out of 1034

Question: What is the hometown of the youngest teacher?
SQL: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
Look for potential candidates "[('hometown', 0.75), ('teacher', 0.75)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000777 seconds.
Processed example 391 out of 1034

Question: Where is the youngest teacher from?
SQL: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
Look for potential candidates "[('teacher', 0.75)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000550 seconds.
Processed example 392 out of 1034

Question: Show different hometown of teachers and the number of teachers from each hometown.
SQL: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown
Look for potential candidates "[('teachers', 0.75), ('number', 0.75), ('hometown', 0.75)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001048 seconds.
Processed example 393 out of 1034

Question: For each hometown, how many teachers are there?
SQL: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown
Look for potential candidates "[('hometown', 0.75), ('teachers', 0.75)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000766 seconds.
Processed example 394 out of 1034

Question: List the most common hometown of teachers.
SQL: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
Look for potential candidates "[('hometown', 0.75), ('teachers', 0.75)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000759 seconds.
Processed example 395 out of 1034

Question: What is the most commmon hometowns for teachers?
SQL: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
Look for potential candidates "[('hometowns', 0.75), ('teachers', 0.75)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000889 seconds.
Processed example 396 out of 1034

Question: Show the hometowns shared by at least two teachers.
SQL: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2
Look for potential candidates "[('hometowns', 0.75), ('teachers', 0.75), ('2', 1.0)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000783 seconds.
Processed example 397 out of 1034

Question: What are the towns from which at least two teachers come from?
SQL: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2
Look for potential candidates "[('towns', 0.75), ('teachers', 0.75), ('2', 1.0)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000833 seconds.
Processed example 398 out of 1034

Question: Show names of teachers and the courses they are arranged to teach.
SQL: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID
Look for potential candidates "[('teachers', 0.75), ('Show names', 0.75), ('Show', 0.75), ('names', 0.75), ('courses', 0.75)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001422 seconds.
Processed example 399 out of 1034

Question: What is the name of each teacher and what course they teach?
SQL: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID
Look for potential candidates "[('name', 0.75), ('teacher', 0.75), ('course', 0.75)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001009 seconds.
Processed example 400 out of 1034

Question: Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.
SQL: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name
Look for potential candidates "[('teachers', 0.75), ('Show names', 0.75), ('Show', 0.75), ('names', 0.75), ('courses', 0.75), ('teacher', 0.75), ('name', 0.75), ('order', 0.75)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002183 seconds.
Processed example 401 out of 1034

Question: What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?
SQL: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name
Look for potential candidates "[('teachers', 0.75), ('names', 0.75), ('courses', 0.75), ('name', 0.75), ('teacher', 0.75), ('order', 0.75)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001644 seconds.
Processed example 402 out of 1034

Question: Show the name of the teacher for the math course.
SQL: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"
Look for potential candidates "[('teacher', 0.75), ('name', 0.75), ('math course', 0.75), ('math', 0.75), ('course', 0.75)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[('Math', 'course', 'course')]"
Elapsed time is 0.001439 seconds.
Processed example 403 out of 1034

Question: What are the names of the people who teach math courses?
SQL: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"
Look for potential candidates "[('people', 0.75), ('names', 0.75), ('math courses', 0.75), ('math', 0.75), ('courses', 0.75)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[('Math', 'course', 'course')]"
Elapsed time is 0.001504 seconds.
Processed example 404 out of 1034

Question: Show names of teachers and the number of courses they teach.
SQL: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
Look for potential candidates "[('teachers', 0.75), ('Show names', 0.75), ('Show', 0.75), ('names', 0.75), ('number', 0.75), ('courses', 0.75)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001648 seconds.
Processed example 405 out of 1034

Question: What are the names of the teachers and how many courses do they teach?
SQL: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
Look for potential candidates "[('names', 0.75), ('teachers', 0.75), ('courses', 0.75)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001001 seconds.
Processed example 406 out of 1034

Question: Show names of teachers that teach at least two courses.
SQL: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
Look for potential candidates "[('Show names', 0.75), ('Show', 0.75), ('names', 0.75), ('teachers', 0.75), ('courses', 0.75), ('2', 1.0)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001453 seconds.
Processed example 407 out of 1034

Question: What are the names of the teachers who teach at least two courses?
SQL: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
Look for potential candidates "[('teachers', 0.75), ('names', 0.75), ('courses', 0.75), ('2', 1.0)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001016 seconds.
Processed example 408 out of 1034

Question: List the names of teachers who have not been arranged to teach courses.
SQL: SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)
Look for potential candidates "[('teachers', 0.75), ('names', 0.75), ('courses', 0.75)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000987 seconds.
Processed example 409 out of 1034

Question: What are the names of the teachers whose courses have not been arranged?
SQL: SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)
Look for potential candidates "[('teachers', 0.75), ('names', 0.75), ('courses', 0.75)]" in database course_teach (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000990 seconds.
Processed example 410 out of 1034

Question: How many visitors below age 30 are there?
SQL: SELECT count(*) FROM visitor WHERE age  <  30
Look for potential candidates "[('visitors', 0.75), ('age', 0.75), ('30', 1.0)]" in database museum_visit (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000985 seconds.
Processed example 411 out of 1034

Question: Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.
SQL: SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC
Look for potential candidates "[('names', 0.75), ('visitors', 0.75), ('membership level', 0.75), ('membership', 0.75), ('level', 0.75), ('results', 0.75), ('4', 1.0)]" in database museum_visit (include primary keys: False)
Confirmed the following candidates "[('4', 'num of ticket', 'visit')]"
Elapsed time is 0.001949 seconds.
Processed example 412 out of 1034

Question: What is the average age of the visitors whose membership level is not higher than 4?
SQL: SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4
Look for potential candidates "[('visitors', 0.75), ('age', 0.75), ('membership level', 0.75), ('membership', 0.75), ('level', 0.75), ('4', 1.0)]" in database museum_visit (include primary keys: False)
Confirmed the following candidates "[('4', 'num of ticket', 'visit')]"
Elapsed time is 0.001788 seconds.
Processed example 413 out of 1034

Question: Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.
SQL: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC
Look for potential candidates "[('visitors', 0.75), ('name', 0.75), ('level', 0.75), ('membership', 0.75), ('membership level', 0.75), ('age', 0.75), ('4', 1.0)]" in database museum_visit (include primary keys: False)
Confirmed the following candidates "[('4', 'num of ticket', 'visit')]"
Elapsed time is 0.001983 seconds.
Processed example 414 out of 1034

Question: Find the id and name of the museum that has the most staff members?
SQL: SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1
Look for potential candidates "[('museum', 0.75), ('id', 0.75), ('name', 0.75), ('staff members', 0.75), ('staff', 0.75), ('members', 0.75)]" in database museum_visit (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.002223 seconds.
Processed example 415 out of 1034

Question: Find the average number of staff working for the museums that were open before 2009.
SQL: SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009
Look for potential candidates "[('number', 0.75), ('museums', 0.75), ('staff', 0.75), ('2009', 1.0)]" in database museum_visit (include primary keys: False)
Confirmed the following candidates "[('2009', 'open year', 'museum')]"
Elapsed time is 0.001130 seconds.
Processed example 416 out of 1034

Question: What are the opening year and staff number of the museum named Plaza Museum?
SQL: SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'
Look for potential candidates "[('Plaza Museum', 0.75), ('number', 0.75), ('staff', 0.75), ('Plaza', 0.75), ('Museum', 0.75), ('museum', 0.75)]" in database museum_visit (include primary keys: False)
Confirmed the following candidates "[('Plaza Museum', 'name', 'museum')]"
Elapsed time is 0.001863 seconds.
Processed example 417 out of 1034

Question: find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.
SQL: SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)
Look for potential candidates "[('names', 0.75), ('museums', 0.75), ('staff number', 0.75), ('staff', 0.75), ('number', 0.75), ('2010', 1.0)]" in database museum_visit (include primary keys: False)
Confirmed the following candidates "[('2010', 'open year', 'museum')]"
Elapsed time is 0.001735 seconds.
Processed example 418 out of 1034

Question: find the id, name and age for visitors who visited some museums more than once.
SQL: SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1
Look for potential candidates "[('id', 0.75), ('visitors', 0.75), ('name', 0.75), ('age', 0.75), ('museums', 0.75), ('1', 1.0)]" in database museum_visit (include primary keys: True)
Confirmed the following candidates "[('1', 'level of membership', 'customer'), ('1', 'customer id', 'customer'), ('1', 'museum id', 'museum')]"
Elapsed time is 0.002042 seconds.
Processed example 419 out of 1034

Question: What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?
SQL: SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1
Look for potential candidates "[('id', 0.75), ('visitors', 0.75), ('name', 0.75), ('membership', 0.75), ('level', 0.75), ('amount', 0.75), ('total', 0.75), ('museum tickets', 0.75), ('museum', 0.75), ('tickets', 0.75), ('money', 0.75)]" in database museum_visit (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.003776 seconds.
Processed example 420 out of 1034

Question: What are the id and name of the museum visited most times?
SQL: SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('id', 0.75), ('name', 0.75), ('museum', 0.75), ('times', 0.75)]" in database museum_visit (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.001559 seconds.
Processed example 421 out of 1034

Question: What is the name of the museum that had no visitor yet?
SQL: SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)
Look for potential candidates "[('no', 0.9), ('museum', 0.75), ('name', 0.75), ('visitor', 0.75)]" in database museum_visit (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001384 seconds.
Processed example 422 out of 1034

Question: Find the name and age of the visitor who bought the most tickets at once.
SQL: SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1
Look for potential candidates "[('name', 0.75), ('visitor', 0.75), ('age', 0.75), ('tickets', 0.75), ('1', 1.0)]" in database museum_visit (include primary keys: False)
Confirmed the following candidates "[('1', 'level of membership', 'customer')]"
Elapsed time is 0.001351 seconds.
Processed example 423 out of 1034

Question: What are the average and maximum number of tickets bought in all visits?
SQL: SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit
Look for potential candidates "[('average', 0.75), ('number', 0.75), ('tickets', 0.75), ('visits', 0.75)]" in database museum_visit (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001333 seconds.
Processed example 424 out of 1034

Question: What is the total ticket expense of the visitors whose membership level is 1?
SQL: SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1
Look for potential candidates "[('visitors', 0.75), ('ticket expense', 0.75), ('ticket', 0.75), ('expense', 0.75), ('membership level', 0.75), ('membership', 0.75), ('level', 0.75), ('1', 1.0)]" in database museum_visit (include primary keys: False)
Confirmed the following candidates "[('1', 'level of membership', 'customer')]"
Elapsed time is 0.002251 seconds.
Processed example 425 out of 1034

Question: What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?
SQL: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011
Look for potential candidates "[('visitor', 0.75), ('museum', 0.75), ('name', 0.75), ('2009', 1.0), ('2011', 1.0)]" in database museum_visit (include primary keys: False)
Confirmed the following candidates "[('2009', 'open year', 'museum'), ('2011', 'open year', 'museum')]"
Elapsed time is 0.001176 seconds.
Processed example 426 out of 1034

Question: Find the number of visitors who did not visit any museum opened after 2010.
SQL: SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)
Look for potential candidates "[('number', 0.75), ('visitors', 0.75), ('museum', 0.75), ('2010', 1.0)]" in database museum_visit (include primary keys: False)
Confirmed the following candidates "[('2010', 'open year', 'museum')]"
Elapsed time is 0.001125 seconds.
Processed example 427 out of 1034

Question: How many museums were opened after 2013 or before 2008?
SQL: SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008
Look for potential candidates "[('museums', 0.75), ('2013', 1.0), ('2008', 1.0)]" in database museum_visit (include primary keys: False)
Confirmed the following candidates "[('2008', 'open year', 'museum')]"
Elapsed time is 0.000689 seconds.
Processed example 428 out of 1034

Question: Find the total number of players.
SQL: SELECT count(*) FROM players
Look for potential candidates "[('number', 0.75), ('players', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[]"
Elapsed time is 20.183434 seconds.
Processed example 429 out of 1034

Question: How many players are there?
SQL: SELECT count(*) FROM players
Look for potential candidates "[('players', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[]"
Elapsed time is 16.876119 seconds.
Processed example 430 out of 1034

Question: Find the total number of matches.
SQL: SELECT count(*) FROM matches
Look for potential candidates "[('number', 0.75), ('matches', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Matthews', 'last name', 'players')]"
Elapsed time is 20.014757 seconds.
Processed example 431 out of 1034

Question: Count the number of matches.
SQL: SELECT count(*) FROM matches
Look for potential candidates "[('number', 0.75), ('matches', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Matthews', 'last name', 'players')]"
Elapsed time is 21.190932 seconds.
Processed example 432 out of 1034

Question: List the first name and birth date of all players from the country with code USA.
SQL: SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
Look for potential candidates "[('USA', 1.0), ('US', 0.9), ('United States', 0.9), ('United States of America', 0.9), ('name', 0.75), ('birth', 0.75), ('players', 0.75), ('code', 0.75), ('country', 0.75), ('1', 1.0)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('1', 'winner seed', 'matches'), ('1', 'tours', 'rankings'), ('USA', 'winner ioc', 'matches'), ('1', 'ranking points', 'rankings'), ('1', 'winner rank', 'matches'), ('1', 'loser seed', 'matches'), ('USA', 'loser ioc', 'matches'), ('1', 'ranking', 'rankings'), ('USA', 'country code', 'players'), ('1', 'loser rank', 'matches')]"
Elapsed time is 42.231320 seconds.
Processed example 433 out of 1034

Question: What are the first names and birth dates of players from the USA?
SQL: SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
Look for potential candidates "[('USA', 1.0), ('US', 0.9), ('United States', 0.9), ('United States of America', 0.9), ('birth dates', 0.75), ('birth', 0.75), ('dates', 0.75), ('names', 0.75), ('players', 0.75), ('1', 1.0)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('1', 'winner seed', 'matches'), ('1', 'tours', 'rankings'), ('USA', 'winner ioc', 'matches'), ('1', 'ranking points', 'rankings'), ('1', 'winner rank', 'matches'), ('1', 'loser seed', 'matches'), ('USA', 'loser ioc', 'matches'), ('1', 'ranking', 'rankings'), ('USA', 'country code', 'players'), ('1', 'loser rank', 'matches')]"
Elapsed time is 40.344547 seconds.
Processed example 434 out of 1034

Question: Find the average age of losers and winners of all matches.
SQL: SELECT avg(loser_age) ,  avg(winner_age) FROM matches
Look for potential candidates "[('age', 0.75), ('losers', 0.75), ('winners', 0.75), ('matches', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Agne', 'first name', 'players'), ('Vage', 'last name', 'players'), ('Matthews', 'last name', 'players'), ('Page', 'first name', 'players')]"
Elapsed time is 27.212543 seconds.
Processed example 435 out of 1034

Question: What are the average ages of losers and winners across matches?
SQL: SELECT avg(loser_age) ,  avg(winner_age) FROM matches
Look for potential candidates "[('losers', 0.75), ('ages', 0.75), ('matches', 0.75), ('winners', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Agnes', 'first name', 'players'), ('Matthews', 'last name', 'players'), ('Ates', 'last name', 'players'), ('Ames', 'last name', 'players'), ('Ares', 'first name', 'players')]"
Elapsed time is 27.130401 seconds.
Processed example 436 out of 1034

Question: Find the average rank of winners in all matches.
SQL: SELECT avg(winner_rank) FROM matches
Look for potential candidates "[('rank', 0.75), ('winners', 0.75), ('matches', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Frank', 'last name', 'players'), ('Rani', 'last name', 'players'), ('Rano', 'first name', 'players'), ('Rana', 'last name', 'players'), ('Rana', 'first name', 'players'), ('Ran', 'first name', 'players'), ('Matthews', 'last name', 'players'), ('Rani', 'first name', 'players'), ('Rink', 'last name', 'players')]"
Elapsed time is 23.980032 seconds.
Processed example 437 out of 1034

Question: What is the average rank for winners in all matches?
SQL: SELECT avg(winner_rank) FROM matches
Look for potential candidates "[('rank', 0.75), ('winners', 0.75), ('matches', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Frank', 'last name', 'players'), ('Rani', 'last name', 'players'), ('Rano', 'first name', 'players'), ('Rana', 'last name', 'players'), ('Rana', 'first name', 'players'), ('Ran', 'first name', 'players'), ('Matthews', 'last name', 'players'), ('Rani', 'first name', 'players'), ('Rink', 'last name', 'players')]"
Elapsed time is 28.191690 seconds.
Processed example 438 out of 1034

Question: Find the highest rank of losers in all matches.
SQL: SELECT min(loser_rank) FROM matches
Look for potential candidates "[('rank', 0.75), ('losers', 0.75), ('matches', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Frank', 'last name', 'players'), ('Rani', 'last name', 'players'), ('Rano', 'first name', 'players'), ('Rana', 'last name', 'players'), ('Rana', 'first name', 'players'), ('Ran', 'first name', 'players'), ('Matthews', 'last name', 'players'), ('Rani', 'first name', 'players'), ('Rink', 'last name', 'players')]"
Elapsed time is 25.486619 seconds.
Processed example 439 out of 1034

Question: What is the best rank of losers across all matches?
SQL: SELECT min(loser_rank) FROM matches
Look for potential candidates "[('rank', 0.75), ('losers', 0.75), ('matches', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Frank', 'last name', 'players'), ('Rani', 'last name', 'players'), ('Rano', 'first name', 'players'), ('Rana', 'last name', 'players'), ('Rana', 'first name', 'players'), ('Ran', 'first name', 'players'), ('Matthews', 'last name', 'players'), ('Rani', 'first name', 'players'), ('Rink', 'last name', 'players')]"
Elapsed time is 24.256262 seconds.
Processed example 440 out of 1034

Question: find the number of distinct country codes of all players.
SQL: SELECT count(DISTINCT country_code) FROM players
Look for potential candidates "[('number', 0.75), ('country codes', 0.75), ('country', 0.75), ('codes', 0.75), ('players', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Coutry', 'last name', 'players'), ('Hodes', 'last name', 'players'), ('Coles', 'last name', 'players'), ('Coventry', 'last name', 'players')]"
Elapsed time is 30.220487 seconds.
Processed example 441 out of 1034

Question: How many distinct countries do players come from?
SQL: SELECT count(DISTINCT country_code) FROM players
Look for potential candidates "[('players', 0.75), ('countries', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[]"
Elapsed time is 20.491668 seconds.
Processed example 442 out of 1034

Question: Find the number of distinct name of losers.
SQL: SELECT count(DISTINCT loser_name) FROM matches
Look for potential candidates "[('number', 0.75), ('name', 0.75), ('losers', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Namu', 'first name', 'players'), ('Nam', 'last name', 'players'), ('NAM', 'country code', 'players'), ('Nami', 'first name', 'players'), ('Rame', 'last name', 'players'), ('Naoe', 'first name', 'players')]"
Elapsed time is 23.154385 seconds.
Processed example 443 out of 1034

Question: How many different loser names are there?
SQL: SELECT count(DISTINCT loser_name) FROM matches
Look for potential candidates "[('loser names', 0.75), ('loser', 0.75), ('names', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Losey', 'last name', 'players'), ('James', 'last name', 'players'), ('Losel', 'last name', 'players'), ('Ames', 'last name', 'players'), ('Moser', 'last name', 'players')]"
Elapsed time is 23.059339 seconds.
Processed example 444 out of 1034

Question: Find the name of tourney that has more than 10 matches.
SQL: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
Look for potential candidates "[('name', 0.75), ('tourney', 0.75), ('matches', 0.75), ('10', 1.0)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('10', 'ranking', 'rankings'), ('10', 'tours', 'rankings'), ('10', 'ranking points', 'rankings'), ('10', 'loser rank', 'matches'), ('10', 'loser seed', 'matches'), ('10', 'winner rank', 'matches'), ('10', 'winner seed', 'matches'), ('Namu', 'first name', 'players'), ('Nam', 'last name', 'players'), ('Courtney', 'last name', 'players')]"
Elapsed time is 23.578747 seconds.
Processed example 445 out of 1034

Question: What are the names of tournaments that have more than 10 matches?
SQL: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
Look for potential candidates "[('tournaments', 0.75), ('names', 0.75), ('matches', 0.75), ('10', 1.0)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('10', 'ranking', 'rankings'), ('10', 'tours', 'rankings'), ('10', 'ranking points', 'rankings'), ('10', 'loser seed', 'matches'), ('10', 'loser rank', 'matches'), ('10', 'winner rank', 'matches'), ('10', 'winner seed', 'matches'), ('James', 'last name', 'players'), ('Ames', 'last name', 'players'), ('Matthews', 'last name', 'players')]"
Elapsed time is 23.686280 seconds.
Processed example 446 out of 1034

Question: List the names of all winners who played in both 2013 and 2016.
SQL: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
Look for potential candidates "[('winners', 0.75), ('names', 0.75), ('2013', 1.0), ('2016', 1.0)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('2016', 'year', 'matches'), ('2013', 'ranking points', 'rankings'), ('2016', 'ranking points', 'rankings'), ('2013', 'year', 'matches'), ('James', 'last name', 'players'), ('Ames', 'last name', 'players')]"
Elapsed time is 20.789453 seconds.
Processed example 447 out of 1034

Question: What are the names of players who won in both 2013 and 2016?
SQL: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
Look for potential candidates "[('players', 0.75), ('names', 0.75), ('2013', 1.0), ('2016', 1.0)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('2016', 'year', 'matches'), ('2013', 'ranking points', 'rankings'), ('2016', 'ranking points', 'rankings'), ('2013', 'year', 'matches'), ('James', 'last name', 'players'), ('Ames', 'last name', 'players')]"
Elapsed time is 20.626683 seconds.
Processed example 448 out of 1034

Question: List the number of all matches who played in years of 2013 or 2016.
SQL: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
Look for potential candidates "[('number', 0.75), ('matches', 0.75), ('2013', 1.0), ('2016', 1.0)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('2016', 'year', 'matches'), ('2013', 'ranking points', 'rankings'), ('2016', 'ranking points', 'rankings'), ('2013', 'year', 'matches'), ('Matthews', 'last name', 'players')]"
Elapsed time is 20.854704 seconds.
Processed example 449 out of 1034

Question: How many matches were played in 2013 or 2016?
SQL: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
Look for potential candidates "[('matches', 0.75), ('2013', 1.0), ('2016', 1.0)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('2016', 'year', 'matches'), ('2013', 'ranking points', 'rankings'), ('2016', 'ranking points', 'rankings'), ('2013', 'year', 'matches'), ('Matthews', 'last name', 'players')]"
Elapsed time is 18.189882 seconds.
Processed example 450 out of 1034

Question: What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?
SQL: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'
Look for potential candidates "[('WTA', 1.0), ('WTA Championships', 0.75), ('Australian Open', 0.75), ('players', 0.75), ('country code', 0.75), ('country', 0.75), ('code', 0.75), ('name', 0.75), ('Championships', 0.75), ('tourney', 0.75), ('Australian', 0.75), ('Open', 0.75), ('1', 1.0)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('1', 'winner seed', 'matches'), ('1', 'tours', 'rankings'), ('WTA Championships', 'tourney name', 'matches'), ('1', 'ranking points', 'rankings'), ('1', 'winner rank', 'matches'), ('1', 'loser seed', 'matches'), ('1', 'ranking', 'rankings'), ('Australian Open', 'tourney name', 'matches'), ('1', 'loser rank', 'matches'), ('Coutry', 'last name', 'players')]"
Elapsed time is 50.814933 seconds.
Processed example 451 out of 1034

Question: What are the first names and country codes for players who won both the WTA Championships and the Australian Open?
SQL: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'
Look for potential candidates "[('WTA', 1.0), ('WTA Championships', 0.75), ('Australian Open', 0.75), ('players', 0.75), ('names', 0.75), ('country codes', 0.75), ('country', 0.75), ('codes', 0.75), ('Australian', 0.75), ('Open', 0.75), ('Championships', 0.75), ('1', 1.0)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('1', 'winner seed', 'matches'), ('1', 'tours', 'rankings'), ('1', 'loser seed', 'matches'), ('Australian Open', 'tourney name', 'matches'), ('1', 'ranking points', 'rankings'), ('1', 'winner rank', 'matches'), ('WTA Championships', 'tourney name', 'matches'), ('1', 'ranking', 'rankings'), ('1', 'loser rank', 'matches'), ('Coutry', 'last name', 'players')]"
Elapsed time is 48.021273 seconds.
Processed example 452 out of 1034

Question: Find the first name and country code of the oldest player.
SQL: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
Look for potential candidates "[('country code', 0.75), ('country', 0.75), ('code', 0.75), ('name', 0.75), ('player', 0.75), ('1', 1.0)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('1', 'winner seed', 'matches'), ('1', 'tours', 'rankings'), ('1', 'ranking points', 'rankings'), ('1', 'winner rank', 'matches'), ('1', 'loser seed', 'matches'), ('1', 'ranking', 'rankings'), ('1', 'loser rank', 'matches'), ('Coutry', 'last name', 'players'), ('Pleyer', 'last name', 'players'), ('Payer', 'last name', 'players')]"
Elapsed time is 31.170376 seconds.
Processed example 453 out of 1034

Question: What is the first name and country code of the oldest player?
SQL: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
Look for potential candidates "[('name', 0.75), ('country code', 0.75), ('country', 0.75), ('code', 0.75), ('player', 0.75), ('1', 1.0)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('1', 'winner seed', 'matches'), ('1', 'tours', 'rankings'), ('1', 'ranking points', 'rankings'), ('1', 'winner rank', 'matches'), ('1', 'loser seed', 'matches'), ('1', 'ranking', 'rankings'), ('1', 'loser rank', 'matches'), ('Coutry', 'last name', 'players'), ('Pleyer', 'last name', 'players'), ('Payer', 'last name', 'players')]"
Elapsed time is 31.304406 seconds.
Processed example 454 out of 1034

Question: List the first and last name of all players in the order of birth date.
SQL: SELECT first_name ,  last_name FROM players ORDER BY birth_date
Look for potential candidates "[('players', 0.75), ('name', 0.75), ('order', 0.75), ('1', 1.0)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('1', 'winner seed', 'matches'), ('1', 'tours', 'rankings'), ('1', 'loser seed', 'matches'), ('1', 'ranking points', 'rankings'), ('1', 'ranking', 'rankings'), ('1', 'winner rank', 'matches'), ('1', 'loser rank', 'matches'), ('Namu', 'first name', 'players'), ('Nam', 'last name', 'players'), ('NAM', 'country code', 'players')]"
Elapsed time is 24.129249 seconds.
Processed example 455 out of 1034

Question: What are the full names of all players, sorted by birth date?
SQL: SELECT first_name ,  last_name FROM players ORDER BY birth_date
Look for potential candidates "[('players', 0.75), ('names', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('James', 'last name', 'players'), ('Ames', 'last name', 'players')]"
Elapsed time is 20.674135 seconds.
Processed example 456 out of 1034

Question: List the first and last name of all players who are left / L hand in the order of birth date.
SQL: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
Look for potential candidates "[('players', 0.75), ('name', 0.75), ('order', 0.75), ('hand', 0.75), ('1', 1.0)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('1', 'winner seed', 'matches'), ('1', 'tours', 'rankings'), ('1', 'ranking points', 'rankings'), ('1', 'winner rank', 'matches'), ('1', 'loser seed', 'matches'), ('1', 'ranking', 'rankings'), ('1', 'loser rank', 'matches'), ('Hande', 'first name', 'players'), ('Hande', 'last name', 'players'), ('Handa', 'last name', 'players')]"
Elapsed time is 27.205429 seconds.
Processed example 457 out of 1034

Question: What are the full names of all left handed players, in order of birth date?
SQL: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
Look for potential candidates "[('names', 0.75), ('players', 0.75), ('order', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('James', 'last name', 'players'), ('Ames', 'last name', 'players')]"
Elapsed time is 23.934916 seconds.
Processed example 458 out of 1034

Question: Find the first name and country code of the player who did the most number of tours.
SQL: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1
Look for potential candidates "[('player', 0.75), ('name', 0.75), ('country code', 0.75), ('country', 0.75), ('code', 0.75), ('number', 0.75), ('tours', 0.75), ('1', 1.0)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('1', 'winner seed', 'matches'), ('1', 'tours', 'rankings'), ('1', 'ranking points', 'rankings'), ('1', 'winner rank', 'matches'), ('1', 'loser seed', 'matches'), ('1', 'ranking', 'rankings'), ('1', 'loser rank', 'matches'), ('Coutry', 'last name', 'players'), ('Pleyer', 'last name', 'players'), ('Payer', 'last name', 'players')]"
Elapsed time is 39.884824 seconds.
Processed example 459 out of 1034

Question: What is the first name and country code of the player with the most tours?
SQL: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1
Look for potential candidates "[('name', 0.75), ('country code', 0.75), ('country', 0.75), ('code', 0.75), ('player', 0.75), ('tours', 0.75), ('1', 1.0)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('1', 'winner seed', 'matches'), ('1', 'tours', 'rankings'), ('1', 'ranking points', 'rankings'), ('1', 'winner rank', 'matches'), ('1', 'loser seed', 'matches'), ('1', 'ranking', 'rankings'), ('1', 'loser rank', 'matches'), ('Coutry', 'last name', 'players'), ('Pleyer', 'last name', 'players'), ('Payer', 'last name', 'players')]"
Elapsed time is 35.482722 seconds.
Processed example 460 out of 1034

Question: Find the year that has the most number of matches.
SQL: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('matches', 0.75), ('number', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Matthews', 'last name', 'players')]"
Elapsed time is 21.046065 seconds.
Processed example 461 out of 1034

Question: Which year had the most matches?
SQL: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('matches', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Matthews', 'last name', 'players')]"
Elapsed time is 17.747458 seconds.
Processed example 462 out of 1034

Question: Find the name and rank points of the winner who won the most times.
SQL: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('winner', 0.75), ('points', 0.75), ('name', 0.75), ('times', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Wenner', 'last name', 'players'), ('Timms', 'last name', 'players'), ('Imes', 'last name', 'players'), ('Rimes', 'last name', 'players'), ('Wimes', 'last name', 'players'), ('Bimes', 'last name', 'players'), ('Timea', 'first name', 'players'), ('Namu', 'first name', 'players'), ('Nam', 'last name', 'players'), ('Rame', 'last name', 'players')]"
Elapsed time is 27.060605 seconds.
Processed example 463 out of 1034

Question: What is the name of the winner who has won the most matches, and how many rank points does this player have?
SQL: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('winner', 0.75), ('name', 0.75), ('matches', 0.75), ('player', 0.75), ('points', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Wenner', 'last name', 'players'), ('Pleyer', 'last name', 'players'), ('Payer', 'last name', 'players'), ('Namu', 'first name', 'players'), ('Nam', 'last name', 'players'), ('Matthews', 'last name', 'players'), ('NAM', 'country code', 'players'), ('Nami', 'first name', 'players'), ('Rame', 'last name', 'players'), ('Naoe', 'first name', 'players')]"
Elapsed time is 31.021897 seconds.
Processed example 464 out of 1034

Question: Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.
SQL: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
Look for potential candidates "[('Australian Open', 0.75), ('winner', 0.75), ('name', 0.75), ('points', 0.75), ('tourney', 0.75), ('Australian', 0.75), ('Open', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Australian Open', 'tourney name', 'matches'), ('Wenner', 'last name', 'players'), ('Namu', 'first name', 'players'), ('Nam', 'last name', 'players'), ('Courtney', 'last name', 'players'), ('Courtney', 'first name', 'players'), ('Oyen', 'last name', 'players'), ('NAM', 'country code', 'players'), ('Nami', 'first name', 'players'), ('Rame', 'last name', 'players')]"
Elapsed time is 37.473726 seconds.
Processed example 465 out of 1034

Question: What is the name of the winner with the most rank points who participated in the Australian Open tournament?
SQL: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
Look for potential candidates "[('Australian Open', 0.75), ('name', 0.75), ('winner', 0.75), ('rank points', 0.75), ('rank', 0.75), ('points', 0.75), ('tournament', 0.75), ('Australian', 0.75), ('Open', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Australian Open', 'tourney name', 'matches'), ('Wenner', 'last name', 'players'), ('Frank', 'last name', 'players'), ('Namu', 'first name', 'players'), ('Rani', 'last name', 'players'), ('Nam', 'last name', 'players'), ('Rano', 'first name', 'players'), ('Rana', 'last name', 'players'), ('Rana', 'first name', 'players'), ('Ran', 'first name', 'players')]"
Elapsed time is 44.724768 seconds.
Processed example 466 out of 1034

Question: find the names of loser and winner who played in the match with greatest number of minutes.
SQL: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
Look for potential candidates "[('names', 0.75), ('loser', 0.75), ('winner', 0.75), ('match', 0.75), ('number', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Wenner', 'last name', 'players'), ('Hatch', 'last name', 'players'), ('Losey', 'last name', 'players'), ('James', 'last name', 'players'), ('Losel', 'last name', 'players'), ('Patch', 'last name', 'players'), ('Ames', 'last name', 'players'), ('Moser', 'last name', 'players')]"
Elapsed time is 30.568262 seconds.
Processed example 467 out of 1034

Question: What are the names of the winner and loser who played in the longest match?
SQL: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
Look for potential candidates "[('winner', 0.75), ('names', 0.75), ('loser', 0.75), ('match', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Wenner', 'last name', 'players'), ('Hatch', 'last name', 'players'), ('Losey', 'last name', 'players'), ('James', 'last name', 'players'), ('Losel', 'last name', 'players'), ('Patch', 'last name', 'players'), ('Ames', 'last name', 'players'), ('Moser', 'last name', 'players')]"
Elapsed time is 27.389347 seconds.
Processed example 468 out of 1034

Question: Find the average ranking for each player and their first name.
SQL: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
Look for potential candidates "[('average', 0.75), ('player', 0.75), ('name', 0.75), ('1', 1.0)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('1', 'winner seed', 'matches'), ('1', 'loser seed', 'matches'), ('1', 'ranking points', 'rankings'), ('1', 'tours', 'rankings'), ('1', 'ranking', 'rankings'), ('1', 'winner rank', 'matches'), ('1', 'loser rank', 'matches'), ('Pleyer', 'last name', 'players'), ('Payer', 'last name', 'players'), ('Namu', 'first name', 'players')]"
Elapsed time is 24.441145 seconds.
Processed example 469 out of 1034

Question: What are the first names of all players, and their average rankings?
SQL: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
Look for potential candidates "[('names', 0.75), ('players', 0.75), ('rankings', 0.75), ('1', 1.0)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('1', 'winner seed', 'matches'), ('1', 'tours', 'rankings'), ('1', 'loser seed', 'matches'), ('1', 'ranking points', 'rankings'), ('1', 'ranking', 'rankings'), ('1', 'winner rank', 'matches'), ('1', 'loser rank', 'matches'), ('James', 'last name', 'players'), ('Ames', 'last name', 'players'), ('Rankine', 'last name', 'players')]"
Elapsed time is 24.561094 seconds.
Processed example 470 out of 1034

Question: Find the total ranking points for each player and their first name.
SQL: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
Look for potential candidates "[('ranking points', 0.75), ('ranking', 0.75), ('points', 0.75), ('player', 0.75), ('name', 0.75), ('1', 1.0)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('1', 'winner seed', 'matches'), ('1', 'loser seed', 'matches'), ('1', 'ranking points', 'rankings'), ('1', 'tours', 'rankings'), ('1', 'ranking', 'rankings'), ('1', 'winner rank', 'matches'), ('1', 'loser rank', 'matches'), ('Rankine', 'last name', 'players'), ('Rankin', 'last name', 'players'), ('Rankin', 'first name', 'players')]"
Elapsed time is 30.635502 seconds.
Processed example 471 out of 1034

Question: What are the first names of all players, and their total ranking points?
SQL: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
Look for potential candidates "[('names', 0.75), ('players', 0.75), ('ranking points', 0.75), ('ranking', 0.75), ('points', 0.75), ('1', 1.0)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('1', 'winner seed', 'matches'), ('1', 'tours', 'rankings'), ('1', 'loser seed', 'matches'), ('1', 'ranking points', 'rankings'), ('1', 'ranking', 'rankings'), ('1', 'winner rank', 'matches'), ('1', 'loser rank', 'matches'), ('Rankine', 'last name', 'players'), ('Rankin', 'last name', 'players'), ('Rankin', 'first name', 'players')]"
Elapsed time is 31.120268 seconds.
Processed example 472 out of 1034

Question: find the number of players for each country.
SQL: SELECT count(*) ,  country_code FROM players GROUP BY country_code
Look for potential candidates "[('number', 0.75), ('players', 0.75), ('country', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Coutry', 'last name', 'players'), ('Coventry', 'last name', 'players')]"
Elapsed time is 23.894319 seconds.
Processed example 473 out of 1034

Question: How many players are from each country?
SQL: SELECT count(*) ,  country_code FROM players GROUP BY country_code
Look for potential candidates "[('players', 0.75), ('country', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Coutry', 'last name', 'players'), ('Coventry', 'last name', 'players')]"
Elapsed time is 20.832294 seconds.
Processed example 474 out of 1034

Question: find the code of the country where has the greatest number of players.
SQL: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('country', 0.75), ('code', 0.75), ('players', 0.75), ('number', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Coutry', 'last name', 'players'), ('Conde', 'last name', 'players'), ('Coventry', 'last name', 'players'), ('Coe', 'last name', 'players'), ('Cody', 'first name', 'players'), ('Cody', 'last name', 'players')]"
Elapsed time is 27.284349 seconds.
Processed example 475 out of 1034

Question: What is the code of the country with the most players?
SQL: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('code', 0.75), ('country', 0.75), ('players', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Coutry', 'last name', 'players'), ('Conde', 'last name', 'players'), ('Coventry', 'last name', 'players'), ('Coe', 'last name', 'players'), ('Cody', 'first name', 'players'), ('Cody', 'last name', 'players')]"
Elapsed time is 23.647284 seconds.
Processed example 476 out of 1034

Question: Find the codes of countries that have more than 50 players.
SQL: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
Look for potential candidates "[('codes', 0.75), ('countries', 0.75), ('players', 0.75), ('50', 1.0)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('50', 'ranking', 'rankings'), ('50', 'winner rank', 'matches'), ('50', 'ranking points', 'rankings'), ('Hodes', 'last name', 'players'), ('Coles', 'last name', 'players')]"
Elapsed time is 24.203765 seconds.
Processed example 477 out of 1034

Question: What are the codes of countries with more than 50 players?
SQL: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
Look for potential candidates "[('codes', 0.75), ('countries', 0.75), ('players', 0.75), ('50', 1.0)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('50', 'ranking', 'rankings'), ('50', 'winner rank', 'matches'), ('50', 'ranking points', 'rankings'), ('Hodes', 'last name', 'players'), ('Coles', 'last name', 'players')]"
Elapsed time is 24.719109 seconds.
Processed example 478 out of 1034

Question: Find the total number of tours for each ranking date.
SQL: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
Look for potential candidates "[('number', 0.75), ('tours', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Toure', 'last name', 'players'), ('Tour', 'last name', 'players')]"
Elapsed time is 20.705498 seconds.
Processed example 479 out of 1034

Question: How many total tours were there for each ranking date?
SQL: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
Look for potential candidates "[('tours', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Toure', 'last name', 'players'), ('Tour', 'last name', 'players')]"
Elapsed time is 17.408118 seconds.
Processed example 480 out of 1034

Question: Find the number of matches happened in each year.
SQL: SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
Look for potential candidates "[('number', 0.75), ('matches', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Matthews', 'last name', 'players')]"
Elapsed time is 20.591596 seconds.
Processed example 481 out of 1034

Question: How many matches were played in each year?
SQL: SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
Look for potential candidates "[('matches', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Matthews', 'last name', 'players')]"
Elapsed time is 17.362834 seconds.
Processed example 482 out of 1034

Question: Find the name and rank of the 3 youngest winners across all matches.
SQL: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
Look for potential candidates "[('name', 0.75), ('rank', 0.75), ('matches', 0.75), ('winners', 0.75), ('3', 1.0)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('3', 'ranking points', 'rankings'), ('3', 'best of', 'matches'), ('3', 'loser seed', 'matches'), ('3', 'tours', 'rankings'), ('3', 'winner rank', 'matches'), ('3', 'winner seed', 'matches'), ('3', 'loser rank', 'matches'), ('3', 'ranking', 'rankings'), ('Frank', 'last name', 'players'), ('Matthews', 'last name', 'players')]"
Elapsed time is 27.649352 seconds.
Processed example 483 out of 1034

Question: What are the names and ranks of the three youngest winners across all matches?
SQL: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
Look for potential candidates "[('names', 0.75), ('ranks', 0.75), ('matches', 0.75), ('winners', 0.75), ('3', 1.0)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('3', 'tours', 'rankings'), ('3', 'best of', 'matches'), ('3', 'loser rank', 'matches'), ('3', 'loser seed', 'matches'), ('3', 'winner rank', 'matches'), ('3', 'ranking points', 'rankings'), ('3', 'ranking', 'rankings'), ('3', 'winner seed', 'matches'), ('James', 'last name', 'players'), ('Ames', 'last name', 'players')]"
Elapsed time is 28.435548 seconds.
Processed example 484 out of 1034

Question: How many different winners both participated in the WTA Championships and were left handed?
SQL: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
Look for potential candidates "[('WTA', 1.0), ('WTA Championships', 0.75), ('winners', 0.75), ('Championships', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('WTA Championships', 'tourney name', 'matches'), ('WTA Championships', 'tourney name', 'matches')]"
Elapsed time is 24.802999 seconds.
Processed example 485 out of 1034

Question: Find the number of left handed winners who participated in the WTA Championships.
SQL: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
Look for potential candidates "[('WTA', 1.0), ('WTA Championships', 0.75), ('winners', 0.75), ('number', 0.75), ('Championships', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('WTA Championships', 'tourney name', 'matches'), ('WTA Championships', 'tourney name', 'matches')]"
Elapsed time is 27.745812 seconds.
Processed example 486 out of 1034

Question: Find the first name, country code and birth date of the winner who has the highest rank points in all matches.
SQL: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1
Look for potential candidates "[('winner', 0.75), ('name', 0.75), ('country code', 0.75), ('country', 0.75), ('code', 0.75), ('birth', 0.75), ('points', 0.75), ('matches', 0.75), ('1', 1.0)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('1', 'winner seed', 'matches'), ('1', 'tours', 'rankings'), ('1', 'ranking points', 'rankings'), ('1', 'winner rank', 'matches'), ('1', 'loser seed', 'matches'), ('1', 'ranking', 'rankings'), ('1', 'loser rank', 'matches'), ('Coutry', 'last name', 'players'), ('Wenner', 'last name', 'players'), ('Birthe', 'first name', 'players')]"
Elapsed time is 40.612902 seconds.
Processed example 487 out of 1034

Question: What is the first name, country code, and birth date of the player with the most winner rank points across all matches?
SQL: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1
Look for potential candidates "[('name', 0.75), ('country code', 0.75), ('country', 0.75), ('code', 0.75), ('player', 0.75), ('points', 0.75), ('matches', 0.75), ('1', 1.0)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('1', 'winner seed', 'matches'), ('1', 'tours', 'rankings'), ('1', 'ranking points', 'rankings'), ('1', 'winner rank', 'matches'), ('1', 'loser seed', 'matches'), ('1', 'ranking', 'rankings'), ('1', 'loser rank', 'matches'), ('Coutry', 'last name', 'players'), ('Pleyer', 'last name', 'players'), ('Payer', 'last name', 'players')]"
Elapsed time is 37.090346 seconds.
Processed example 488 out of 1034

Question: Find the number of players for each hand type.
SQL: SELECT count(*) ,  hand FROM players GROUP BY hand
Look for potential candidates "[('number', 0.75), ('players', 0.75), ('hand type', 0.75), ('hand', 0.75), ('type', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Hande', 'first name', 'players'), ('Hande', 'last name', 'players'), ('Handa', 'last name', 'players'), ('Hana', 'first name', 'players'), ('Haid', 'last name', 'players'), ('Hard', 'surface', 'matches'), ('Han', 'last name', 'players'), ('TPE', 'country code', 'players'), ('AND', 'country code', 'players'), ('TPE', 'loser ioc', 'matches')]"
Elapsed time is 30.483333 seconds.
Processed example 489 out of 1034

Question: How many players are there for each hand type?
SQL: SELECT count(*) ,  hand FROM players GROUP BY hand
Look for potential candidates "[('players', 0.75), ('hand type', 0.75), ('hand', 0.75), ('type', 0.75)]" in database wta_1 (include primary keys: False)
Parallelization activated as table has 510437 rows.
Confirmed the following candidates "[('Hande', 'first name', 'players'), ('Hande', 'last name', 'players'), ('Handa', 'last name', 'players'), ('Hana', 'first name', 'players'), ('Haid', 'last name', 'players'), ('Hard', 'surface', 'matches'), ('Han', 'last name', 'players'), ('TPE', 'country code', 'players'), ('AND', 'country code', 'players'), ('TPE', 'loser ioc', 'matches')]"
Elapsed time is 26.828697 seconds.
Processed example 490 out of 1034

Question: How many ships ended up being 'Captured'?
SQL: SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'
Look for potential candidates "[('Captured', 0.9), ('ships', 0.75)]" in database battle_death (include primary keys: False)
Confirmed the following candidates "[('Captured', 'disposition of ship', 'ship')]"
Elapsed time is 0.002093 seconds.
Processed example 491 out of 1034

Question: List the name and tonnage ordered by in descending alphaetical order for the names.
SQL: SELECT name ,  tonnage FROM ship ORDER BY name DESC
Look for potential candidates "[('name', 0.75), ('tonnage', 0.75), ('names', 0.75), ('order', 0.75)]" in database battle_death (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003350 seconds.
Processed example 492 out of 1034

Question: List the name, date and result of each battle.
SQL: SELECT name ,  date FROM battle
Look for potential candidates "[('name', 0.75), ('result', 0.75), ('battle', 0.75)]" in database battle_death (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002229 seconds.
Processed example 493 out of 1034

Question: What is maximum and minimum death toll caused each time?
SQL: SELECT max(killed) ,  min(killed) FROM death
Look for potential candidates "[('death toll', 0.75), ('death', 0.75), ('toll', 0.75)]" in database battle_death (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002167 seconds.
Processed example 494 out of 1034

Question: What is the average number of injuries caused each time?
SQL: SELECT avg(injured) FROM death
Look for potential candidates "[('number', 0.75), ('injuries', 0.75)]" in database battle_death (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001555 seconds.
Processed example 495 out of 1034

Question: What are the death and injury situations caused by the ship with tonnage 't'?
SQL: SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
Look for potential candidates "[('t', 0.9), ('death', 0.75), ('injury', 0.75), ('situations', 0.75), ('ship', 0.75), ('tonnage', 0.75)]" in database battle_death (include primary keys: False)
Confirmed the following candidates "[('t', 'tonnage', 'ship')]"
Elapsed time is 0.003775 seconds.
Processed example 496 out of 1034

Question: What are the name and results of the battles when the bulgarian commander is not 'Boril'
SQL: SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'
Look for potential candidates "[('Boril', 0.9), ('name', 0.75), ('battles', 0.75), ('results', 0.75), ('commander', 0.75)]" in database battle_death (include primary keys: False)
Confirmed the following candidates "[('Boril', 'bulgarian commander', 'battle')]"
Elapsed time is 0.003272 seconds.
Processed example 497 out of 1034

Question: What are the different ids and names of the battles that lost any 'Brig' type shipes?
SQL: SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'
Look for potential candidates "[('Brig', 0.9), ('battles', 0.75), ('ids', 0.75), ('names', 0.75), ('type shipes', 0.75), ('type', 0.75), ('shipes', 0.75)]" in database battle_death (include primary keys: True)
Confirmed the following candidates "[('Brig', 'ship type', 'ship')]"
Elapsed time is 0.005548 seconds.
Processed example 498 out of 1034

Question: What are the ids and names of the battles that led to more than 10 people killed in total.
SQL: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10
Look for potential candidates "[('battles', 0.75), ('names', 0.75), ('ids', 0.75), ('total', 0.75), ('people', 0.75), ('10', 1.0)]" in database battle_death (include primary keys: True)
Confirmed the following candidates "[('10', 'id', 'death')]"
Elapsed time is 0.004136 seconds.
Processed example 499 out of 1034

Question: What is the ship id and name that caused most total injuries?
SQL: SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('ship id', 0.75), ('ship', 0.75), ('id', 0.75), ('name', 0.75), ('injuries', 0.75)]" in database battle_death (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.004163 seconds.
Processed example 500 out of 1034

Question: What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?
SQL: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'
Look for potential candidates "[('Kaloyan', 0.9), ('Baldwin I', 0.9), ('Baldwin', 0.75), ('battle names', 0.75), ('battle', 0.75), ('names', 0.75), ('I', 0.75)]" in database battle_death (include primary keys: False)
Confirmed the following candidates "[('Baldwin I', 'latin commander', 'battle'), ('Kaloyan', 'bulgarian commander', 'battle'), ('Baldwin I', 'latin commander', 'battle')]"
Elapsed time is 0.005142 seconds.
Processed example 501 out of 1034

Question: How many different results are there for the battles?
SQL: SELECT count(DISTINCT RESULT) FROM battle
Look for potential candidates "[('results', 0.75), ('battles', 0.75)]" in database battle_death (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002211 seconds.
Processed example 502 out of 1034

Question: How many battles did not lose any ship with tonnage '225'?
SQL: SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );
Look for potential candidates "[('battles', 0.75), ('ship', 0.75), ('tonnage', 0.75), ('225', 1.0)]" in database battle_death (include primary keys: False)
Confirmed the following candidates "[('225', 'tonnage', 'ship')]"
Elapsed time is 0.004237 seconds.
Processed example 503 out of 1034

Question: List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'
SQL: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'
Look for potential candidates "[('Lettice', 0.9), ('HMS Atalanta', 0.9), ('HMS', 1.0), ('MS', 0.9), ('Mississippi', 0.9), ('battle', 0.75), ('name', 0.75), ('ship', 0.75), ('Atalanta', 0.75)]" in database battle_death (include primary keys: False)
Confirmed the following candidates "[('Lettice', 'name', 'ship'), ('HMS Atalanta', 'name', 'ship')]"
Elapsed time is 0.006184 seconds.
Processed example 504 out of 1034

Question: Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.
SQL: SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'
Look for potential candidates "[('English Channel', 0.9), ('no', 0.9), ('Show names', 0.75), ('Show', 0.75), ('names', 0.75), ('results', 0.75), ('battles', 0.75), ('commanders', 0.75), ('ships', 0.75), ('English', 0.75), ('Channel', 0.75)]" in database battle_death (include primary keys: False)
Confirmed the following candidates "[('English Channel', 'location', 'ship')]"
Elapsed time is 0.007463 seconds.
Processed example 505 out of 1034

Question: What are the notes of the death events which has substring 'East'?
SQL: SELECT note FROM death WHERE note LIKE '%East%'
Look for potential candidates "[('East', 0.9), ('death events', 0.75), ('death', 0.75), ('events', 0.75), ('notes', 0.75), ("substring 'East", 0.75), ('substring', 0.75), ("'East", 0.75)]" in database battle_death (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.005494 seconds.
Processed example 506 out of 1034

Question: what are all the addresses including line 1 and line 2?
SQL: SELECT line_1 ,  line_2 FROM addresses
Look for potential candidates "[('addresses', 0.75), ('line 1', 0.75), ('line', 0.75), ('1', 1.0), ('2', 1.0)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.010064 seconds.
Processed example 507 out of 1034

Question: What is the first and second line for all addresses?
SQL: SELECT line_1 ,  line_2 FROM addresses
Look for potential candidates "[('line', 0.75), ('addresses', 0.75), ('1', 1.0), ('2', 1.0)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.007107 seconds.
Processed example 508 out of 1034

Question: How many courses in total are listed?
SQL: SELECT count(*) FROM Courses
Look for potential candidates "[('courses', 0.75), ('total', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.006739 seconds.
Processed example 509 out of 1034

Question: How many courses are there?
SQL: SELECT count(*) FROM Courses
Look for potential candidates "[('courses', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003751 seconds.
Processed example 510 out of 1034

Question: How is the math course described?
SQL: SELECT course_description FROM Courses WHERE course_name  =  'math'
Look for potential candidates "[('math course', 0.75), ('math', 0.75), ('course', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[('math', 'course name', 'courses'), ('math', 'department name', 'departments')]"
Elapsed time is 0.009340 seconds.
Processed example 511 out of 1034

Question: What are the descriptions for all the math courses?
SQL: SELECT course_description FROM Courses WHERE course_name  =  'math'
Look for potential candidates "[('descriptions', 0.75), ('math courses', 0.75), ('math', 0.75), ('courses', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[('math', 'course name', 'courses'), ('math', 'department name', 'departments')]"
Elapsed time is 0.012766 seconds.
Processed example 512 out of 1034

Question: What is the zip code of the address in the city Port Chelsea?
SQL: SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'
Look for potential candidates "[('Port Chelsea', 0.75), ('Port', 0.75), ('Chelsea', 0.75), ('zip code', 0.75), ('zip', 0.75), ('code', 0.75), ('address', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[('Port Chelsea', 'city', 'addresses')]"
Elapsed time is 0.020880 seconds.
Processed example 513 out of 1034

Question: What is the zip code for Port Chelsea?
SQL: SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'
Look for potential candidates "[('Port Chelsea', 0.75), ('zip code', 0.75), ('zip', 0.75), ('code', 0.75), ('Port', 0.75), ('Chelsea', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[('Port Chelsea', 'city', 'addresses')]"
Elapsed time is 0.017654 seconds.
Processed example 514 out of 1034

Question: Which department offers the most number of degrees? List department name and id.
SQL: SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('List', 0.75), ('department', 0.75), ('degrees', 0.75), ('number', 0.75), ('id', 0.75), ('List department name', 0.75), ('name', 0.75), ('List department', 0.75), ('department name', 0.75)]" in database student_transcripts_tracking (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.043067 seconds.
Processed example 515 out of 1034

Question: What is the name and id of the department with the most number of degrees ?
SQL: select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1
Look for potential candidates "[('name', 0.75), ('department', 0.75), ('id', 0.75), ('degrees', 0.75), ('number', 0.75)]" in database student_transcripts_tracking (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.018583 seconds.
Processed example 516 out of 1034

Question: How many departments offer any degree?
SQL: SELECT count(DISTINCT department_id) FROM Degree_Programs
Look for potential candidates "[('departments', 0.75), ('degree', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.009025 seconds.
Processed example 517 out of 1034

Question: How many different departments offer degrees?
SQL: SELECT count(DISTINCT department_id) FROM Degree_Programs
Look for potential candidates "[('departments', 0.75), ('degrees', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.009387 seconds.
Processed example 518 out of 1034

Question: How many different degree names are offered?
SQL: SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
Look for potential candidates "[('degree names', 0.75), ('degree', 0.75), ('names', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.009768 seconds.
Processed example 519 out of 1034

Question: How many different degrees are offered?
SQL: SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
Look for potential candidates "[('degrees', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003783 seconds.
Processed example 520 out of 1034

Question: How many degrees does the engineering department offer?
SQL: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'
Look for potential candidates "[('degrees', 0.75), ('engineering department offer', 0.75), ('engineering', 0.75), ('department', 0.75), ('offer', 0.75), ('engineering department', 0.75), ('department offer', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.024898 seconds.
Processed example 521 out of 1034

Question: How many degrees does the engineering department have?
SQL: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'
Look for potential candidates "[('degrees', 0.75), ('engineering department', 0.75), ('engineering', 0.75), ('department', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.012888 seconds.
Processed example 522 out of 1034

Question: What are the names and descriptions of all the sections?
SQL: SELECT section_name ,  section_description FROM Sections
Look for potential candidates "[('descriptions', 0.75), ('names', 0.75), ('sections', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.010219 seconds.
Processed example 523 out of 1034

Question: What are the names and descriptions for all the sections?
SQL: SELECT section_name ,  section_description FROM Sections
Look for potential candidates "[('descriptions', 0.75), ('names', 0.75), ('sections', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.009753 seconds.
Processed example 524 out of 1034

Question: What are the names and id of courses having at most 2 sections?
SQL: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2
Look for potential candidates "[('names', 0.75), ('courses', 0.75), ('id', 0.75), ('sections', 0.75), ('2', 1.0)]" in database student_transcripts_tracking (include primary keys: True)
Confirmed the following candidates "[('2', 'student id', 'students'), ('2', 'transcript id', 'transcripts'), ('2', 'course id', 'courses'), ('2', 'department id', 'departments'), ('2', 'student enrolment id', 'student enrolment'), ('2', 'address id', 'addresses'), ('2', 'student course id', 'student enrolment courses'), ('2', 'semester id', 'semesters'), ('2', 'section id', 'sections'), ('2', 'degree program id', 'degree programs')]"
Elapsed time is 0.015632 seconds.
Processed example 525 out of 1034

Question: What are the names and ids of every course with less than 2 sections?
SQL: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2
Look for potential candidates "[('names', 0.75), ('ids', 0.75), ('course', 0.75), ('sections', 0.75), ('2', 1.0)]" in database student_transcripts_tracking (include primary keys: True)
Confirmed the following candidates "[('2', 'student id', 'students'), ('2', 'transcript id', 'transcripts'), ('2', 'course id', 'courses'), ('2', 'department id', 'departments'), ('2', 'student enrolment id', 'student enrolment'), ('2', 'address id', 'addresses'), ('2', 'student course id', 'student enrolment courses'), ('2', 'semester id', 'semesters'), ('2', 'section id', 'sections'), ('2', 'degree program id', 'degree programs')]"
Elapsed time is 0.015871 seconds.
Processed example 526 out of 1034

Question: List the section_name in reversed lexicographical order.
SQL: SELECT section_name FROM Sections ORDER BY section_name DESC
Look for potential candidates "[('section_name', 0.75), ('order', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.006502 seconds.
Processed example 527 out of 1034

Question: What are the names of the sections in reverse alphabetical order?
SQL: SELECT section_name FROM Sections ORDER BY section_name DESC
Look for potential candidates "[('names', 0.75), ('sections', 0.75), ('order', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.009194 seconds.
Processed example 528 out of 1034

Question: What is the semester which most student registered in? Show both the name and the id.
SQL: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('Show', 0.75), ('student', 0.75), ('id', 0.75), ('name', 0.75)]" in database student_transcripts_tracking (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.015025 seconds.
Processed example 529 out of 1034

Question: For each semester, what is the name and id of the one with the most students registered?
SQL: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('semester', 0.75), ('name', 0.75), ('id', 0.75), ('students', 0.75), ('one', 0.75), ('1', 1.0)]" in database student_transcripts_tracking (include primary keys: True)
Confirmed the following candidates "[('1', 'course id', 'courses'), ('1', 'department id', 'departments'), ('1', 'section id', 'sections'), ('1', 'student id', 'students'), ('1', 'student enrolment id', 'student enrolment'), ('1', 'degree program id', 'degree programs'), ('1', 'semester id', 'semesters'), ('1', 'address id', 'addresses'), ('1', 'student course id', 'student enrolment courses'), ('1', 'transcript id', 'transcripts')]"
Elapsed time is 0.019917 seconds.
Processed example 530 out of 1034

Question: What is the description of the department whose name has the substring the computer?
SQL: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
Look for potential candidates "[('description', 0.75), ('name', 0.75), ('department', 0.75), ('computer', 0.75), ('substring', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.014991 seconds.
Processed example 531 out of 1034

Question: What is the department description for the one whose name has the word computer?
SQL: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
Look for potential candidates "[('one', 0.75), ('department description', 0.75), ('department', 0.75), ('description', 0.75), ('name', 0.75), ('word computer', 0.75), ('word', 0.75), ('computer', 0.75), ('1', 1.0)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[('None', 'other details', 'courses'), ('Ward', 'last name', 'students'), ('None', 'other details', 'student enrolment'), ('None', 'other address details', 'addresses'), ('None', 'other details', 'departments'), ('None', 'other details', 'semesters'), ('None', 'other details', 'transcripts'), ('None', 'other details', 'degree programs'), ('None', 'other details', 'sections'), ('None', 'line 3', 'addresses')]"
Elapsed time is 0.024102 seconds.
Processed example 532 out of 1034

Question: Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.
SQL: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
Look for potential candidates "[('List', 0.75), ('degree programs', 0.75), ('degree', 0.75), ('programs', 0.75), ('name', 0.75), ('id', 0.75), ('1', 1.0), ('2', 1.0)]" in database student_transcripts_tracking (include primary keys: True)
Confirmed the following candidates "[('2', 'student id', 'students'), ('1', 'department id', 'departments'), ('1', 'course id', 'courses'), ('2', 'transcript id', 'transcripts'), ('2', 'course id', 'courses'), ('2', 'department id', 'departments'), ('1', 'section id', 'sections'), ('1', 'student id', 'students'), ('2', 'address id', 'addresses'), ('1', 'student enrolment id', 'student enrolment')]"
Elapsed time is 0.022808 seconds.
Processed example 533 out of 1034

Question: What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?
SQL: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
Look for potential candidates "[('students', 0.75), ('ids', 0.75), ('names', 0.75), ('degree programs', 0.75), ('degree', 0.75), ('programs', 0.75), ('1', 1.0), ('2', 1.0)]" in database student_transcripts_tracking (include primary keys: True)
Confirmed the following candidates "[('2', 'student id', 'students'), ('1', 'department id', 'departments'), ('1', 'course id', 'courses'), ('2', 'transcript id', 'transcripts'), ('2', 'course id', 'courses'), ('2', 'department id', 'departments'), ('1', 'section id', 'sections'), ('1', 'student id', 'students'), ('2', 'address id', 'addresses'), ('1', 'student enrolment id', 'student enrolment')]"
Elapsed time is 0.022697 seconds.
Processed example 534 out of 1034

Question: Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.
SQL: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'
Look for potential candidates "[('Bachelor', 0.75), ('List', 0.75), ('name', 0.75), ('Bachelor degree program', 0.75), ('degree', 0.75), ('program', 0.75), ('Bachelor degree', 0.75), ('degree program', 0.75), ('1', 1.0)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[('Bachelor', 'degree summary name', 'degree programs')]"
Elapsed time is 0.024238 seconds.
Processed example 535 out of 1034

Question: What are the first, middle, and last names for everybody enrolled in a Bachelors program?
SQL: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'
Look for potential candidates "[('Bachelors', 0.75), ('names', 0.75), ('everybody', 0.75), ('program', 0.75), ('1', 1.0)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[('Bachelor', 'degree summary name', 'degree programs')]"
Elapsed time is 0.012509 seconds.
Processed example 536 out of 1034

Question: Find the kind of program which most number of students are enrolled in?
SQL: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('kind', 0.75), ('number', 0.75), ('program', 0.75), ('students', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.012200 seconds.
Processed example 537 out of 1034

Question: What is the degree summary name that has the most number of students enrolled?
SQL: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('degree summary name', 0.75), ('degree', 0.75), ('summary', 0.75), ('name', 0.75), ('degree summary', 0.75), ('summary name', 0.75), ('students', 0.75), ('number', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.024556 seconds.
Processed example 538 out of 1034

Question: Find the program which most number of students are enrolled in. List both the id and the summary.
SQL: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('List', 0.75), ('program', 0.75), ('number', 0.75), ('students', 0.75), ('summary', 0.75), ('id', 0.75)]" in database student_transcripts_tracking (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.021657 seconds.
Processed example 539 out of 1034

Question: What is the program id and the summary of the degree that has the most students enrolled?
SQL: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('degree', 0.75), ('program id', 0.75), ('program', 0.75), ('id', 0.75), ('summary', 0.75), ('students', 0.75)]" in database student_transcripts_tracking (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.021799 seconds.
Processed example 540 out of 1034

Question: Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.
SQL: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('List', 0.75), ('student', 0.75), ('times', 0.75), ('program', 0.75), ('name', 0.75), ('id', 0.75), ('number', 0.75), ('enrollments', 0.75), ('student id', 0.75), ('1', 1.0)]" in database student_transcripts_tracking (include primary keys: True)
Confirmed the following candidates "[('1', 'department id', 'departments'), ('1', 'course id', 'courses'), ('1', 'section id', 'sections'), ('1', 'student id', 'students'), ('1', 'transcript id', 'transcripts'), ('1', 'degree program id', 'degree programs'), ('1', 'semester id', 'semesters'), ('1', 'address id', 'addresses'), ('1', 'student enrolment id', 'student enrolment'), ('1', 'student course id', 'student enrolment courses')]"
Elapsed time is 0.033441 seconds.
Processed example 541 out of 1034

Question: What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?
SQL: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('id', 0.75), ('name', 0.75), ('number', 0.75), ('enrollments', 0.75), ('student', 0.75), ('most', 0.75), ('program', 0.75), ('1', 1.0)]" in database student_transcripts_tracking (include primary keys: True)
Confirmed the following candidates "[('1', 'department id', 'departments'), ('1', 'course id', 'courses'), ('1', 'section id', 'sections'), ('1', 'student id', 'students'), ('1', 'transcript id', 'transcripts'), ('1', 'degree program id', 'degree programs'), ('1', 'semester id', 'semesters'), ('1', 'address id', 'addresses'), ('1', 'student enrolment id', 'student enrolment'), ('1', 'student course id', 'student enrolment courses')]"
Elapsed time is 0.025494 seconds.
Processed example 542 out of 1034

Question: Which semesters do not have any student enrolled? List the semester name.
SQL: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )
Look for potential candidates "[('List', 0.75), ('student', 0.75), ('semester name', 0.75), ('semester', 0.75), ('name', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.014643 seconds.
Processed example 543 out of 1034

Question: What is the name of the semester with no students enrolled?
SQL: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )
Look for potential candidates "[('no', 0.9), ('name', 0.75), ('students', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.008962 seconds.
Processed example 544 out of 1034

Question: What are all the course names of the courses which ever have students enrolled in?
SQL: SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id
Look for potential candidates "[('courses', 0.75), ('course names', 0.75), ('course', 0.75), ('names', 0.75), ('students', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.015428 seconds.
Processed example 545 out of 1034

Question: What are the names of all courses that have some students enrolled?
SQL: SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id
Look for potential candidates "[('courses', 0.75), ('names', 0.75), ('students', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.011386 seconds.
Processed example 546 out of 1034

Question: What's the name of the course with most number of enrollments?
SQL: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('name', 0.75), ('course', 0.75), ('enrollments', 0.75), ('number', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.011998 seconds.
Processed example 547 out of 1034

Question: What is the name of the course with the most students enrolled?
SQL: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('name', 0.75), ('course', 0.75), ('students', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.009128 seconds.
Processed example 548 out of 1034

Question: Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.
SQL: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id
Look for potential candidates "[('North Carolina', 0.75), ('NC', 0.9), ('North Carolin', 0.9), ('name', 0.75), ('students', 0.75), ('state', 0.75), ('North', 0.75), ('Carolina', 0.75), ('degree program', 0.75), ('degree', 0.75), ('program', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[('NorthCarolina', 'state province county', 'addresses')]"
Elapsed time is 0.031182 seconds.
Processed example 549 out of 1034

Question: What are the last name of the students who live in North Carolina but have not registered in any degree programs?
SQL: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id
Look for potential candidates "[('North Carolina', 0.75), ('NC', 0.9), ('North Carolin', 0.9), ('students', 0.75), ('name', 0.75), ('North', 0.75), ('Carolina', 0.75), ('degree programs', 0.75), ('degree', 0.75), ('programs', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[('NorthCarolina', 'state province county', 'addresses')]"
Elapsed time is 0.029061 seconds.
Processed example 550 out of 1034

Question: Show the date and id of the transcript with at least 2 course results.
SQL: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
Look for potential candidates "[('transcript', 0.75), ('id', 0.75), ('course results', 0.75), ('course', 0.75), ('results', 0.75), ('2', 1.0)]" in database student_transcripts_tracking (include primary keys: True)
Confirmed the following candidates "[('2', 'student id', 'students'), ('2', 'transcript id', 'transcripts'), ('2', 'course id', 'courses'), ('2', 'department id', 'departments'), ('2', 'student enrolment id', 'student enrolment'), ('2', 'address id', 'addresses'), ('2', 'student course id', 'student enrolment courses'), ('2', 'semester id', 'semesters'), ('2', 'section id', 'sections'), ('2', 'degree program id', 'degree programs')]"
Elapsed time is 0.018697 seconds.
Processed example 551 out of 1034

Question: What is the date and id of the transcript with at least 2 courses listed?
SQL: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
Look for potential candidates "[('transcript', 0.75), ('id', 0.75), ('courses', 0.75), ('2', 1.0)]" in database student_transcripts_tracking (include primary keys: True)
Confirmed the following candidates "[('2', 'student id', 'students'), ('2', 'transcript id', 'transcripts'), ('2', 'course id', 'courses'), ('2', 'department id', 'departments'), ('2', 'student enrolment id', 'student enrolment'), ('2', 'address id', 'addresses'), ('2', 'student course id', 'student enrolment courses'), ('2', 'semester id', 'semesters'), ('2', 'section id', 'sections'), ('2', 'degree program id', 'degree programs')]"
Elapsed time is 0.011735 seconds.
Processed example 552 out of 1034

Question: What is the phone number of the man with the first name Timmothy and the last name Ward?
SQL: SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'
Look for potential candidates "[('Timmothy', 0.75), ('Ward', 0.75), ('phone number', 0.75), ('phone', 0.75), ('number', 0.75), ('name', 0.75), ('man', 0.75), ('1', 1.0)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[('Ward', 'last name', 'students'), ('Timmothy', 'first name', 'students')]"
Elapsed time is 0.020114 seconds.
Processed example 553 out of 1034

Question: What is the mobile phone number of the student named Timmothy Ward ?
SQL: select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'
Look for potential candidates "[('Timmothy Ward', 0.75), ('mobile phone number', 0.75), ('mobile', 0.75), ('phone', 0.75), ('number', 0.75), ('mobile phone', 0.75), ('phone number', 0.75), ('student', 0.75), ('Timmothy', 0.75), ('Ward', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[('Ward', 'last name', 'students'), ('Timmothy', 'first name', 'students')]"
Elapsed time is 0.034970 seconds.
Processed example 554 out of 1034

Question: Who is the first student to register? List the first name, middle name and last name.
SQL: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
Look for potential candidates "[('List', 0.75), ('student', 0.75), ('name', 0.75), ('1', 1.0)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.009496 seconds.
Processed example 555 out of 1034

Question: What is the first, middle, and last name of the first student to register?
SQL: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
Look for potential candidates "[('name', 0.75), ('student', 0.75), ('1', 1.0)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.006756 seconds.
Processed example 556 out of 1034

Question: Who is the earliest graduate of the school? List the first name, middle name and last name.
SQL: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
Look for potential candidates "[('List', 0.75), ('graduate', 0.75), ('school', 0.75), ('name', 0.75), ('1', 1.0)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.012223 seconds.
Processed example 557 out of 1034

Question: What is the first, middle, and last name of the earliest school graduate?
SQL: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
Look for potential candidates "[('name', 0.75), ('school graduate', 0.75), ('school', 0.75), ('graduate', 0.75), ('1', 1.0)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.012333 seconds.
Processed example 558 out of 1034

Question: Whose permanent address is different from his or her current address? List his or her first name.
SQL: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
Look for potential candidates "[('List', 0.75), ('address', 0.75), ('name', 0.75), ('1', 1.0)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.009290 seconds.
Processed example 559 out of 1034

Question: What is the first name of the student whose permanent address is different from his or her current one?
SQL: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
Look for potential candidates "[('student', 0.75), ('name', 0.75), ('address', 0.75), ('1', 1.0)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.009529 seconds.
Processed example 560 out of 1034

Question: Which address holds the most number of students currently? List the address id and all lines.
SQL: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('List', 0.75), ('address', 0.75), ('number', 0.75), ('students', 0.75), ('lines', 0.75), ('id', 0.75)]" in database student_transcripts_tracking (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.023005 seconds.
Processed example 561 out of 1034

Question: What is the id, line 1, and line 2 of the address with the most students?
SQL: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('id', 0.75), ('students', 0.75), ('address', 0.75), ('2', 1.0), ('1', 1.0)]" in database student_transcripts_tracking (include primary keys: True)
Confirmed the following candidates "[('2', 'student id', 'students'), ('1', 'department id', 'departments'), ('1', 'course id', 'courses'), ('2', 'transcript id', 'transcripts'), ('2', 'course id', 'courses'), ('2', 'department id', 'departments'), ('1', 'section id', 'sections'), ('1', 'student id', 'students'), ('2', 'address id', 'addresses'), ('1', 'student enrolment id', 'student enrolment')]"
Elapsed time is 0.012062 seconds.
Processed example 562 out of 1034

Question: On average, when were the transcripts printed?
SQL: SELECT avg(transcript_date) FROM Transcripts
Look for potential candidates "[('average', 0.75), ('transcripts', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.006597 seconds.
Processed example 563 out of 1034

Question: What is the average transcript date?
SQL: SELECT avg(transcript_date) FROM Transcripts
Look for potential candidates "[('transcript', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003921 seconds.
Processed example 564 out of 1034

Question: When is the first transcript released? List the date and details.
SQL: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
Look for potential candidates "[('List', 0.75), ('transcript', 0.75), ('details', 0.75), ('1', 1.0)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.009764 seconds.
Processed example 565 out of 1034

Question: What is the earliest date of a transcript release, and what details can you tell me?
SQL: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
Look for potential candidates "[('transcript release', 0.75), ('transcript', 0.75), ('release', 0.75), ('details', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.012519 seconds.
Processed example 566 out of 1034

Question: How many transcripts are released?
SQL: SELECT count(*) FROM Transcripts
Look for potential candidates "[('transcripts', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003768 seconds.
Processed example 567 out of 1034

Question: How many transcripts are listed?
SQL: SELECT count(*) FROM Transcripts
Look for potential candidates "[('transcripts', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003754 seconds.
Processed example 568 out of 1034

Question: What is the last transcript release date?
SQL: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
Look for potential candidates "[('transcript', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003776 seconds.
Processed example 569 out of 1034

Question: When was the last transcript released?
SQL: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
Look for potential candidates "[('transcript', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003767 seconds.
Processed example 570 out of 1034

Question: How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.
SQL: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('Also', 0.75), ('times', 0.75), ('most', 0.75), ('course enrollment result show', 0.75), ('course', 0.75), ('enrollment', 0.75), ('result', 0.75), ('show', 0.75), ('course enrollment', 0.75), ('enrollment result', 0.75), ('result show', 0.75), ('course enrollment result', 0.75), ('enrollment result show', 0.75), ('transcripts', 0.75), ('course enrollment id', 0.75), ('id', 0.75), ('enrollment id', 0.75)]" in database student_transcripts_tracking (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.062772 seconds.
Processed example 571 out of 1034

Question: What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?
SQL: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('enrollment id', 0.75), ('enrollment', 0.75), ('id', 0.75), ('number', 0.75), ('times', 0.75), ('course', 0.75), ('transcripts', 0.75)]" in database student_transcripts_tracking (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.026180 seconds.
Processed example 572 out of 1034

Question: Show the date of the transcript which shows the least number of results, also list the id.
SQL: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
Look for potential candidates "[('transcript', 0.75), ('id', 0.75), ('number', 0.75), ('results', 0.75)]" in database student_transcripts_tracking (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.015187 seconds.
Processed example 573 out of 1034

Question: What is the date and id of the transcript with the least number of results?
SQL: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
Look for potential candidates "[('transcript', 0.75), ('id', 0.75), ('results', 0.75), ('number', 0.75)]" in database student_transcripts_tracking (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.014946 seconds.
Processed example 574 out of 1034

Question: Find the semester when both Master students and Bachelor students got enrolled in.
SQL: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'
Look for potential candidates "[('Master', 0.75), ('Bachelor', 0.75), ('students', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[('Bachelor', 'degree summary name', 'degree programs'), ('Master', 'degree summary name', 'degree programs')]"
Elapsed time is 0.011184 seconds.
Processed example 575 out of 1034

Question: What is the id of the semester that had both Masters and Bachelors students enrolled?
SQL: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'
Look for potential candidates "[('Masters', 0.75), ('Bachelors', 0.75), ('semester', 0.75), ('id', 0.75), ('students', 0.75)]" in database student_transcripts_tracking (include primary keys: True)
Confirmed the following candidates "[('Bachelor', 'degree summary name', 'degree programs'), ('Master', 'degree summary name', 'degree programs')]"
Elapsed time is 0.018416 seconds.
Processed example 576 out of 1034

Question: How many different addresses do the students currently live?
SQL: SELECT count(DISTINCT current_address_id) FROM Students
Look for potential candidates "[('addresses', 0.75), ('students', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.006652 seconds.
Processed example 577 out of 1034

Question: What are the different addresses that have students living there?
SQL: SELECT count(DISTINCT current_address_id) FROM Students
Look for potential candidates "[('addresses', 0.75), ('students', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.006488 seconds.
Processed example 578 out of 1034

Question: List all the student details in reversed lexicographical order.
SQL: SELECT other_student_details FROM Students ORDER BY other_student_details DESC
Look for potential candidates "[('student details', 0.75), ('student', 0.75), ('details', 0.75), ('order', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.012401 seconds.
Processed example 579 out of 1034

Question: What other details can you tell me about students in reverse alphabetical order?
SQL: SELECT other_student_details FROM Students ORDER BY other_student_details DESC
Look for potential candidates "[('details', 0.75), ('students', 0.75), ('order', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.009192 seconds.
Processed example 580 out of 1034

Question: Describe the section h.
SQL: SELECT section_description FROM Sections WHERE section_name  =  'h'
Look for potential candidates "[('section', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003547 seconds.
Processed example 581 out of 1034

Question: What is the description for the section named h?
SQL: SELECT section_description FROM Sections WHERE section_name  =  'h'
Look for potential candidates "[('description', 0.75), ('section', 0.75)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.006437 seconds.
Processed example 582 out of 1034

Question: Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .
SQL: select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'
Look for potential candidates "[('Haiti', 0.75), ('students', 0.75), ('name', 0.75), ('cell phone number', 0.75), ('cell', 0.75), ('phone', 0.75), ('number', 0.75), ('cell phone', 0.75), ('phone number', 0.75), ('1', 1.0), ('9700166582', 1.0)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[('Haiti', 'country', 'addresses')]"
Elapsed time is 0.026217 seconds.
Processed example 583 out of 1034

Question: What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?
SQL: select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'
Look for potential candidates "[('Haiti', 0.75), ('students', 0.75), ('names', 0.75), ('cell phone number', 0.75), ('cell', 0.75), ('phone', 0.75), ('number', 0.75), ('cell phone', 0.75), ('phone number', 0.75), ('1', 1.0), ('9700166582', 1.0)]" in database student_transcripts_tracking (include primary keys: False)
Confirmed the following candidates "[('Haiti', 'country', 'addresses')]"
Elapsed time is 0.026201 seconds.
Processed example 584 out of 1034

Question: List the title of all cartoons in alphabetical order.
SQL: SELECT Title FROM Cartoon ORDER BY title
Look for potential candidates "[('title', 0.75), ('cartoons', 0.75), ('order', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.005129 seconds.
Processed example 585 out of 1034

Question: What are the titles of the cartoons sorted alphabetically?
SQL: SELECT Title FROM Cartoon ORDER BY title
Look for potential candidates "[('titles', 0.75), ('cartoons', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003211 seconds.
Processed example 586 out of 1034

Question: List all cartoon directed by "Ben Jones".
SQL: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";
Look for potential candidates "[('Ben Jones', 0.9), ('cartoon', 0.75), ('Ben', 0.75), ('Jones', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('Ben Jones', 'directed by', 'cartoon')]"
Elapsed time is 0.006037 seconds.
Processed example 587 out of 1034

Question: What are the names of all cartoons directed by Ben Jones?
SQL: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";
Look for potential candidates "[('Ben Jones', 0.75), ('names', 0.75), ('cartoons', 0.75), ('Ben', 0.75), ('Jones', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('Ben Jones', 'directed by', 'cartoon')]"
Elapsed time is 0.007202 seconds.
Processed example 588 out of 1034

Question: How many cartoons were written by "Joseph Kuhr"?
SQL: SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";
Look for potential candidates "[('Joseph Kuhr', 0.9), ('cartoons', 0.75), ('Joseph', 0.75), ('Kuhr', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('Joseph Kuhr', 'written by', 'cartoon')]"
Elapsed time is 0.006061 seconds.
Processed example 589 out of 1034

Question: What is the number of cartoones written by Joseph Kuhr?
SQL: SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";
Look for potential candidates "[('Joseph Kuhr', 0.75), ('number', 0.75), ('cartoones', 0.75), ('Joseph', 0.75), ('Kuhr', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('Joseph Kuhr', 'written by', 'cartoon')]"
Elapsed time is 0.007634 seconds.
Processed example 590 out of 1034

Question: list all cartoon titles and their directors ordered by their air date
SQL: SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date
Look for potential candidates "[('list', 0.75), ('cartoon titles', 0.75), ('cartoon', 0.75), ('titles', 0.75), ('directors', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.007385 seconds.
Processed example 591 out of 1034

Question: What is the name and directors of all the cartoons that are ordered by air date?
SQL: SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date
Look for potential candidates "[('cartoons', 0.75), ('name', 0.75), ('directors', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.004635 seconds.
Processed example 592 out of 1034

Question: List the title of all cartoon directed by "Ben Jones" or "Brandon Vietti".
SQL: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";
Look for potential candidates "[('Ben Jones', 0.9), ('Brandon Vietti', 0.9), ('title', 0.75), ('cartoon', 0.75), ('Ben', 0.75), ('Jones', 0.75), ('Brandon', 0.75), ('Vietti', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('Ben Jones', 'directed by', 'cartoon'), ('Brandon Vietti', 'directed by', 'cartoon')]"
Elapsed time is 0.011506 seconds.
Processed example 593 out of 1034

Question: What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?
SQL: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";
Look for potential candidates "[('Ben Jones', 0.75), ('Brandon Vietti', 0.75), ('titles', 0.75), ('cartoons', 0.75), ('Brandon', 0.75), ('Vietti', 0.75), ('Ben', 0.75), ('Jones', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('Ben Jones', 'directed by', 'cartoon'), ('Brandon Vietti', 'directed by', 'cartoon')]"
Elapsed time is 0.011328 seconds.
Processed example 594 out of 1034

Question: Which country has the most of TV Channels? List the country and number of TV Channels it has.
SQL: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;
Look for potential candidates "[('TV', 1.0), ('TV Channels', 0.75), ('List', 0.75), ('country', 0.75), ('most', 0.75), ('Channels', 0.75), ('number', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.008828 seconds.
Processed example 595 out of 1034

Question: What is the country with the most number of TV Channels and how many does it have?
SQL: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;
Look for potential candidates "[('TV', 1.0), ('TV Channels', 0.75), ('number', 0.75), ('country', 0.75), ('Channels', 0.75), ('many', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.007922 seconds.
Processed example 596 out of 1034

Question: List the number of different series names and contents in the TV Channel table.
SQL: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;
Look for potential candidates "[('TV', 1.0), ('TV Channel', 0.75), ('number', 0.75), ('series names', 0.75), ('series', 0.75), ('names', 0.75), ('contents', 0.75), ('table', 0.75), ('Channel', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.011602 seconds.
Processed example 597 out of 1034

Question: How many different series and contents are listed in the TV Channel table?
SQL: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;
Look for potential candidates "[('TV', 1.0), ('TV Channel', 0.75), ('series', 0.75), ('contents', 0.75), ('TV Channel table', 0.75), ('Channel', 0.75), ('table', 0.75), ('Channel table', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.010498 seconds.
Processed example 598 out of 1034

Question: What is the content of TV Channel with serial name "Sky Radio"?
SQL: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
Look for potential candidates "[('Sky Radio', 0.9), ('TV', 1.0), ('TV Channel', 0.75), ('Sky', 0.75), ('Radio', 0.75), ('content', 0.75), ('Channel', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('Sky Radio', 'series name', 'tv channel')]"
Elapsed time is 0.008987 seconds.
Processed example 599 out of 1034

Question: What is the content of the series Sky Radio?
SQL: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
Look for potential candidates "[('Sky Radio', 0.75), ('content', 0.75), ('series', 0.75), ('Sky', 0.75), ('Radio', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('Sky Radio', 'series name', 'tv channel')]"
Elapsed time is 0.007451 seconds.
Processed example 600 out of 1034

Question: What is the Package Option of TV Channel with serial name "Sky Radio"?
SQL: SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
Look for potential candidates "[('Sky Radio', 0.9), ('TV', 1.0), ('Package Option', 0.75), ('TV Channel', 0.75), ('Sky', 0.75), ('Radio', 0.75), ('Package', 0.75), ('Option', 0.75), ('Channel', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('Sky Radio', 'series name', 'tv channel'), ('Option', 'package option', 'tv channel')]"
Elapsed time is 0.012170 seconds.
Processed example 601 out of 1034

Question: What are the Package Options of the TV Channels whose series names are Sky Radio?
SQL: SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
Look for potential candidates "[('TV', 1.0), ('Package Options', 0.75), ('TV Channels', 0.75), ('Sky Radio', 0.75), ('Package', 0.75), ('Options', 0.75), ('Channels', 0.75), ('Sky', 0.75), ('Radio', 0.75), ('series names', 0.75), ('series', 0.75), ('names', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('Sky Radio', 'series name', 'tv channel'), ('Option', 'package option', 'tv channel')]"
Elapsed time is 0.016051 seconds.
Processed example 602 out of 1034

Question: How many TV Channel using language English?
SQL: SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";
Look for potential candidates "[('TV', 1.0), ('TV Channel', 0.75), ('English', 0.75), ('Channel', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('English', 'language', 'tv channel')]"
Elapsed time is 0.004756 seconds.
Processed example 603 out of 1034

Question: How many TV Channels use the English language?
SQL: SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";
Look for potential candidates "[('TV', 1.0), ('TV Channels', 0.75), ('English', 0.75), ('Channels', 0.75), ('language', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('English', 'language', 'tv channel')]"
Elapsed time is 0.006209 seconds.
Processed example 604 out of 1034

Question: List the language used least number of TV Channel. List language and number of TV Channel.
SQL: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;
Look for potential candidates "[('TV', 1.0), ('TV Channel', 0.75), ('language', 0.75), ('number', 0.75), ('Channel', 0.75), ('List language', 0.75), ('List', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.009291 seconds.
Processed example 605 out of 1034

Question: What are the languages used by the least number of TV Channels and how many channels use it?
SQL: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;
Look for potential candidates "[('TV', 1.0), ('TV Channels', 0.75), ('languages', 0.75), ('Channels', 0.75), ('number', 0.75), ('channels', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.007656 seconds.
Processed example 606 out of 1034

Question: List each language and the number of TV Channels using it.
SQL: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE
Look for potential candidates "[('TV', 1.0), ('TV Channels', 0.75), ('language', 0.75), ('number', 0.75), ('Channels', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.006139 seconds.
Processed example 607 out of 1034

Question: For each language, list the number of TV Channels that use it.
SQL: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE
Look for potential candidates "[('TV', 1.0), ('TV Channels', 0.75), ('Channels', 0.75), ('number', 0.75), ('language', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.006209 seconds.
Processed example 608 out of 1034

Question: What is the TV Channel that shows the cartoon "The Rise of the Blue Beetle!"? List the TV Channel's series name.
SQL: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";
Look for potential candidates "[('The Rise of the Blue Beetle!', 0.9), ('TV', 1.0), ('TV Channel', 0.75), ('The Rise', 0.75), ('Blue Beetle', 0.75), ('List', 0.75), ('Channel', 0.75), ('The Rise of the Blue Beetle', 0.75), ('The', 0.75), ('Rise', 0.75), ('of', 0.75), ('the', 0.75), ('Blue', 0.75), ('Beetle', 0.75), ('Rise of', 0.75), ('of the', 0.75), ('the Blue', 0.75), ('The Rise of', 0.75), ('Rise of the', 0.75), ('of the Blue', 0.75), ('the Blue Beetle', 0.75), ('The Rise of the', 0.75), ('Rise of the Blue', 0.75), ('of the Blue Beetle', 0.75), ('The Rise of the Blue', 0.75), ('Rise of the Blue Beetle', 0.75), ('cartoon', 0.75), ('series name', 0.75), ('series', 0.75), ('name', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('The Rise of the Blue Beetle!', 'title', 'cartoon'), ('The Rise of the Blue Beetle!', 'title', 'cartoon'), ('The Rise of the Blue Beetle!', 'title', 'cartoon'), ('Fall of the Blue Beetle!', 'title', 'cartoon'), ('Fall of the Blue Beetle!', 'title', 'cartoon')]"
Elapsed time is 0.042255 seconds.
Processed example 609 out of 1034

Question: What is the series name of the TV Channel that shows the cartoon "The Rise of the Blue Beetle"?
SQL: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";
Look for potential candidates "[('The Rise of the Blue Beetle', 0.9), ('TV', 1.0), ('TV Channel', 0.75), ('The Rise', 0.75), ('Blue Beetle', 0.75), ('Channel', 0.75), ('series name', 0.75), ('series', 0.75), ('name', 0.75), ('cartoon', 0.75), ('Blue', 0.75), ('Beetle', 0.75), ('The', 0.75), ('Rise', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('The Rise of the Blue Beetle!', 'title', 'cartoon')]"
Elapsed time is 0.019874 seconds.
Processed example 610 out of 1034

Question: List the title of all  Cartoons showed on TV Channel with series name "Sky Radio".
SQL: SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
Look for potential candidates "[('Sky Radio', 0.9), ('TV', 1.0), ('TV Channel', 0.75), ('Cartoons', 0.75), ('title', 0.75), ('Sky', 0.75), ('Radio', 0.75), ('Channel', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('Sky Radio', 'series name', 'tv channel')]"
Elapsed time is 0.010447 seconds.
Processed example 611 out of 1034

Question: What is the title of all the cartools that are on the TV Channel with the series name "Sky Radio"?
SQL: SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
Look for potential candidates "[('Sky Radio', 0.9), ('TV', 1.0), ('TV Channel', 0.75), ('cartools', 0.75), ('Sky', 0.75), ('Radio', 0.75), ('title', 0.75), ('Channel', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('Sky Radio', 'series name', 'tv channel')]"
Elapsed time is 0.010613 seconds.
Processed example 612 out of 1034

Question: List the Episode of all TV series sorted by rating.
SQL: SELECT Episode FROM TV_series ORDER BY rating
Look for potential candidates "[('TV', 1.0), ('Episode', 0.75), ('TV series', 0.75), ('series', 0.75), ('rating', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.006184 seconds.
Processed example 613 out of 1034

Question: What are all of the episodes ordered by ratings?
SQL: SELECT Episode FROM TV_series ORDER BY rating
Look for potential candidates "[('all', 0.75), ('episodes', 0.75), ('ratings', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.004675 seconds.
Processed example 614 out of 1034

Question: List top 3 highest Rating  TV series. List the TV series's Episode and Rating.
SQL: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
Look for potential candidates "[('TV', 1.0), ('Rating', 0.75), ('Episode', 0.75), ('List top', 0.75), ('List', 0.75), ('top', 0.75), ('TV series', 0.75), ('series', 0.75), ('3', 1.0)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.010629 seconds.
Processed example 615 out of 1034

Question: What are 3 most highly rated episodes in the TV series table and what were those ratings?
SQL: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
Look for potential candidates "[('TV', 1.0), ('ratings', 0.75), ('episodes', 0.75), ('TV series table', 0.75), ('series', 0.75), ('table', 0.75), ('TV series', 0.75), ('series table', 0.75), ('3', 1.0)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.011497 seconds.
Processed example 616 out of 1034

Question: What is minimum and maximum share of TV series?
SQL: SELECT max(SHARE) , min(SHARE) FROM TV_series;
Look for potential candidates "[('TV', 1.0), ('share', 0.75), ('TV series', 0.75), ('series', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.005269 seconds.
Processed example 617 out of 1034

Question: What is the maximum and minimum share for the TV series?
SQL: SELECT max(SHARE) , min(SHARE) FROM TV_series;
Look for potential candidates "[('TV', 1.0), ('share', 0.75), ('TV series', 0.75), ('series', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.005766 seconds.
Processed example 618 out of 1034

Question: What is the air date of TV series with Episode "A Love of a Lifetime"?
SQL: SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";
Look for potential candidates "[('A Love of a Lifetime', 0.9), ('TV', 1.0), ('Episode', 0.75), ('Love', 0.75), ('Lifetime', 0.75), ('TV series', 0.75), ('series', 0.75), ('A', 0.75), ('of', 0.75), ('a', 0.75), ('A Love', 0.75), ('Love of', 0.75), ('of a', 0.75), ('a Lifetime', 0.75), ('A Love of', 0.75), ('Love of a', 0.75), ('of a Lifetime', 0.75), ('A Love of a', 0.75), ('Love of a Lifetime', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('A Love of a Lifetime', 'episode', 'tv series'), ('A Love of a Lifetime', 'episode', 'tv series')]"
Elapsed time is 0.026512 seconds.
Processed example 619 out of 1034

Question: When did the episode "A Love of a Lifetime" air?
SQL: SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";
Look for potential candidates "[('A Love of a Lifetime', 0.9), ('Love', 0.75), ('Lifetime', 0.75), ('episode', 0.75), ('air', 0.75), ('A', 0.75), ('of', 0.75), ('a', 0.75), ('A Love', 0.75), ('Love of', 0.75), ('of a', 0.75), ('a Lifetime', 0.75), ('A Love of', 0.75), ('Love of a', 0.75), ('of a Lifetime', 0.75), ('A Love of a', 0.75), ('Love of a Lifetime', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('A Love of a Lifetime', 'episode', 'tv series'), ('A Love of a Lifetime', 'episode', 'tv series')]"
Elapsed time is 0.024242 seconds.
Processed example 620 out of 1034

Question: What is Weekly Rank of TV series with Episode "A Love of a Lifetime"?
SQL: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
Look for potential candidates "[('A Love of a Lifetime', 0.9), ('TV', 1.0), ('Weekly Rank', 0.75), ('Episode', 0.75), ('Love', 0.75), ('Lifetime', 0.75), ('Rank', 0.75), ('TV series', 0.75), ('series', 0.75), ('A', 0.75), ('of', 0.75), ('a', 0.75), ('A Love', 0.75), ('Love of', 0.75), ('of a', 0.75), ('a Lifetime', 0.75), ('A Love of', 0.75), ('Love of a', 0.75), ('of a Lifetime', 0.75), ('A Love of a', 0.75), ('Love of a Lifetime', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('A Love of a Lifetime', 'episode', 'tv series'), ('A Love of a Lifetime', 'episode', 'tv series')]"
Elapsed time is 0.028389 seconds.
Processed example 621 out of 1034

Question: What is the weekly rank for the episode "A Love of a Lifetime"?
SQL: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
Look for potential candidates "[('A Love of a Lifetime', 0.9), ('Love', 0.75), ('Lifetime', 0.75), ('A', 0.75), ('of', 0.75), ('a', 0.75), ('A Love', 0.75), ('Love of', 0.75), ('of a', 0.75), ('a Lifetime', 0.75), ('A Love of', 0.75), ('Love of a', 0.75), ('of a Lifetime', 0.75), ('A Love of a', 0.75), ('Love of a Lifetime', 0.75), ('rank', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('A Love of a Lifetime', 'episode', 'tv series'), ('A Love of a Lifetime', 'episode', 'tv series')]"
Elapsed time is 0.029189 seconds.
Processed example 622 out of 1034

Question: What is the TV Channel of TV series with Episode "A Love of a Lifetime"? List the TV Channel's series name.
SQL: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";
Look for potential candidates "[('A Love of a Lifetime', 0.9), ('TV', 1.0), ('TV Channel', 0.75), ('Episode', 0.75), ('Love', 0.75), ('Lifetime', 0.75), ('List', 0.75), ('Channel', 0.75), ('TV series', 0.75), ('series', 0.75), ('A', 0.75), ('of', 0.75), ('a', 0.75), ('A Love', 0.75), ('Love of', 0.75), ('of a', 0.75), ('a Lifetime', 0.75), ('A Love of', 0.75), ('Love of a', 0.75), ('of a Lifetime', 0.75), ('A Love of a', 0.75), ('Love of a Lifetime', 0.75), ('series name', 0.75), ('name', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('A Love of a Lifetime', 'episode', 'tv series'), ('A Love of a Lifetime', 'episode', 'tv series')]"
Elapsed time is 0.033511 seconds.
Processed example 623 out of 1034

Question: What is the name of the series that has the episode "A Love of a Lifetime"?
SQL: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";
Look for potential candidates "[('A Love of a Lifetime', 0.9), ('Love', 0.75), ('Lifetime', 0.75), ('series', 0.75), ('name', 0.75), ('episode', 0.75), ('A', 0.75), ('of', 0.75), ('a', 0.75), ('A Love', 0.75), ('Love of', 0.75), ('of a', 0.75), ('a Lifetime', 0.75), ('A Love of', 0.75), ('Love of a', 0.75), ('of a Lifetime', 0.75), ('A Love of a', 0.75), ('Love of a Lifetime', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('A Love of a Lifetime', 'episode', 'tv series'), ('A Love of a Lifetime', 'episode', 'tv series')]"
Elapsed time is 0.026003 seconds.
Processed example 624 out of 1034

Question: List the Episode of all  TV series showed on TV Channel with series name "Sky Radio".
SQL: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
Look for potential candidates "[('Sky Radio', 0.9), ('TV', 1.0), ('TV Channel', 0.75), ('Episode', 0.75), ('Sky', 0.75), ('Radio', 0.75), ('TV series', 0.75), ('series', 0.75), ('Channel', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('Sky Radio', 'series name', 'tv channel')]"
Elapsed time is 0.012355 seconds.
Processed example 625 out of 1034

Question: What is the episode for the TV series named "Sky Radio"?
SQL: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
Look for potential candidates "[('Sky Radio', 0.9), ('TV', 1.0), ('episode', 0.75), ('TV series', 0.75), ('series', 0.75), ('Sky', 0.75), ('Radio', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('Sky Radio', 'series name', 'tv channel')]"
Elapsed time is 0.009685 seconds.
Processed example 626 out of 1034

Question: Find the number of cartoons directed by each of the listed directors.
SQL: SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by
Look for potential candidates "[('number', 0.75), ('cartoons', 0.75), ('each', 0.75), ('directors', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.006102 seconds.
Processed example 627 out of 1034

Question: How many cartoons did each director create?
SQL: SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by
Look for potential candidates "[('cartoons', 0.75), ('director', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003374 seconds.
Processed example 628 out of 1034

Question: Find the production code and channel of the most recently aired cartoon .
SQL: select production_code ,  channel from cartoon order by original_air_date desc limit 1
Look for potential candidates "[('production code', 0.75), ('production', 0.75), ('code', 0.75), ('channel', 0.75), ('cartoon', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.007718 seconds.
Processed example 629 out of 1034

Question: What is the produdction code and channel of the most recent cartoon ?
SQL: select production_code ,  channel from cartoon order by original_air_date desc limit 1
Look for potential candidates "[('produdction code', 0.75), ('produdction', 0.75), ('code', 0.75), ('channel', 0.75), ('cartoon', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.008243 seconds.
Processed example 630 out of 1034

Question: Find the package choice and series name of the TV channel that has high definition TV.
SQL: SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"
Look for potential candidates "[('TV', 1.0), ('package choice', 0.75), ('package', 0.75), ('choice', 0.75), ('TV channel', 0.75), ('channel', 0.75), ('name', 0.75), ('series', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.010782 seconds.
Processed example 631 out of 1034

Question: What are the package options and the name of the series for the TV Channel that supports high definition TV?
SQL: SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"
Look for potential candidates "[('TV', 1.0), ('TV Channel', 0.75), ('package options', 0.75), ('package', 0.75), ('options', 0.75), ('series', 0.75), ('name', 0.75), ('Channel', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('Option', 'package option', 'tv channel')]"
Elapsed time is 0.010649 seconds.
Processed example 632 out of 1034

Question: which countries' tv channels are playing some cartoon written by Todd Casey?
SQL: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
Look for potential candidates "[('Todd Casey', 0.75), ('countries', 0.75), ('tv channels', 0.75), ('tv', 0.75), ('channels', 0.75), ('cartoon', 0.75), ('Todd', 0.75), ('Casey', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('Todd Casey', 'written by', 'cartoon')]"
Elapsed time is 0.012106 seconds.
Processed example 633 out of 1034

Question: What are the countries that have cartoons on TV that were written by Todd Casey?
SQL: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
Look for potential candidates "[('TV', 1.0), ('Todd Casey', 0.75), ('cartoons', 0.75), ('countries', 0.75), ('Todd', 0.75), ('Casey', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('Todd Casey', 'written by', 'cartoon')]"
Elapsed time is 0.007610 seconds.
Processed example 634 out of 1034

Question: which countries' tv channels are not playing any cartoon written by Todd Casey?
SQL: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
Look for potential candidates "[('Todd Casey', 0.75), ('countries', 0.75), ('tv channels', 0.75), ('tv', 0.75), ('channels', 0.75), ('cartoon', 0.75), ('Todd', 0.75), ('Casey', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('Todd Casey', 'written by', 'cartoon')]"
Elapsed time is 0.011864 seconds.
Processed example 635 out of 1034

Question: What are the countries that are not playing cartoons written by Todd Casey?
SQL: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
Look for potential candidates "[('Todd Casey', 0.75), ('countries', 0.75), ('cartoons', 0.75), ('Todd', 0.75), ('Casey', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('Todd Casey', 'written by', 'cartoon')]"
Elapsed time is 0.007995 seconds.
Processed example 636 out of 1034

Question: Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?
SQL: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'
Look for potential candidates "[('Ben Jones', 0.75), ('Michael Chang', 0.75), ('tv channel', 0.75), ('tv', 0.75), ('channel', 0.75), ('series name', 0.75), ('series', 0.75), ('name', 0.75), ('country', 0.75), ('cartoons', 0.75), ('Ben', 0.75), ('Jones', 0.75), ('Michael', 0.75), ('Chang', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('Ben Jones', 'directed by', 'cartoon'), ('Michael Chang', 'directed by', 'cartoon')]"
Elapsed time is 0.019878 seconds.
Processed example 637 out of 1034

Question: What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?
SQL: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'
Look for potential candidates "[('TV', 1.0), ('Ben Jones', 0.75), ('Michael Chang', 0.75), ('TV channels', 0.75), ('channels', 0.75), ('series name', 0.75), ('series', 0.75), ('name', 0.75), ('country', 0.75), ('cartoons', 0.75), ('Michael', 0.75), ('Chang', 0.75), ('Ben', 0.75), ('Jones', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('Ben Jones', 'directed by', 'cartoon'), ('Michael Chang', 'directed by', 'cartoon')]"
Elapsed time is 0.019116 seconds.
Processed example 638 out of 1034

Question: find the pixel aspect ratio and nation of the tv channels that do not use English.
SQL: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'
Look for potential candidates "[('English', 0.75), ('pixel aspect ratio', 0.75), ('pixel', 0.75), ('aspect', 0.75), ('ratio', 0.75), ('pixel aspect', 0.75), ('aspect ratio', 0.75), ('tv channels', 0.75), ('tv', 0.75), ('channels', 0.75), ('nation', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('English', 'language', 'tv channel')]"
Elapsed time is 0.016238 seconds.
Processed example 639 out of 1034

Question: What is the pixel aspect ratio and country of origin for all TV channels that do not use English?
SQL: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'
Look for potential candidates "[('TV', 1.0), ('English', 0.75), ('pixel aspect ratio', 0.75), ('pixel', 0.75), ('aspect', 0.75), ('ratio', 0.75), ('pixel aspect', 0.75), ('aspect ratio', 0.75), ('origin', 0.75), ('country', 0.75), ('TV channels', 0.75), ('channels', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('English', 'language', 'tv channel')]"
Elapsed time is 0.016616 seconds.
Processed example 640 out of 1034

Question: find id of the tv channels that from the countries where have more than two tv channels.
SQL: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2
Look for potential candidates "[('id', 0.75), ('tv channels', 0.75), ('tv', 0.75), ('channels', 0.75), ('countries', 0.75), ('2', 1.0)]" in database tvshow (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.009120 seconds.
Processed example 641 out of 1034

Question: What are the ids of all tv channels that have more than 2 TV channels?
SQL: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2
Look for potential candidates "[('TV', 1.0), ('tv channels', 0.75), ('tv', 0.75), ('channels', 0.75), ('ids', 0.75), ('TV channels', 0.75), ('2', 1.0)]" in database tvshow (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.008695 seconds.
Processed example 642 out of 1034

Question: find the id of tv channels that do not play any cartoon directed by Ben Jones.
SQL: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
Look for potential candidates "[('Ben Jones', 0.75), ('id', 0.75), ('tv channels', 0.75), ('tv', 0.75), ('channels', 0.75), ('Ben', 0.75), ('Jones', 0.75), ('cartoon', 0.75)]" in database tvshow (include primary keys: True)
Confirmed the following candidates "[('Ben Jones', 'directed by', 'cartoon')]"
Elapsed time is 0.013005 seconds.
Processed example 643 out of 1034

Question: What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?
SQL: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
Look for potential candidates "[('TV', 1.0), ('Ben Jones', 0.75), ('TV channels', 0.75), ('channels', 0.75), ('ids', 0.75), ('cartoons', 0.75), ('Ben', 0.75), ('Jones', 0.75)]" in database tvshow (include primary keys: True)
Confirmed the following candidates "[('Ben Jones', 'directed by', 'cartoon')]"
Elapsed time is 0.012138 seconds.
Processed example 644 out of 1034

Question: find the package option of the tv channel that do not have any cartoon directed by Ben Jones.
SQL: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')
Look for potential candidates "[('Ben Jones', 0.75), ('tv channel', 0.75), ('tv', 0.75), ('channel', 0.75), ('package option', 0.75), ('package', 0.75), ('option', 0.75), ('cartoon', 0.75), ('Ben', 0.75), ('Jones', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('Ben Jones', 'directed by', 'cartoon'), ('Option', 'package option', 'tv channel')]"
Elapsed time is 0.014586 seconds.
Processed example 645 out of 1034

Question: What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?
SQL: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')
Look for potential candidates "[('Ben Jones', 0.75), ('tv channels', 0.75), ('tv', 0.75), ('channels', 0.75), ('package options', 0.75), ('package', 0.75), ('options', 0.75), ('Ben', 0.75), ('Jones', 0.75), ('cartoons', 0.75)]" in database tvshow (include primary keys: False)
Confirmed the following candidates "[('Ben Jones', 'directed by', 'cartoon'), ('Option', 'package option', 'tv channel')]"
Elapsed time is 0.014576 seconds.
Processed example 646 out of 1034

Question: How many poker players are there?
SQL: SELECT count(*) FROM poker_player
Look for potential candidates "[('poker players', 0.75), ('poker', 0.75), ('players', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001115 seconds.
Processed example 647 out of 1034

Question: Count the number of poker players.
SQL: SELECT count(*) FROM poker_player
Look for potential candidates "[('number', 0.75), ('poker players', 0.75), ('poker', 0.75), ('players', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001204 seconds.
Processed example 648 out of 1034

Question: List the earnings of poker players in descending order.
SQL: SELECT Earnings FROM poker_player ORDER BY Earnings DESC
Look for potential candidates "[('earnings', 0.75), ('poker players', 0.75), ('poker', 0.75), ('players', 0.75), ('order', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001494 seconds.
Processed example 649 out of 1034

Question: What are the earnings of poker players, ordered descending by value?
SQL: SELECT Earnings FROM poker_player ORDER BY Earnings DESC
Look for potential candidates "[('earnings', 0.75), ('poker players', 0.75), ('poker', 0.75), ('players', 0.75), ('value', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001502 seconds.
Processed example 650 out of 1034

Question: List the final tables made and the best finishes of poker players.
SQL: SELECT Final_Table_Made ,  Best_Finish FROM poker_player
Look for potential candidates "[('tables', 0.75), ('finishes', 0.75), ('poker players', 0.75), ('poker', 0.75), ('players', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001566 seconds.
Processed example 651 out of 1034

Question: What are the final tables made and best finishes for all poker players?
SQL: SELECT Final_Table_Made ,  Best_Finish FROM poker_player
Look for potential candidates "[('tables', 0.75), ('finishes', 0.75), ('poker players', 0.75), ('poker', 0.75), ('players', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001621 seconds.
Processed example 652 out of 1034

Question: What is the average earnings of poker players?
SQL: SELECT avg(Earnings) FROM poker_player
Look for potential candidates "[('earnings', 0.75), ('poker players', 0.75), ('poker', 0.75), ('players', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001368 seconds.
Processed example 653 out of 1034

Question: Return the average earnings across all poker players.
SQL: SELECT avg(Earnings) FROM poker_player
Look for potential candidates "[('poker players', 0.75), ('poker', 0.75), ('players', 0.75), ('earnings', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001406 seconds.
Processed example 654 out of 1034

Question: What is the money rank of the poker player with the highest earnings?
SQL: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
Look for potential candidates "[('money rank', 0.75), ('money', 0.75), ('rank', 0.75), ('poker player', 0.75), ('poker', 0.75), ('player', 0.75), ('earnings', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002013 seconds.
Processed example 655 out of 1034

Question: Return the money rank of the player with the greatest earnings.
SQL: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
Look for potential candidates "[('player', 0.75), ('money rank', 0.75), ('money', 0.75), ('rank', 0.75), ('earnings', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001702 seconds.
Processed example 656 out of 1034

Question: What is the maximum number of final tables made among poker players with earnings less than 200000?
SQL: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
Look for potential candidates "[('number', 0.75), ('tables', 0.75), ('poker players', 0.75), ('poker', 0.75), ('players', 0.75), ('earnings', 0.75), ('200000', 1.0)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001890 seconds.
Processed example 657 out of 1034

Question: Return the maximum final tables made across all poker players who have earnings below 200000.
SQL: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
Look for potential candidates "[('poker players', 0.75), ('poker', 0.75), ('players', 0.75), ('tables', 0.75), ('earnings', 0.75), ('200000', 1.0)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001629 seconds.
Processed example 658 out of 1034

Question: What are the names of poker players?
SQL: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID
Look for potential candidates "[('names', 0.75), ('poker players', 0.75), ('poker', 0.75), ('players', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001288 seconds.
Processed example 659 out of 1034

Question: Return the names of all the poker players.
SQL: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID
Look for potential candidates "[('names', 0.75), ('poker players', 0.75), ('poker', 0.75), ('players', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001323 seconds.
Processed example 660 out of 1034

Question: What are the names of poker players whose earnings is higher than 300000?
SQL: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000
Look for potential candidates "[('poker players', 0.75), ('poker', 0.75), ('players', 0.75), ('names', 0.75), ('earnings', 0.75), ('300000', 1.0)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001563 seconds.
Processed example 661 out of 1034

Question: Give the names of poker players who have earnings above 300000.
SQL: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000
Look for potential candidates "[('poker players', 0.75), ('poker', 0.75), ('players', 0.75), ('names', 0.75), ('earnings', 0.75), ('300000', 1.0)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001616 seconds.
Processed example 662 out of 1034

Question: List the names of poker players ordered by the final tables made in ascending order.
SQL: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made
Look for potential candidates "[('names', 0.75), ('poker players', 0.75), ('poker', 0.75), ('players', 0.75), ('tables', 0.75), ('order', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001764 seconds.
Processed example 663 out of 1034

Question: What are the names of poker players, ordered ascending by the number of final tables they have made?
SQL: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made
Look for potential candidates "[('names', 0.75), ('poker players', 0.75), ('poker', 0.75), ('players', 0.75), ('number', 0.75), ('tables', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001895 seconds.
Processed example 664 out of 1034

Question: What is the birth date of the poker player with the lowest earnings?
SQL: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
Look for potential candidates "[('poker player', 0.75), ('poker', 0.75), ('player', 0.75), ('earnings', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001310 seconds.
Processed example 665 out of 1034

Question: Return the birth date of the poker player with the lowest earnings.
SQL: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
Look for potential candidates "[('poker player', 0.75), ('poker', 0.75), ('player', 0.75), ('earnings', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001353 seconds.
Processed example 666 out of 1034

Question: What is the money rank of the tallest poker player?
SQL: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1
Look for potential candidates "[('money rank', 0.75), ('money', 0.75), ('rank', 0.75), ('poker player', 0.75), ('poker', 0.75), ('player', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001764 seconds.
Processed example 667 out of 1034

Question: Return the money rank of the poker player with the greatest height.
SQL: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1
Look for potential candidates "[('money rank', 0.75), ('money', 0.75), ('rank', 0.75), ('poker player', 0.75), ('poker', 0.75), ('player', 0.75), ('height', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002007 seconds.
Processed example 668 out of 1034

Question: What is the average earnings of poker players with height higher than 200?
SQL: SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200
Look for potential candidates "[('earnings', 0.75), ('poker players', 0.75), ('poker', 0.75), ('players', 0.75), ('height', 0.75), ('200', 1.0)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001575 seconds.
Processed example 669 out of 1034

Question: Give average earnings of poker players who are taller than 200.
SQL: SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200
Look for potential candidates "[('poker players', 0.75), ('poker', 0.75), ('players', 0.75), ('earnings', 0.75), ('200', 1.0)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001372 seconds.
Processed example 670 out of 1034

Question: What are the names of poker players in descending order of earnings?
SQL: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC
Look for potential candidates "[('names', 0.75), ('poker players', 0.75), ('poker', 0.75), ('players', 0.75), ('earnings', 0.75), ('order', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001865 seconds.
Processed example 671 out of 1034

Question: Return the names of poker players sorted by their earnings descending.
SQL: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC
Look for potential candidates "[('poker players', 0.75), ('poker', 0.75), ('players', 0.75), ('names', 0.75), ('earnings descending', 0.75), ('earnings', 0.75), ('descending', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002133 seconds.
Processed example 672 out of 1034

Question: What are different nationalities of people and the corresponding number of people from each nation?
SQL: SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality
Look for potential candidates "[('nationalities', 0.75), ('people', 0.75), ('number', 0.75), ('nation', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001311 seconds.
Processed example 673 out of 1034

Question: How many people are there of each nationality?
SQL: SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality
Look for potential candidates "[('people', 0.75), ('nationality', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000835 seconds.
Processed example 674 out of 1034

Question: What is the most common nationality of people?
SQL: SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
Look for potential candidates "[('nationality', 0.75), ('people', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000821 seconds.
Processed example 675 out of 1034

Question: Give the nationality that is most common across all people.
SQL: SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
Look for potential candidates "[('nationality', 0.75), ('people', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000824 seconds.
Processed example 676 out of 1034

Question: What are the nationalities that are shared by at least two people?
SQL: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
Look for potential candidates "[('nationalities', 0.75), ('people', 0.75), ('2', 1.0)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000851 seconds.
Processed example 677 out of 1034

Question: Return the nationalities for which there are two or more people.
SQL: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
Look for potential candidates "[('nationalities', 0.75), ('people', 0.75), ('2', 1.0)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000854 seconds.
Processed example 678 out of 1034

Question: List the names and birth dates of people in ascending alphabetical order of name.
SQL: SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC
Look for potential candidates "[('names', 0.75), ('people', 0.75), ('dates', 0.75), ('birth', 0.75), ('name', 0.75), ('order', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001780 seconds.
Processed example 679 out of 1034

Question: What are the names and birth dates of people, ordered by their names in alphabetical order?
SQL: SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC
Look for potential candidates "[('names', 0.75), ('people', 0.75), ('dates', 0.75), ('birth', 0.75), ('alphabetical order', 0.75), ('alphabetical', 0.75), ('order', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002078 seconds.
Processed example 680 out of 1034

Question: Show names of people whose nationality is not "Russia".
SQL: SELECT Name FROM people WHERE Nationality != "Russia"
Look for potential candidates "[('Russia', 0.9), ('people', 0.75), ('Show names', 0.75), ('Show', 0.75), ('names', 0.75), ('nationality', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[('Russia', 'nationality', 'people')]"
Elapsed time is 0.001835 seconds.
Processed example 681 out of 1034

Question: What are the names of people who are not from Russia?
SQL: SELECT Name FROM people WHERE Nationality != "Russia"
Look for potential candidates "[('Russia', 0.75), ('people', 0.75), ('names', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[('Russia', 'nationality', 'people')]"
Elapsed time is 0.001040 seconds.
Processed example 682 out of 1034

Question: List the names of people that are not poker players.
SQL: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
Look for potential candidates "[('names', 0.75), ('people', 0.75), ('poker players', 0.75), ('poker', 0.75), ('players', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001551 seconds.
Processed example 683 out of 1034

Question: What are the names of people who do not play poker?
SQL: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
Look for potential candidates "[('people', 0.75), ('names', 0.75), ('poker', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001037 seconds.
Processed example 684 out of 1034

Question: How many distinct nationalities are there?
SQL: SELECT count(DISTINCT Nationality) FROM people
Look for potential candidates "[('nationalities', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000581 seconds.
Processed example 685 out of 1034

Question: Count the number of different nationalities.
SQL: SELECT count(DISTINCT Nationality) FROM people
Look for potential candidates "[('number', 0.75), ('nationalities', 0.75)]" in database poker_player (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000829 seconds.
Processed example 686 out of 1034

Question: How many states are there?
SQL: SELECT count(*) FROM area_code_state
Look for potential candidates "[('states', 0.75)]" in database voter_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.012223 seconds.
Processed example 687 out of 1034

Question: List the contestant numbers and names, ordered by contestant name descending.
SQL: SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC
Look for potential candidates "[('contestant numbers', 0.75), ('contestant', 0.75), ('numbers', 0.75), ('names', 0.75), ('contestant name descending', 0.75), ('name', 0.75), ('descending', 0.75), ('contestant name', 0.75), ('name descending', 0.75)]" in database voter_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.019151 seconds.
Processed example 688 out of 1034

Question: List the vote ids, phone numbers and states of all votes.
SQL: SELECT vote_id ,  phone_number ,  state FROM votes
Look for potential candidates "[('vote ids', 0.75), ('vote', 0.75), ('ids', 0.75), ('phone numbers', 0.75), ('phone', 0.75), ('numbers', 0.75), ('states', 0.75), ('votes', 0.75)]" in database voter_1 (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.023956 seconds.
Processed example 689 out of 1034

Question: What are the maximum and minimum values of area codes?
SQL: SELECT max(area_code) ,  min(area_code) FROM area_code_state
Look for potential candidates "[('values', 0.75), ('area codes', 0.75), ('area', 0.75), ('codes', 0.75)]" in database voter_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.006652 seconds.
Processed example 690 out of 1034

Question: What is last date created of votes from the state 'CA'?
SQL: SELECT max(created) FROM votes WHERE state  =  'CA'
Look for potential candidates "[('CA', 1.0), ('California', 0.9), ('votes', 0.75), ('state', 0.75)]" in database voter_1 (include primary keys: False)
Confirmed the following candidates "[('CA', 'state', 'area code state')]"
Elapsed time is 0.005359 seconds.
Processed example 691 out of 1034

Question: What are the names of the contestants whose names are not 'Jessie Alloway'
SQL: SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'
Look for potential candidates "[('Jessie Alloway', 0.9), ('contestants', 0.75), ('names', 0.75), ('Jessie', 0.75), ('Alloway', 0.75)]" in database voter_1 (include primary keys: False)
Confirmed the following candidates "[('Jessie Alloway', 'contestant name', 'contestants')]"
Elapsed time is 0.008335 seconds.
Processed example 692 out of 1034

Question: What are the distinct states and create time of all votes?
SQL: SELECT DISTINCT state ,  created FROM votes
Look for potential candidates "[('states', 0.75), ('votes', 0.75)]" in database voter_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003589 seconds.
Processed example 693 out of 1034

Question: What are the contestant numbers and names of the contestants who had at least two votes?
SQL: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2
Look for potential candidates "[('contestants', 0.75), ('contestant numbers', 0.75), ('contestant', 0.75), ('numbers', 0.75), ('names', 0.75), ('votes', 0.75), ('2', 1.0)]" in database voter_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.010153 seconds.
Processed example 694 out of 1034

Question: Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?
SQL: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1
Look for potential candidates "[('contestants', 0.75), ('contestant', 0.75), ('contestant number', 0.75), ('number', 0.75), ('name', 0.75), ('votes', 0.75)]" in database voter_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.010165 seconds.
Processed example 695 out of 1034

Question: What are the number of votes from state 'NY' or 'CA'?
SQL: SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'
Look for potential candidates "[('NY', 1.0), ('CA', 1.0), ('California', 0.9), ('New York', 0.9), ('number', 0.75), ('state', 0.75), ('votes', 0.75)]" in database voter_1 (include primary keys: False)
Confirmed the following candidates "[('CA', 'state', 'area code state'), ('NY', 'state', 'area code state')]"
Elapsed time is 0.009318 seconds.
Processed example 696 out of 1034

Question: How many contestants did not get voted?
SQL: SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )
Look for potential candidates "[('contestants', 0.75)]" in database voter_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002128 seconds.
Processed example 697 out of 1034

Question: What is the area code in which the most voters voted?
SQL: SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('area code', 0.75), ('area', 0.75), ('code', 0.75), ('voters', 0.75)]" in database voter_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.006662 seconds.
Processed example 698 out of 1034

Question: What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?
SQL: SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'
Look for potential candidates "[('Tabatha Gehling', 0.9), ('states', 0.75), ('dates', 0.75), ('votes', 0.75), ('phone numbers', 0.75), ('phone', 0.75), ('numbers', 0.75), ('Tabatha', 0.75), ('Gehling', 0.75), ('contestant', 0.75)]" in database voter_1 (include primary keys: False)
Confirmed the following candidates "[('Tabatha Gehling', 'contestant name', 'contestants')]"
Elapsed time is 0.021173 seconds.
Processed example 699 out of 1034

Question: List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.
SQL: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'
Look for potential candidates "[('Tabatha Gehling', 0.9), ('Kelly Clauss', 0.9), ('area codes', 0.75), ('area', 0.75), ('codes', 0.75), ('contestant', 0.75), ('voters', 0.75), ('Tabatha', 0.75), ('Gehling', 0.75), ('Kelly', 0.75), ('Clauss', 0.75)]" in database voter_1 (include primary keys: False)
Confirmed the following candidates "[('Kelly Clauss', 'contestant name', 'contestants'), ('Tabatha Gehling', 'contestant name', 'contestants')]"
Elapsed time is 0.021391 seconds.
Processed example 700 out of 1034

Question: Return the names of the contestants whose names contain the substring 'Al' .
SQL: select contestant_name from contestants where contestant_name like "%al%"
Look for potential candidates "[('Al', 0.9), ('contestants', 0.75), ('names', 0.75), ('substring', 0.75)]" in database voter_1 (include primary keys: False)
Confirmed the following candidates "[('AL', 'state', 'area code state')]"
Elapsed time is 0.009360 seconds.
Processed example 701 out of 1034

Question: What are the names of all the countries that became independent after 1950?
SQL: SELECT Name FROM country WHERE IndepYear  >  1950
Look for potential candidates "[('countries', 0.75), ('names', 0.75), ('1950', 1.0)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Nîmes', 'name', 'city')]"
Elapsed time is 0.215741 seconds.
Processed example 702 out of 1034

Question: Give the names of the nations that were founded after 1950.
SQL: SELECT Name FROM country WHERE IndepYear  >  1950
Look for potential candidates "[('nations', 0.75), ('names', 0.75), ('1950', 1.0)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Nîmes', 'name', 'city')]"
Elapsed time is 0.205941 seconds.
Processed example 703 out of 1034

Question: How many countries have a republic as their form of government?
SQL: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"
Look for potential candidates "[('republic', 0.75), ('countries', 0.75), ('government', 0.75), ('form', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Republic', 'government form', 'country')]"
Elapsed time is 0.396817 seconds.
Processed example 704 out of 1034

Question: How many countries have governments that are republics?
SQL: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"
Look for potential candidates "[('governments', 0.75), ('countries', 0.75), ('republics', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Republic', 'government form', 'country')]"
Elapsed time is 0.315231 seconds.
Processed example 705 out of 1034

Question: What is the total surface area of the countries in the Caribbean region?
SQL: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"
Look for potential candidates "[('Caribbean', 0.75), ('surface area', 0.75), ('surface', 0.75), ('area', 0.75), ('countries', 0.75), ('region', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Caribbean', 'region', 'country'), ('Caribbean', 'language', 'countrylanguage')]"
Elapsed time is 0.599033 seconds.
Processed example 706 out of 1034

Question: How much surface area do the countires in the Carribean cover together?
SQL: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"
Look for potential candidates "[('Carribean', 0.75), ('surface area', 0.75), ('surface', 0.75), ('area', 0.75), ('countires', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Caribbean', 'language', 'countrylanguage'), ('Caribbean', 'region', 'country')]"
Elapsed time is 0.502633 seconds.
Processed example 707 out of 1034

Question: Which continent is Anguilla in?
SQL: SELECT Continent FROM country WHERE Name  =  "Anguilla"
Look for potential candidates "[('Anguilla', 0.75), ('continent', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Anguilla', 'local name', 'country'), ('Anguilla', 'name', 'country')]"
Elapsed time is 0.208168 seconds.
Processed example 708 out of 1034

Question: What is the continent name which Anguilla belongs to?
SQL: SELECT Continent FROM country WHERE Name  =  "Anguilla"
Look for potential candidates "[('Anguilla', 0.75), ('continent name', 0.75), ('continent', 0.75), ('name', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Anguilla', 'local name', 'country'), ('Anguilla', 'name', 'country'), ('Nama', 'language', 'countrylanguage')]"
Elapsed time is 0.415372 seconds.
Processed example 709 out of 1034

Question: Which region is the city Kabul located in?
SQL: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"
Look for potential candidates "[('Kabul', 0.75), ('region', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Kabul', 'name', 'city'), ('Kabol', 'district', 'city')]"
Elapsed time is 0.199379 seconds.
Processed example 710 out of 1034

Question: What region is Kabul in?
SQL: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"
Look for potential candidates "[('Kabul', 0.75), ('region', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Kabul', 'name', 'city'), ('Kabol', 'district', 'city')]"
Elapsed time is 0.200048 seconds.
Processed example 711 out of 1034

Question: Which language is the most popular in Aruba?
SQL: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1
Look for potential candidates "[('Aruba', 0.75), ('language', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Aruba', 'local name', 'country'), ('Aruba', 'name', 'country')]"
Elapsed time is 0.202957 seconds.
Processed example 712 out of 1034

Question: What language is predominantly spoken in Aruba?
SQL: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1
Look for potential candidates "[('Aruba', 0.75), ('language', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Aruba', 'local name', 'country'), ('Aruba', 'name', 'country')]"
Elapsed time is 0.199177 seconds.
Processed example 713 out of 1034

Question: What are the population and life expectancies in Brazil?
SQL: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"
Look for potential candidates "[('Brazil', 0.75), ('population', 0.75), ('life expectancies', 0.75), ('life', 0.75), ('expectancies', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Brazil', 'name', 'country'), ('Brasil', 'local name', 'country'), ('Ife', 'name', 'city')]"
Elapsed time is 0.495903 seconds.
Processed example 714 out of 1034

Question: Give me Brazil’s population and life expectancies.
SQL: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"
Look for potential candidates "[('Brazil', 0.75), ('population', 0.75), ('life expectancies', 0.75), ('life', 0.75), ('expectancies', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Brazil', 'name', 'country'), ('Brasil', 'local name', 'country'), ('Ife', 'name', 'city')]"
Elapsed time is 0.510143 seconds.
Processed example 715 out of 1034

Question: What are the region and population of Angola?
SQL: SELECT Population ,  Region FROM country WHERE Name  =  "Angola"
Look for potential candidates "[('Angola', 0.75), ('region', 0.75), ('population', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Angola', 'name', 'country'), ('Angola', 'local name', 'country')]"
Elapsed time is 0.295413 seconds.
Processed example 716 out of 1034

Question: What region does Angola belong to and what is its population?
SQL: SELECT Population ,  Region FROM country WHERE Name  =  "Angola"
Look for potential candidates "[('Angola', 0.75), ('region', 0.75), ('population', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Angola', 'name', 'country'), ('Angola', 'local name', 'country')]"
Elapsed time is 0.293567 seconds.
Processed example 717 out of 1034

Question: What is the average expected life expectancy for countries in the region of Central Africa?
SQL: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
Look for potential candidates "[('Central Africa', 0.75), ('average', 0.75), ('life expectancy', 0.75), ('life', 0.75), ('expectancy', 0.75), ('countries', 0.75), ('Central', 0.75), ('Africa', 0.75), ('region', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Africa', 'continent', 'country'), ('Central', 'district', 'city'), ('Central Africa', 'region', 'country'), ('Central America', 'region', 'country'), ('Arica', 'name', 'city'), ('Ife', 'name', 'city')]"
Elapsed time is 0.860832 seconds.
Processed example 718 out of 1034

Question: How long is the people’s average life expectancy in Central Africa?
SQL: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
Look for potential candidates "[('Central Africa', 0.75), ('life expectancy', 0.75), ('life', 0.75), ('expectancy', 0.75), ('people', 0.75), ('Central', 0.75), ('Africa', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Africa', 'continent', 'country'), ('Central', 'district', 'city'), ('Central Africa', 'region', 'country'), ('Central America', 'region', 'country'), ('Arica', 'name', 'city'), ('Ife', 'name', 'city')]"
Elapsed time is 0.681659 seconds.
Processed example 719 out of 1034

Question: What is the name of country that has the shortest life expectancy in Asia?
SQL: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1
Look for potential candidates "[('Asia', 0.75), ('name', 0.75), ('country', 0.75), ('life expectancy', 0.75), ('life', 0.75), ('expectancy', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Asia', 'continent', 'country'), ('Coventry', 'name', 'city'), ('Nama', 'language', 'countrylanguage'), ('Ife', 'name', 'city'), ('Apia', 'name', 'city'), ('Asir', 'district', 'city')]"
Elapsed time is 0.576840 seconds.
Processed example 720 out of 1034

Question: Give the name of the country in Asia with the lowest life expectancy.
SQL: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1
Look for potential candidates "[('Asia', 0.75), ('name', 0.75), ('country', 0.75), ('life expectancy', 0.75), ('life', 0.75), ('expectancy', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Asia', 'continent', 'country'), ('Coventry', 'name', 'city'), ('Nama', 'language', 'countrylanguage'), ('Ife', 'name', 'city'), ('Apia', 'name', 'city'), ('Asir', 'district', 'city')]"
Elapsed time is 0.596436 seconds.
Processed example 721 out of 1034

Question: What is the total population and maximum GNP in Asia?
SQL: SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"
Look for potential candidates "[('GNP', 1.0), ('Asia', 0.75), ('population', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Asia', 'continent', 'country'), ('Apia', 'name', 'city'), ('Asir', 'district', 'city')]"
Elapsed time is 0.201172 seconds.
Processed example 722 out of 1034

Question: How many people live in Asia, and what is the largest GNP among them?
SQL: SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"
Look for potential candidates "[('GNP', 1.0), ('Asia', 0.75), ('people', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Asia', 'continent', 'country'), ('Apia', 'name', 'city'), ('Asir', 'district', 'city')]"
Elapsed time is 0.208093 seconds.
Processed example 723 out of 1034

Question: What is the average life expectancy in African countries that are republics?
SQL: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
Look for potential candidates "[('African', 0.75), ('countries', 0.75), ('life expectancy', 0.75), ('life', 0.75), ('expectancy', 0.75), ('republics', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Republic', 'government form', 'country'), ('Africa', 'continent', 'country'), ('Ife', 'name', 'city')]"
Elapsed time is 0.594092 seconds.
Processed example 724 out of 1034

Question: Give the average life expectancy for countries in Africa which are republics?
SQL: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
Look for potential candidates "[('Africa', 0.75), ('countries', 0.75), ('republics', 0.75), ('life expectancy', 0.75), ('life', 0.75), ('expectancy', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Africa', 'continent', 'country'), ('Republic', 'government form', 'country'), ('Arica', 'name', 'city'), ('Ife', 'name', 'city')]"
Elapsed time is 0.600427 seconds.
Processed example 725 out of 1034

Question: What is the total surface area of the continents Asia and Europe?
SQL: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"
Look for potential candidates "[('Asia', 0.75), ('Europe', 0.75), ('surface area', 0.75), ('surface', 0.75), ('area', 0.75), ('continents', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Europe', 'continent', 'country'), ('Asia', 'continent', 'country'), ('Apia', 'name', 'city'), ('Asir', 'district', 'city')]"
Elapsed time is 0.568245 seconds.
Processed example 726 out of 1034

Question: Give the total surface area covered by countries in Asia or Europe.
SQL: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"
Look for potential candidates "[('Asia', 0.75), ('Europe', 0.75), ('countries', 0.75), ('surface area', 0.75), ('surface', 0.75), ('area', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Europe', 'continent', 'country'), ('Asia', 'continent', 'country'), ('Apia', 'name', 'city'), ('Asir', 'district', 'city')]"
Elapsed time is 0.569970 seconds.
Processed example 727 out of 1034

Question: How many people live in Gelderland district?
SQL: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"
Look for potential candidates "[('Gelderland', 0.75), ('people', 0.75), ('district', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Gelderland', 'district', 'city'), ('Nederland', 'local name', 'country')]"
Elapsed time is 0.294587 seconds.
Processed example 728 out of 1034

Question: What is the total population of Gelderland district?
SQL: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"
Look for potential candidates "[('Gelderland', 0.75), ('population', 0.75), ('district', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Gelderland', 'district', 'city'), ('Nederland', 'local name', 'country')]"
Elapsed time is 0.301718 seconds.
Processed example 729 out of 1034

Question: What is the average GNP and total population in all nations whose government is US territory?
SQL: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"
Look for potential candidates "[('GNP', 1.0), ('US', 1.0), ('USA', 0.9), ('United States', 0.9), ('United States of America', 0.9), ('population', 0.75), ('nations', 0.75), ('territory', 0.75), ('government', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('US', 'code2', 'country'), ('United States', 'local name', 'country'), ('United States', 'name', 'country'), ('US Territory', 'government form', 'country')]"
Elapsed time is 0.725164 seconds.
Processed example 730 out of 1034

Question: Give the mean GNP and total population of nations which are considered US territory.
SQL: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"
Look for potential candidates "[('GNP', 1.0), ('US', 1.0), ('USA', 0.9), ('United States', 0.9), ('United States of America', 0.9), ('nations', 0.75), ('population', 0.75), ('territory', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('US', 'code2', 'country'), ('United States', 'local name', 'country'), ('United States', 'name', 'country'), ('US Territory', 'government form', 'country')]"
Elapsed time is 0.609467 seconds.
Processed example 731 out of 1034

Question: How many unique languages are spoken in the world?
SQL: SELECT count(DISTINCT LANGUAGE) FROM countrylanguage
Look for potential candidates "[('languages', 0.75), ('world', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.195368 seconds.
Processed example 732 out of 1034

Question: What is the number of distinct languages used around the world?
SQL: SELECT count(DISTINCT LANGUAGE) FROM countrylanguage
Look for potential candidates "[('number', 0.75), ('languages', 0.75), ('world', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.289215 seconds.
Processed example 733 out of 1034

Question: How many type of governments are in Africa?
SQL: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"
Look for potential candidates "[('Africa', 0.75), ('type', 0.75), ('governments', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Africa', 'continent', 'country'), ('Arica', 'name', 'city')]"
Elapsed time is 0.287423 seconds.
Processed example 734 out of 1034

Question: How many different forms of governments are there in Africa?
SQL: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"
Look for potential candidates "[('Africa', 0.75), ('forms', 0.75), ('governments', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Africa', 'continent', 'country'), ('Arica', 'name', 'city')]"
Elapsed time is 0.288649 seconds.
Processed example 735 out of 1034

Question: What is the total number of languages used in Aruba?
SQL: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"
Look for potential candidates "[('Aruba', 0.75), ('number', 0.75), ('languages', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Aruba', 'local name', 'country'), ('Aruba', 'name', 'country')]"
Elapsed time is 0.287172 seconds.
Processed example 736 out of 1034

Question: How many languages are spoken in Aruba?
SQL: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"
Look for potential candidates "[('Aruba', 0.75), ('languages', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Aruba', 'local name', 'country'), ('Aruba', 'name', 'country')]"
Elapsed time is 0.194354 seconds.
Processed example 737 out of 1034

Question: How many official languages does Afghanistan have?
SQL: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"
Look for potential candidates "[('Afghanistan', 0.75), ('languages', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Afghanistan', 'name', 'country')]"
Elapsed time is 0.200645 seconds.
Processed example 738 out of 1034

Question: How many official languages are spoken in Afghanistan?
SQL: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"
Look for potential candidates "[('Afghanistan', 0.75), ('languages', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Afghanistan', 'name', 'country')]"
Elapsed time is 0.199477 seconds.
Processed example 739 out of 1034

Question: What is name of the country that speaks the largest number of languages?
SQL: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
Look for potential candidates "[('country', 0.75), ('name', 0.75), ('languages', 0.75), ('number', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Coventry', 'name', 'city'), ('Nama', 'language', 'countrylanguage')]"
Elapsed time is 0.374690 seconds.
Processed example 740 out of 1034

Question: Give the name of the nation that uses the greatest amount of languages.
SQL: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
Look for potential candidates "[('nation', 0.75), ('name', 0.75), ('languages', 0.75), ('amount', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Nama', 'language', 'countrylanguage')]"
Elapsed time is 0.374179 seconds.
Processed example 741 out of 1034

Question: Which continent has the most diverse languages?
SQL: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1
Look for potential candidates "[('continent', 0.75), ('languages', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.195287 seconds.
Processed example 742 out of 1034

Question: Which continent speaks the most languages?
SQL: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1
Look for potential candidates "[('continent', 0.75), ('languages', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.193715 seconds.
Processed example 743 out of 1034

Question: How many countries speak both English and Dutch?
SQL: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")
Look for potential candidates "[('English', 0.75), ('Dutch', 0.75), ('countries', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('English', 'language', 'countrylanguage'), ('Dutch', 'language', 'countrylanguage')]"
Elapsed time is 0.288492 seconds.
Processed example 744 out of 1034

Question: What is the number of nations that use English and Dutch?
SQL: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")
Look for potential candidates "[('English', 0.75), ('Dutch', 0.75), ('nations', 0.75), ('number', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('English', 'language', 'countrylanguage'), ('Dutch', 'language', 'countrylanguage')]"
Elapsed time is 0.374698 seconds.
Processed example 745 out of 1034

Question: What are the names of nations speak both English and French?
SQL: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
Look for potential candidates "[('English', 0.75), ('French', 0.75), ('names', 0.75), ('nations', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('English', 'language', 'countrylanguage'), ('French', 'language', 'countrylanguage'), ('Nîmes', 'name', 'city')]"
Elapsed time is 0.374711 seconds.
Processed example 746 out of 1034

Question: Give the names of nations that speak both English and French.
SQL: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
Look for potential candidates "[('English', 0.75), ('French', 0.75), ('nations', 0.75), ('names', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('English', 'language', 'countrylanguage'), ('French', 'language', 'countrylanguage'), ('Nîmes', 'name', 'city')]"
Elapsed time is 0.374230 seconds.
Processed example 747 out of 1034

Question: What are the names of nations where both English and French are official languages?
SQL: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"
Look for potential candidates "[('English', 0.75), ('French', 0.75), ('nations', 0.75), ('names', 0.75), ('languages', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('English', 'language', 'countrylanguage'), ('French', 'language', 'countrylanguage'), ('Nîmes', 'name', 'city')]"
Elapsed time is 0.478351 seconds.
Processed example 748 out of 1034

Question: Give the names of countries with English and French as official languages.
SQL: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"
Look for potential candidates "[('English', 0.75), ('French', 0.75), ('names', 0.75), ('countries', 0.75), ('languages', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('English', 'language', 'countrylanguage'), ('French', 'language', 'countrylanguage'), ('Nîmes', 'name', 'city')]"
Elapsed time is 0.470890 seconds.
Processed example 749 out of 1034

Question: What is the number of distinct continents where Chinese is spoken?
SQL: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"
Look for potential candidates "[('Chinese', 0.75), ('continents', 0.75), ('number', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Chinese', 'language', 'countrylanguage')]"
Elapsed time is 0.287515 seconds.
Processed example 750 out of 1034

Question: How many continents speak Chinese?
SQL: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"
Look for potential candidates "[('Chinese', 0.75), ('continents', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Chinese', 'language', 'countrylanguage')]"
Elapsed time is 0.195527 seconds.
Processed example 751 out of 1034

Question: What are the regions that use English or Dutch?
SQL: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"
Look for potential candidates "[('English', 0.75), ('Dutch', 0.75), ('regions', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('English', 'language', 'countrylanguage'), ('Dutch', 'language', 'countrylanguage')]"
Elapsed time is 0.283920 seconds.
Processed example 752 out of 1034

Question: Which regions speak Dutch or English?
SQL: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"
Look for potential candidates "[('Dutch', 0.75), ('English', 0.75), ('regions', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('English', 'language', 'countrylanguage'), ('Dutch', 'language', 'countrylanguage')]"
Elapsed time is 0.284482 seconds.
Processed example 753 out of 1034

Question: What are the countries where either English or Dutch is the official language ?
SQL: select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "english" and isofficial  =  "t" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "dutch" and isofficial  =  "t"
Look for potential candidates "[('English', 0.75), ('Dutch', 0.75), ('countries', 0.75), ('language', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('English', 'language', 'countrylanguage'), ('Dutch', 'language', 'countrylanguage')]"
Elapsed time is 0.382331 seconds.
Processed example 754 out of 1034

Question: Which countries have either English or Dutch as an official language?
SQL: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"
Look for potential candidates "[('English', 0.75), ('Dutch', 0.75), ('countries', 0.75), ('language', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('English', 'language', 'countrylanguage'), ('Dutch', 'language', 'countrylanguage')]"
Elapsed time is 0.386724 seconds.
Processed example 755 out of 1034

Question: Which language is the most popular on the Asian continent?
SQL: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1
Look for potential candidates "[('Asian', 0.75), ('language', 0.75), ('popular', 0.75), ('continent', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Asia', 'continent', 'country'), ('Asan', 'name', 'city')]"
Elapsed time is 0.384755 seconds.
Processed example 756 out of 1034

Question: What is the language that is used by the largest number of Asian nations?
SQL: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1
Look for potential candidates "[('Asian', 0.75), ('language', 0.75), ('nations', 0.75), ('number', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Asia', 'continent', 'country'), ('Asan', 'name', 'city')]"
Elapsed time is 0.382445 seconds.
Processed example 757 out of 1034

Question: Which languages are spoken by only one country in republic governments?
SQL: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1
Look for potential candidates "[('languages', 0.75), ('country', 0.75), ('republic governments', 0.75), ('republic', 0.75), ('governments', 0.75), ('1', 1.0)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('1', 'capital', 'country'), ('Republic', 'government form', 'country'), ('Coventry', 'name', 'city')]"
Elapsed time is 0.495062 seconds.
Processed example 758 out of 1034

Question: What languages are only used by a single country with a republic government?
SQL: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1
Look for potential candidates "[('languages', 0.75), ('country', 0.75), ('republic government', 0.75), ('republic', 0.75), ('government', 0.75), ('1', 1.0)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('1', 'capital', 'country'), ('Republic', 'government form', 'country'), ('Coventry', 'name', 'city')]"
Elapsed time is 0.496644 seconds.
Processed example 759 out of 1034

Question: Find the city with the largest population that uses English.
SQL: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1
Look for potential candidates "[('English', 0.75), ('city', 0.75), ('population', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('city', 'name', 'sqlite sequence'), ('English', 'language', 'countrylanguage')]"
Elapsed time is 0.287922 seconds.
Processed example 760 out of 1034

Question: What is the most populace city that speaks English?
SQL: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1
Look for potential candidates "[('English', 0.75), ('populace city', 0.75), ('populace', 0.75), ('city', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('city', 'name', 'sqlite sequence'), ('English', 'language', 'countrylanguage')]"
Elapsed time is 0.385035 seconds.
Processed example 761 out of 1034

Question: Find the name, population and expected life length of asian country with the largest area?
SQL: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1
Look for potential candidates "[('name', 0.75), ('population', 0.75), ('life length', 0.75), ('life', 0.75), ('length', 0.75), ('asian', 0.75), ('area', 0.75), ('country', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Asan', 'name', 'city'), ('Asia', 'continent', 'country'), ('Coventry', 'name', 'city'), ('Nama', 'language', 'countrylanguage'), ('Ife', 'name', 'city')]"
Elapsed time is 0.750627 seconds.
Processed example 762 out of 1034

Question: What are the name, population, and life expectancy of the largest Asian country by land?
SQL: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1
Look for potential candidates "[('Asian', 0.75), ('name', 0.75), ('life expectancy', 0.75), ('life', 0.75), ('expectancy', 0.75), ('population', 0.75), ('country', 0.75), ('land', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Asan', 'name', 'city'), ('Asia', 'continent', 'country'), ('Lund', 'name', 'city'), ('Coventry', 'name', 'city'), ('Nama', 'language', 'countrylanguage'), ('Ife', 'name', 'city')]"
Elapsed time is 0.766727 seconds.
Processed example 763 out of 1034

Question: What is average life expectancy in the countries where English is not the official language?
SQL: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")
Look for potential candidates "[('English', 0.75), ('countries', 0.75), ('life expectancy', 0.75), ('life', 0.75), ('expectancy', 0.75), ('language', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('English', 'language', 'countrylanguage'), ('Ife', 'name', 'city')]"
Elapsed time is 0.579452 seconds.
Processed example 764 out of 1034

Question: Give the mean life expectancy of countries in which English is not the official language.
SQL: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")
Look for potential candidates "[('English', 0.75), ('countries', 0.75), ('life expectancy', 0.75), ('life', 0.75), ('expectancy', 0.75), ('language', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('English', 'language', 'countrylanguage'), ('Ife', 'name', 'city')]"
Elapsed time is 0.583972 seconds.
Processed example 765 out of 1034

Question: What is the total number of people living in the nations that do not use English?
SQL: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")
Look for potential candidates "[('English', 0.75), ('number', 0.75), ('nations', 0.75), ('people', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('English', 'language', 'countrylanguage')]"
Elapsed time is 0.400774 seconds.
Processed example 766 out of 1034

Question: How many people live in countries that do not speak English?
SQL: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")
Look for potential candidates "[('English', 0.75), ('countries', 0.75), ('people', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('English', 'language', 'countrylanguage')]"
Elapsed time is 0.288113 seconds.
Processed example 767 out of 1034

Question: What is the official language spoken in the country whose head of state is Beatrix?
SQL: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"
Look for potential candidates "[('Beatrix', 0.75), ('language', 0.75), ('head of state', 0.75), ('head', 0.75), ('of', 0.75), ('state', 0.75), ('head of', 0.75), ('of state', 0.75), ('country', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Beatrix', 'head of state', 'country'), ('Coventry', 'name', 'city')]"
Elapsed time is 0.867191 seconds.
Processed example 768 out of 1034

Question: What is the official language used in the country the name of whose head of state is Beatrix.
SQL: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"
Look for potential candidates "[('Beatrix', 0.75), ('language', 0.75), ('country', 0.75), ('name', 0.75), ('head of state', 0.75), ('head', 0.75), ('of', 0.75), ('state', 0.75), ('head of', 0.75), ('of state', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Beatrix', 'head of state', 'country'), ('Coventry', 'name', 'city'), ('Nama', 'language', 'countrylanguage')]"
Elapsed time is 0.923350 seconds.
Processed example 769 out of 1034

Question: What is the total number of unique official languages spoken in the countries that are founded before 1930?
SQL: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"
Look for potential candidates "[('number', 0.75), ('languages', 0.75), ('countries', 0.75), ('1930', 1.0)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.294113 seconds.
Processed example 770 out of 1034

Question: For the countries founded before 1930, what is the total number of distinct official languages?
SQL: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"
Look for potential candidates "[('countries', 0.75), ('languages', 0.75), ('number', 0.75), ('1930', 1.0)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.297701 seconds.
Processed example 771 out of 1034

Question: What are the countries that have greater surface area than any country in Europe?
SQL: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")
Look for potential candidates "[('Europe', 0.75), ('countries', 0.75), ('surface area', 0.75), ('surface', 0.75), ('area', 0.75), ('country', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Europe', 'continent', 'country'), ('Coventry', 'name', 'city')]"
Elapsed time is 0.577282 seconds.
Processed example 772 out of 1034

Question: Which countries have greater area than that of any country in Europe?
SQL: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")
Look for potential candidates "[('Europe', 0.75), ('countries', 0.75), ('area', 0.75), ('country', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Europe', 'continent', 'country'), ('Coventry', 'name', 'city')]"
Elapsed time is 0.376172 seconds.
Processed example 773 out of 1034

Question: What are the African countries that have a  population less than any country in Asia?
SQL: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia")
Look for potential candidates "[('African', 0.75), ('Asia', 0.75), ('countries', 0.75), ('population', 0.75), ('country', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Asia', 'continent', 'country'), ('Africa', 'continent', 'country'), ('Coventry', 'name', 'city'), ('Apia', 'name', 'city'), ('Asir', 'district', 'city')]"
Elapsed time is 0.471844 seconds.
Processed example 774 out of 1034

Question: Which African countries have a smaller population than that of any country in Asia?
SQL: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  "Asia")
Look for potential candidates "[('Which African', 0.75), ('Asia', 0.75), ('African', 0.75), ('countries', 0.75), ('population', 0.75), ('country', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Asia', 'continent', 'country'), ('Africa', 'continent', 'country'), ('Coventry', 'name', 'city'), ('Apia', 'name', 'city'), ('Asir', 'district', 'city')]"
Elapsed time is 0.564996 seconds.
Processed example 775 out of 1034

Question: Which Asian countries have a population that is larger than any country in Africa?
SQL: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  "Africa")
Look for potential candidates "[('Which Asian', 0.75), ('Africa', 0.75), ('Asian', 0.75), ('countries', 0.75), ('population', 0.75), ('country', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Africa', 'continent', 'country'), ('Arica', 'name', 'city'), ('Asan', 'name', 'city'), ('Asia', 'continent', 'country'), ('Coventry', 'name', 'city')]"
Elapsed time is 0.574114 seconds.
Processed example 776 out of 1034

Question: What are the Asian countries which have a population larger than that of any country in Africa?
SQL: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa")
Look for potential candidates "[('Asian', 0.75), ('Africa', 0.75), ('countries', 0.75), ('population', 0.75), ('country', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Africa', 'continent', 'country'), ('Arica', 'name', 'city'), ('Asan', 'name', 'city'), ('Asia', 'continent', 'country'), ('Coventry', 'name', 'city')]"
Elapsed time is 0.468313 seconds.
Processed example 777 out of 1034

Question: What are the country codes for countries that do not speak English?
SQL: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
Look for potential candidates "[('English', 0.75), ('countries', 0.75), ('country codes', 0.75), ('country', 0.75), ('codes', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('English', 'language', 'countrylanguage'), ('Coventry', 'name', 'city')]"
Elapsed time is 0.482802 seconds.
Processed example 778 out of 1034

Question: Return the country codes for countries that do not speak English.
SQL: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
Look for potential candidates "[('English', 0.75), ('countries', 0.75), ('country codes', 0.75), ('country', 0.75), ('codes', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('English', 'language', 'countrylanguage'), ('Coventry', 'name', 'city')]"
Elapsed time is 0.470536 seconds.
Processed example 779 out of 1034

Question: What are the country codes of countries where people use languages other than English?
SQL: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"
Look for potential candidates "[('English', 0.75), ('countries', 0.75), ('country codes', 0.75), ('country', 0.75), ('codes', 0.75), ('people', 0.75), ('languages', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('English', 'language', 'countrylanguage'), ('Coventry', 'name', 'city')]"
Elapsed time is 0.656672 seconds.
Processed example 780 out of 1034

Question: Give the country codes for countries in which people speak langauges that are not English.
SQL: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"
Look for potential candidates "[('English', 0.75), ('countries', 0.75), ('langauges', 0.75), ('country codes', 0.75), ('country', 0.75), ('codes', 0.75), ('people', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('English', 'language', 'countrylanguage'), ('Coventry', 'name', 'city')]"
Elapsed time is 0.662734 seconds.
Processed example 781 out of 1034

Question: What are the codes of the countries that do not speak English and whose government forms are not Republic?
SQL: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
Look for potential candidates "[('English', 0.75), ('Republic', 0.75), ('countries', 0.75), ('codes', 0.75), ('government forms', 0.75), ('government', 0.75), ('forms', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Republic', 'government form', 'country'), ('English', 'language', 'countrylanguage')]"
Elapsed time is 0.664304 seconds.
Processed example 782 out of 1034

Question: Return the codes of countries that do not speak English and do not have Republics for governments.
SQL: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
Look for potential candidates "[('English', 0.75), ('Republics', 0.75), ('countries', 0.75), ('codes', 0.75), ('governments', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('English', 'language', 'countrylanguage'), ('Republic', 'government form', 'country')]"
Elapsed time is 0.498855 seconds.
Processed example 783 out of 1034

Question: Which cities are in European countries where English is not the official language?
SQL: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')
Look for potential candidates "[('European', 0.75), ('English', 0.75), ('cities', 0.75), ('countries', 0.75), ('language', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('English', 'language', 'countrylanguage'), ('Europe', 'continent', 'country')]"
Elapsed time is 0.484590 seconds.
Processed example 784 out of 1034

Question: What are the names of cities in Europe for which English is not the official language?
SQL: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')
Look for potential candidates "[('Europe', 0.75), ('English', 0.75), ('cities', 0.75), ('names', 0.75), ('language', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('English', 'language', 'countrylanguage'), ('Europe', 'continent', 'country'), ('Nîmes', 'name', 'city')]"
Elapsed time is 0.472965 seconds.
Processed example 785 out of 1034

Question: Which unique cities are in Asian countries where Chinese is the official language ?
SQL: select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  "asia"
Look for potential candidates "[('Asian', 0.75), ('Chinese', 0.75), ('countries', 0.75), ('cities', 0.75), ('language', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Chinese', 'language', 'countrylanguage'), ('Asia', 'continent', 'country'), ('Asan', 'name', 'city')]"
Elapsed time is 0.465657 seconds.
Processed example 786 out of 1034

Question: Return the different names of cities that are in Asia and for which Chinese is the official language.
SQL: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"
Look for potential candidates "[('Asia', 0.75), ('Chinese', 0.75), ('cities', 0.75), ('names', 0.75), ('language', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Asia', 'continent', 'country'), ('Chinese', 'language', 'countrylanguage'), ('Nîmes', 'name', 'city'), ('Apia', 'name', 'city'), ('Asir', 'district', 'city')]"
Elapsed time is 0.463193 seconds.
Processed example 787 out of 1034

Question: What are the name, independence year, and surface area of the country with the smallest population?
SQL: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1
Look for potential candidates "[('name', 0.75), ('independence', 0.75), ('surface area', 0.75), ('surface', 0.75), ('area', 0.75), ('population', 0.75), ('country', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Independence', 'name', 'city'), ('Coventry', 'name', 'city'), ('Nama', 'language', 'countrylanguage')]"
Elapsed time is 0.659010 seconds.
Processed example 788 out of 1034

Question: Give the name, year of independence, and surface area of the country that has the lowest population.
SQL: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1
Look for potential candidates "[('name', 0.75), ('surface area', 0.75), ('surface', 0.75), ('area', 0.75), ('independence', 0.75), ('country', 0.75), ('population', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Independence', 'name', 'city'), ('Coventry', 'name', 'city'), ('Nama', 'language', 'countrylanguage')]"
Elapsed time is 0.660065 seconds.
Processed example 789 out of 1034

Question: What are the population, name and leader of the country with the largest area?
SQL: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
Look for potential candidates "[('population', 0.75), ('leader', 0.75), ('name', 0.75), ('country', 0.75), ('area', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Coventry', 'name', 'city'), ('Nama', 'language', 'countrylanguage')]"
Elapsed time is 0.472576 seconds.
Processed example 790 out of 1034

Question: Give the name, population, and head of state for the country that has the largest area.
SQL: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
Look for potential candidates "[('name', 0.75), ('population', 0.75), ('head of state', 0.75), ('head', 0.75), ('of', 0.75), ('state', 0.75), ('head of', 0.75), ('of state', 0.75), ('country', 0.75), ('area', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Coventry', 'name', 'city'), ('Nama', 'language', 'countrylanguage')]"
Elapsed time is 0.967506 seconds.
Processed example 791 out of 1034

Question: Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.
SQL: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2
Look for potential candidates "[('country', 0.75), ('languages', 0.75), ('numbers', 0.75), ('country name', 0.75), ('name', 0.75), ('3', 1.0)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Coventry', 'name', 'city'), ('Nama', 'language', 'countrylanguage')]"
Elapsed time is 0.482951 seconds.
Processed example 792 out of 1034

Question: What are the names of countries that speak more than 2 languages, as well as how many languages they speak?
SQL: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2
Look for potential candidates "[('countries', 0.75), ('languages', 0.75), ('names', 0.75), ('2', 1.0)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Nîmes', 'name', 'city')]"
Elapsed time is 0.292254 seconds.
Processed example 793 out of 1034

Question: Find the number of cities in each district whose population is greater than the average population of cities?
SQL: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
Look for potential candidates "[('number', 0.75), ('cities', 0.75), ('population', 0.75), ('district', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.421262 seconds.
Processed example 794 out of 1034

Question: How many cities in each district have a population that is above the average population across all cities?
SQL: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
Look for potential candidates "[('cities', 0.75), ('population', 0.75), ('district', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.298873 seconds.
Processed example 795 out of 1034

Question: Find the government form name and total population for each government form whose average life expectancy is longer than 72.
SQL: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
Look for potential candidates "[('government', 0.75), ('population', 0.75), ('name', 0.75), ('government form', 0.75), ('form', 0.75), ('life expectancy', 0.75), ('life', 0.75), ('expectancy', 0.75), ('72', 1.0)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Ife', 'name', 'city'), ('Nama', 'language', 'countrylanguage')]"
Elapsed time is 0.776358 seconds.
Processed example 796 out of 1034

Question: What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?
SQL: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
Look for potential candidates "[('population', 0.75), ('government forms', 0.75), ('government', 0.75), ('forms', 0.75), ('life expectancy', 0.75), ('life', 0.75), ('expectancy', 0.75), ('72', 1.0)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Ife', 'name', 'city')]"
Elapsed time is 0.677196 seconds.
Processed example 797 out of 1034

Question: Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?
SQL: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
Look for potential candidates "[('life expectancy', 0.75), ('life', 0.75), ('expectancy', 0.75), ('continent', 0.75), ('population', 0.75), ('72', 1.0)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Ife', 'name', 'city')]"
Elapsed time is 0.489108 seconds.
Processed example 798 out of 1034

Question: What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?
SQL: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
Look for potential candidates "[('continents', 0.75), ('life expectancy', 0.75), ('life', 0.75), ('expectancy', 0.75), ('popuation', 0.75), ('72', 1.0)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Ife', 'name', 'city')]"
Elapsed time is 0.492404 seconds.
Processed example 799 out of 1034

Question: What are the names and areas of countries with the top 5 largest area?
SQL: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
Look for potential candidates "[('names', 0.75), ('areas', 0.75), ('countries', 0.75), ('area', 0.75), ('5', 1.0)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('5', 'capital', 'country'), ('Nîmes', 'name', 'city')]"
Elapsed time is 0.385212 seconds.
Processed example 800 out of 1034

Question: Return the names and surface areas of the 5 largest countries.
SQL: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
Look for potential candidates "[('surface areas', 0.75), ('surface', 0.75), ('areas', 0.75), ('names', 0.75), ('countries', 0.75), ('5', 1.0)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('5', 'capital', 'country'), ('Nîmes', 'name', 'city')]"
Elapsed time is 0.477454 seconds.
Processed example 801 out of 1034

Question: What are names of countries with the top 3 largest population?
SQL: SELECT Name FROM country ORDER BY Population DESC LIMIT 3
Look for potential candidates "[('names', 0.75), ('countries', 0.75), ('population', 0.75), ('3', 1.0)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Nîmes', 'name', 'city')]"
Elapsed time is 0.293519 seconds.
Processed example 802 out of 1034

Question: Return the names of the 3 most populated countries.
SQL: SELECT Name FROM country ORDER BY Population DESC LIMIT 3
Look for potential candidates "[('names', 0.75), ('countries', 0.75), ('3', 1.0)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Nîmes', 'name', 'city')]"
Elapsed time is 0.198431 seconds.
Processed example 803 out of 1034

Question: What are the names of the nations with the 3 lowest populations?
SQL: SELECT Name FROM country ORDER BY Population ASC LIMIT 3
Look for potential candidates "[('names', 0.75), ('nations', 0.75), ('populations', 0.75), ('3', 1.0)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Nîmes', 'name', 'city')]"
Elapsed time is 0.290150 seconds.
Processed example 804 out of 1034

Question: Return the names of the 3 countries with the fewest people.
SQL: SELECT Name FROM country ORDER BY Population ASC LIMIT 3
Look for potential candidates "[('countries', 0.75), ('names', 0.75), ('people', 0.75), ('3', 1.0)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Nîmes', 'name', 'city')]"
Elapsed time is 0.289232 seconds.
Processed example 805 out of 1034

Question: how many countries are in Asia?
SQL: SELECT count(*) FROM country WHERE continent  =  "Asia"
Look for potential candidates "[('Asia', 0.75), ('countries', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Asia', 'continent', 'country'), ('Apia', 'name', 'city'), ('Asir', 'district', 'city')]"
Elapsed time is 0.192133 seconds.
Processed example 806 out of 1034

Question: Count the number of countries in Asia.
SQL: SELECT count(*) FROM country WHERE continent  =  "Asia"
Look for potential candidates "[('Asia', 0.75), ('number', 0.75), ('countries', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Asia', 'continent', 'country'), ('Apia', 'name', 'city'), ('Asir', 'district', 'city')]"
Elapsed time is 0.280209 seconds.
Processed example 807 out of 1034

Question: What are the names of the countries that are in the continent of Europe and have a population of 80000?
SQL: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"
Look for potential candidates "[('Europe', 0.75), ('countries', 0.75), ('names', 0.75), ('continent', 0.75), ('population', 0.75), ('80000', 1.0)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Europe', 'continent', 'country'), ('Nîmes', 'name', 'city')]"
Elapsed time is 0.474017 seconds.
Processed example 808 out of 1034

Question: Give the names of countries that are in Europe and have a population equal to 80000.
SQL: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"
Look for potential candidates "[('Europe', 0.75), ('countries', 0.75), ('names', 0.75), ('population', 0.75), ('80000', 1.0)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Europe', 'continent', 'country'), ('Nîmes', 'name', 'city')]"
Elapsed time is 0.384525 seconds.
Processed example 809 out of 1034

Question: What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?
SQL: select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000
Look for potential candidates "[('North America', 0.75), ('population', 0.75), ('area', 0.75), ('countries', 0.75), ('continent', 0.75), ('North', 0.75), ('America', 0.75), ('3000', 1.0)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('North America', 'region', 'country'), ('North America', 'continent', 'country'), ('South America', 'region', 'country'), ('South America', 'continent', 'country'), ('Americana', 'name', 'city')]"
Elapsed time is 0.663789 seconds.
Processed example 810 out of 1034

Question: Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 .
SQL: select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000
Look for potential candidates "[('North America', 0.75), ('countries', 0.75), ('surface area', 0.75), ('surface', 0.75), ('area', 0.75), ('population', 0.75), ('North', 0.75), ('America', 0.75), ('3000', 1.0)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('North America', 'region', 'country'), ('North America', 'continent', 'country'), ('South America', 'region', 'country'), ('South America', 'continent', 'country'), ('Americana', 'name', 'city')]"
Elapsed time is 0.763328 seconds.
Processed example 811 out of 1034

Question: What are the cities whose population is between 160000 and 900000?
SQL: SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000
Look for potential candidates "[('cities', 0.75), ('population', 0.75), ('900000', 1.0), ('160000', 1.0)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.207578 seconds.
Processed example 812 out of 1034

Question: Return the names of cities that have a population between 160000 and 900000 .
SQL: select name from city where population between 160000 and 900000
Look for potential candidates "[('cities', 0.75), ('names', 0.75), ('population', 0.75), ('160000', 1.0), ('900000', 1.0)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Nîmes', 'name', 'city')]"
Elapsed time is 0.296096 seconds.
Processed example 813 out of 1034

Question: Which language is spoken by the largest number of countries?
SQL: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('language', 0.75), ('countries', 0.75), ('number', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.282357 seconds.
Processed example 814 out of 1034

Question: Give the language that is spoken in the most countries.
SQL: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('language', 0.75), ('countries', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.192198 seconds.
Processed example 815 out of 1034

Question: What is the language spoken by the largest percentage of people in each country?
SQL: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
Look for potential candidates "[('language', 0.75), ('percentage', 0.75), ('country', 0.75), ('people', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Coventry', 'name', 'city')]"
Elapsed time is 0.382151 seconds.
Processed example 816 out of 1034

Question: What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?
SQL: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
Look for potential candidates "[('country codes', 0.75), ('country', 0.75), ('codes', 0.75), ('countries', 0.75), ('languages', 0.75), ('percentage', 0.75), ('people', 0.75), ('each', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Coventry', 'name', 'city')]"
Elapsed time is 0.749347 seconds.
Processed example 817 out of 1034

Question: What is the total number of countries where Spanish is spoken by the largest percentage of people?
SQL: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
Look for potential candidates "[('Spanish', 0.75), ('countries', 0.75), ('number', 0.75), ('percentage', 0.75), ('people', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Spanish', 'language', 'countrylanguage')]"
Elapsed time is 0.468230 seconds.
Processed example 818 out of 1034

Question: Count the number of countries for which Spanish is the predominantly spoken language.
SQL: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
Look for potential candidates "[('Spanish', 0.75), ('countries', 0.75), ('number', 0.75), ('language', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Spanish', 'language', 'countrylanguage')]"
Elapsed time is 0.378505 seconds.
Processed example 819 out of 1034

Question: What are the codes of countries where Spanish is spoken by the largest percentage of people?
SQL: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
Look for potential candidates "[('Spanish', 0.75), ('countries', 0.75), ('codes', 0.75), ('percentage', 0.75), ('people', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Spanish', 'language', 'countrylanguage')]"
Elapsed time is 0.470729 seconds.
Processed example 820 out of 1034

Question: Return the codes of countries for which Spanish is the predominantly spoken language.
SQL: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
Look for potential candidates "[('Spanish', 0.75), ('countries', 0.75), ('codes', 0.75), ('language', 0.75)]" in database world_1 (include primary keys: False)
Confirmed the following candidates "[('Spanish', 'language', 'countrylanguage')]"
Elapsed time is 0.371304 seconds.
Processed example 821 out of 1034

Question: How many conductors are there?
SQL: SELECT count(*) FROM conductor
Look for potential candidates "[('conductors', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001406 seconds.
Processed example 822 out of 1034

Question: Count the number of conductors.
SQL: SELECT count(*) FROM conductor
Look for potential candidates "[('number', 0.75), ('conductors', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002144 seconds.
Processed example 823 out of 1034

Question: List the names of conductors in ascending order of age.
SQL: SELECT Name FROM conductor ORDER BY Age ASC
Look for potential candidates "[('names', 0.75), ('conductors', 0.75), ('age', 0.75), ('order', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003958 seconds.
Processed example 824 out of 1034

Question: What are the names of conductors, ordered by age?
SQL: SELECT Name FROM conductor ORDER BY Age ASC
Look for potential candidates "[('conductors', 0.75), ('names', 0.75), ('age', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003013 seconds.
Processed example 825 out of 1034

Question: What are the names of conductors whose nationalities are not "USA"?
SQL: SELECT Name FROM conductor WHERE Nationality != 'USA'
Look for potential candidates "[('USA', 1.0), ('US', 0.9), ('United States', 0.9), ('United States of America', 0.9), ('conductors', 0.75), ('names', 0.75), ('nationalities', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[('USA', 'nationality', 'conductor')]"
Elapsed time is 0.005800 seconds.
Processed example 826 out of 1034

Question: Return the names of conductors that do not have the nationality "USA".
SQL: SELECT Name FROM conductor WHERE Nationality != 'USA'
Look for potential candidates "[('USA', 1.0), ('US', 0.9), ('United States', 0.9), ('United States of America', 0.9), ('names', 0.75), ('conductors', 0.75), ('nationality', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[('USA', 'nationality', 'conductor')]"
Elapsed time is 0.006068 seconds.
Processed example 827 out of 1034

Question: What are the record companies of orchestras in descending order of years in which they were founded?
SQL: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
Look for potential candidates "[('record companies', 0.75), ('record', 0.75), ('companies', 0.75), ('order', 0.75), ('orchestras', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.004759 seconds.
Processed example 828 out of 1034

Question: Return the record companies of orchestras, sorted descending by the years in which they were founded.
SQL: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
Look for potential candidates "[('record companies', 0.75), ('record', 0.75), ('companies', 0.75), ('orchestras', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003918 seconds.
Processed example 829 out of 1034

Question: What is the average attendance of shows?
SQL: SELECT avg(Attendance) FROM SHOW
Look for potential candidates "[('attendance', 0.75), ('shows', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002185 seconds.
Processed example 830 out of 1034

Question: Return the average attendance across all shows.
SQL: SELECT avg(Attendance) FROM SHOW
Look for potential candidates "[('attendance', 0.75), ('shows', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002181 seconds.
Processed example 831 out of 1034

Question: What are the maximum and minimum share of performances whose type is not "Live final".
SQL: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"
Look for potential candidates "[('Live final', 0.9), ('Live', 0.75), ('type', 0.75), ('performances', 0.75), ('share', 0.75), ('final', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[('Live final', 'type', 'performance')]"
Elapsed time is 0.005523 seconds.
Processed example 832 out of 1034

Question: Return the maximum and minimum shares for performances that do not have the type "Live final".
SQL: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"
Look for potential candidates "[('Live final', 0.9), ('Live', 0.75), ('performances', 0.75), ('final', 0.75), ('shares', 0.75), ('type', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[('Live final', 'type', 'performance')]"
Elapsed time is 0.005470 seconds.
Processed example 833 out of 1034

Question: How many different nationalities do conductors have?
SQL: SELECT count(DISTINCT Nationality) FROM conductor
Look for potential candidates "[('nationalities', 0.75), ('conductors', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002229 seconds.
Processed example 834 out of 1034

Question: Count the number of different nationalities of conductors.
SQL: SELECT count(DISTINCT Nationality) FROM conductor
Look for potential candidates "[('number', 0.75), ('nationalities', 0.75), ('conductors', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003066 seconds.
Processed example 835 out of 1034

Question: List names of conductors in descending order of years of work.
SQL: SELECT Name FROM conductor ORDER BY Year_of_Work DESC
Look for potential candidates "[('List names', 0.75), ('List', 0.75), ('names', 0.75), ('conductors', 0.75), ('order', 0.75), ('work', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.005401 seconds.
Processed example 836 out of 1034

Question: What are the names of conductors, sorted descending by the number of years they have worked?
SQL: SELECT Name FROM conductor ORDER BY Year_of_Work DESC
Look for potential candidates "[('conductors', 0.75), ('names', 0.75), ('number', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002959 seconds.
Processed example 837 out of 1034

Question: List the name of the conductor with the most years of work.
SQL: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
Look for potential candidates "[('name', 0.75), ('conductor', 0.75), ('work', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002999 seconds.
Processed example 838 out of 1034

Question: What is the name of the conductor who has worked the greatest number of years?
SQL: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
Look for potential candidates "[('conductor', 0.75), ('name', 0.75), ('number', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002982 seconds.
Processed example 839 out of 1034

Question: Show the names of conductors and the orchestras they have conducted.
SQL: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
Look for potential candidates "[('conductors', 0.75), ('orchestras', 0.75), ('names', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003084 seconds.
Processed example 840 out of 1034

Question: What are the names of conductors as well as the corresonding orchestras that they have conducted?
SQL: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
Look for potential candidates "[('names', 0.75), ('conductors', 0.75), ('orchestras', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003367 seconds.
Processed example 841 out of 1034

Question: Show the names of conductors that have conducted more than one orchestras.
SQL: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1
Look for potential candidates "[('names', 0.75), ('conductors', 0.75), ('orchestras', 0.75), ('1', 1.0)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[('1', 'show id', 'show'), ('1', 'weekly rank', 'performance')]"
Elapsed time is 0.003056 seconds.
Processed example 842 out of 1034

Question: What are the names of conductors who have conducted at more than one orchestra?
SQL: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1
Look for potential candidates "[('conductors', 0.75), ('names', 0.75), ('orchestra', 0.75), ('1', 1.0)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[('1', 'show id', 'show'), ('1', 'weekly rank', 'performance')]"
Elapsed time is 0.003197 seconds.
Processed example 843 out of 1034

Question: Show the name of the conductor that has conducted the most number of orchestras.
SQL: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1
Look for potential candidates "[('name', 0.75), ('conductor', 0.75), ('orchestras', 0.75), ('number', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003762 seconds.
Processed example 844 out of 1034

Question: What is the name of the conductor who has conducted the most orchestras?
SQL: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1
Look for potential candidates "[('conductor', 0.75), ('name', 0.75), ('orchestras', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003009 seconds.
Processed example 845 out of 1034

Question: Please show the name of the conductor that has conducted orchestras founded after 2008.
SQL: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008
Look for potential candidates "[('name', 0.75), ('conductor', 0.75), ('orchestras', 0.75), ('2008', 1.0)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003099 seconds.
Processed example 846 out of 1034

Question: What are the names of conductors who have conducted orchestras founded after the year 2008?
SQL: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008
Look for potential candidates "[('conductors', 0.75), ('names', 0.75), ('orchestras', 0.75), ('2008', 1.0)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003092 seconds.
Processed example 847 out of 1034

Question: Please show the different record companies and the corresponding number of orchestras.
SQL: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company
Look for potential candidates "[('orchestras', 0.75), ('record companies', 0.75), ('record', 0.75), ('companies', 0.75), ('number', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.004731 seconds.
Processed example 848 out of 1034

Question: How many orchestras does each record company manage?
SQL: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company
Look for potential candidates "[('orchestras', 0.75), ('record company', 0.75), ('record', 0.75), ('company', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003840 seconds.
Processed example 849 out of 1034

Question: Please show the record formats of orchestras in ascending order of count.
SQL: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
Look for potential candidates "[('orchestras', 0.75), ('count', 0.75), ('record formats', 0.75), ('record', 0.75), ('formats', 0.75), ('order', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.005521 seconds.
Processed example 850 out of 1034

Question: What are the major record formats of orchestras, sorted by their frequency?
SQL: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
Look for potential candidates "[('record formats', 0.75), ('record', 0.75), ('formats', 0.75), ('orchestras', 0.75), ('frequency', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.004824 seconds.
Processed example 851 out of 1034

Question: List the record company shared by the most number of orchestras.
SQL: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
Look for potential candidates "[('record company', 0.75), ('record', 0.75), ('company', 0.75), ('orchestras', 0.75), ('number', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.004746 seconds.
Processed example 852 out of 1034

Question: What is the record company used by the greatest number of orchestras?
SQL: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
Look for potential candidates "[('record company', 0.75), ('record', 0.75), ('company', 0.75), ('orchestras', 0.75), ('number', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.004586 seconds.
Processed example 853 out of 1034

Question: List the names of orchestras that have no performance.
SQL: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
Look for potential candidates "[('no', 0.9), ('orchestras', 0.75), ('names', 0.75), ('performance', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003725 seconds.
Processed example 854 out of 1034

Question: What are the orchestras that do not have any performances?
SQL: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
Look for potential candidates "[('orchestras', 0.75), ('performances', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002217 seconds.
Processed example 855 out of 1034

Question: Show the record companies shared by orchestras founded before 2003 and after 2003.
SQL: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
Look for potential candidates "[('orchestras', 0.75), ('record companies', 0.75), ('record', 0.75), ('companies', 0.75), ('2003', 1.0)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003992 seconds.
Processed example 856 out of 1034

Question: What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?
SQL: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
Look for potential candidates "[('record companies', 0.75), ('record', 0.75), ('companies', 0.75), ('orchestras', 0.75), ('2003', 1.0)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.004200 seconds.
Processed example 857 out of 1034

Question: Find the number of orchestras whose record format is "CD" or "DVD".
SQL: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
Look for potential candidates "[('CD', 1.0), ('DVD', 1.0), ('number', 0.75), ('record format', 0.75), ('record', 0.75), ('format', 0.75), ('orchestras', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[('DVD', 'major record format', 'orchestra'), ('CD', 'major record format', 'orchestra')]"
Elapsed time is 0.004929 seconds.
Processed example 858 out of 1034

Question: Count the number of orchestras that have CD or DVD as their record format.
SQL: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
Look for potential candidates "[('CD', 1.0), ('DVD', 1.0), ('orchestras', 0.75), ('number', 0.75), ('record format', 0.75), ('record', 0.75), ('format', 0.75)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[('DVD', 'major record format', 'orchestra'), ('CD', 'major record format', 'orchestra')]"
Elapsed time is 0.004939 seconds.
Processed example 859 out of 1034

Question: Show the years in which orchestras that have given more than one performance are founded.
SQL: SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1
Look for potential candidates "[('orchestras', 0.75), ('performance', 0.75), ('1', 1.0)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[('1', 'show id', 'show'), ('1', 'weekly rank', 'performance')]"
Elapsed time is 0.002246 seconds.
Processed example 860 out of 1034

Question: What are years of founding for orchestras that have had more than a single performance?
SQL: SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1
Look for potential candidates "[('orchestras', 0.75), ('performance', 0.75), ('1', 1.0)]" in database orchestra (include primary keys: False)
Confirmed the following candidates "[('1', 'show id', 'show'), ('1', 'weekly rank', 'performance')]"
Elapsed time is 0.002362 seconds.
Processed example 861 out of 1034

Question: How many high schoolers are there?
SQL: SELECT count(*) FROM Highschooler
Look for potential candidates "[('schoolers', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000445 seconds.
Processed example 862 out of 1034

Question: Count the number of high schoolers.
SQL: SELECT count(*) FROM Highschooler
Look for potential candidates "[('number', 0.75), ('schoolers', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000562 seconds.
Processed example 863 out of 1034

Question: Show the names and grades of each high schooler.
SQL: SELECT name ,  grade FROM Highschooler
Look for potential candidates "[('grades', 0.75), ('names', 0.75), ('schooler', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000716 seconds.
Processed example 864 out of 1034

Question: What are the names and grades for each high schooler?
SQL: SELECT name ,  grade FROM Highschooler
Look for potential candidates "[('grades', 0.75), ('names', 0.75), ('schooler', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000712 seconds.
Processed example 865 out of 1034

Question: Show all the grades of the high schoolers.
SQL: SELECT grade FROM Highschooler
Look for potential candidates "[('schoolers', 0.75), ('grades', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000612 seconds.
Processed example 866 out of 1034

Question: What is the grade of each high schooler?
SQL: SELECT grade FROM Highschooler
Look for potential candidates "[('grade', 0.75), ('schooler', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000566 seconds.
Processed example 867 out of 1034

Question: What grade is Kyle in?
SQL: SELECT grade FROM Highschooler WHERE name  =  "Kyle"
Look for potential candidates "[('Kyle', 0.75), ('grade', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[('Kyle', 'name', 'high schooler')]"
Elapsed time is 0.000544 seconds.
Processed example 868 out of 1034

Question: Return the grade for the high schooler named Kyle.
SQL: SELECT grade FROM Highschooler WHERE name  =  "Kyle"
Look for potential candidates "[('Kyle', 0.75), ('grade', 0.75), ('schooler', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[('Kyle', 'name', 'high schooler')]"
Elapsed time is 0.000690 seconds.
Processed example 869 out of 1034

Question: Show the names of all high schoolers in grade 10.
SQL: SELECT name FROM Highschooler WHERE grade  =  10
Look for potential candidates "[('schoolers', 0.75), ('names', 0.75), ('10', 1.0)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[('10', 'grade', 'high schooler')]"
Elapsed time is 0.000576 seconds.
Processed example 870 out of 1034

Question: What are the names of all high schoolers in grade 10?
SQL: SELECT name FROM Highschooler WHERE grade  =  10
Look for potential candidates "[('names', 0.75), ('schoolers', 0.75), ('10', 1.0)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[('10', 'grade', 'high schooler')]"
Elapsed time is 0.000575 seconds.
Processed example 871 out of 1034

Question: Show the ID of the high schooler named Kyle.
SQL: SELECT ID FROM Highschooler WHERE name  =  "Kyle"
Look for potential candidates "[('ID', 1.0), ('Kyle', 0.75), ('Idaho', 0.9), ('schooler', 0.75)]" in database network_1 (include primary keys: True)
Confirmed the following candidates "[('Kyle', 'name', 'high schooler')]"
Elapsed time is 0.000938 seconds.
Processed example 872 out of 1034

Question: What is Kyle's id?
SQL: SELECT ID FROM Highschooler WHERE name  =  "Kyle"
Look for potential candidates "[('Kyle', 0.75), ('id', 0.75)]" in database network_1 (include primary keys: True)
Confirmed the following candidates "[('Kyle', 'name', 'high schooler')]"
Elapsed time is 0.000689 seconds.
Processed example 873 out of 1034

Question: How many high schoolers are there in grade 9 or 10?
SQL: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
Look for potential candidates "[('schoolers', 0.75), ('10', 1.0), ('9', 1.0)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[('10', 'grade', 'high schooler'), ('9', 'grade', 'high schooler')]"
Elapsed time is 0.000435 seconds.
Processed example 874 out of 1034

Question: Count the number of high schoolers in grades 9 or 10.
SQL: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
Look for potential candidates "[('number', 0.75), ('schoolers', 0.75), ('grades', 0.75), ('10', 1.0), ('9', 1.0)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[('10', 'grade', 'high schooler'), ('9', 'grade', 'high schooler')]"
Elapsed time is 0.000719 seconds.
Processed example 875 out of 1034

Question: Show the number of high schoolers for each grade.
SQL: SELECT grade ,  count(*) FROM Highschooler GROUP BY grade
Look for potential candidates "[('schoolers', 0.75), ('number', 0.75), ('grade', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000690 seconds.
Processed example 876 out of 1034

Question: How many high schoolers are in each grade?
SQL: SELECT grade ,  count(*) FROM Highschooler GROUP BY grade
Look for potential candidates "[('schoolers', 0.75), ('grade', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000564 seconds.
Processed example 877 out of 1034

Question: Which grade has the most high schoolers?
SQL: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('grade', 0.75), ('schoolers', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000579 seconds.
Processed example 878 out of 1034

Question: Return the grade that has the greatest number of high schoolers.
SQL: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('grade', 0.75), ('number', 0.75), ('schoolers', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000784 seconds.
Processed example 879 out of 1034

Question: Show me all grades that have at least 4 students.
SQL: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
Look for potential candidates "[('grades', 0.75), ('students', 0.75), ('4', 1.0)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000559 seconds.
Processed example 880 out of 1034

Question: Which grades have 4 or more high schoolers?
SQL: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
Look for potential candidates "[('grades', 0.75), ('schoolers', 0.75), ('4', 1.0)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000557 seconds.
Processed example 881 out of 1034

Question: Show the student IDs and numbers of friends corresponding to each.
SQL: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
Look for potential candidates "[('ID', 1.0), ('IDs', 0.75), ('Idaho', 0.9), ('numbers', 0.75), ('friends', 0.75), ('student IDs', 0.75), ('student', 0.75)]" in database network_1 (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.001675 seconds.
Processed example 882 out of 1034

Question: How many friends does each student have?
SQL: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
Look for potential candidates "[('friends', 0.75), ('student', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000593 seconds.
Processed example 883 out of 1034

Question: Show the names of high school students and their corresponding number of friends.
SQL: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
Look for potential candidates "[('high school students', 0.75), ('high', 0.75), ('school', 0.75), ('students', 0.75), ('high school', 0.75), ('school students', 0.75), ('names', 0.75), ('friends', 0.75), ('number', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001612 seconds.
Processed example 884 out of 1034

Question: What are the names of the high schoolers and how many friends does each have?
SQL: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
Look for potential candidates "[('names', 0.75), ('schoolers', 0.75), ('friends', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000713 seconds.
Processed example 885 out of 1034

Question: What is the name of the high schooler who has the greatest number of friends?
SQL: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('schooler', 0.75), ('name', 0.75), ('friends', 0.75), ('number', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000861 seconds.
Processed example 886 out of 1034

Question: Return the name of the high school student with the most friends.
SQL: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('name', 0.75), ('high school student', 0.75), ('high', 0.75), ('school', 0.75), ('student', 0.75), ('high school', 0.75), ('school student', 0.75), ('friends', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001463 seconds.
Processed example 887 out of 1034

Question: Show the names of high schoolers who have at least 3 friends.
SQL: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3
Look for potential candidates "[('schoolers', 0.75), ('names', 0.75), ('friends', 0.75), ('3', 1.0)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000727 seconds.
Processed example 888 out of 1034

Question: What are the names of high schoolers who have 3 or more friends?
SQL: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3
Look for potential candidates "[('schoolers', 0.75), ('names', 0.75), ('friends', 0.75), ('3', 1.0)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000755 seconds.
Processed example 889 out of 1034

Question: Show the names of all of the high schooler Kyle's friends.
SQL: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
Look for potential candidates "[('Kyle', 0.75), ('all', 0.75), ('names', 0.75), ('friends', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[('Kyle', 'name', 'high schooler')]"
Elapsed time is 0.000880 seconds.
Processed example 890 out of 1034

Question: Return the names of friends of the high school student Kyle.
SQL: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
Look for potential candidates "[('Kyle', 0.75), ('friends', 0.75), ('names', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[('Kyle', 'name', 'high schooler')]"
Elapsed time is 0.000730 seconds.
Processed example 891 out of 1034

Question: How many friends does the high school student Kyle have?
SQL: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
Look for potential candidates "[('Kyle', 0.75), ('friends', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[('Kyle', 'name', 'high schooler')]"
Elapsed time is 0.000559 seconds.
Processed example 892 out of 1034

Question: Count the number of friends Kyle has.
SQL: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
Look for potential candidates "[('Kyle', 0.75), ('number', 0.75), ('friends', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[('Kyle', 'name', 'high schooler')]"
Elapsed time is 0.000704 seconds.
Processed example 893 out of 1034

Question: Show ids of all students who do not have any friends.
SQL: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
Look for potential candidates "[('Show ids', 0.75), ('Show', 0.75), ('ids', 0.75), ('students', 0.75), ('friends', 0.75)]" in database network_1 (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.001404 seconds.
Processed example 894 out of 1034

Question: What are the ids of high school students who do not have friends?
SQL: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
Look for potential candidates "[('high school students', 0.75), ('high', 0.75), ('school', 0.75), ('students', 0.75), ('high school', 0.75), ('school students', 0.75), ('ids', 0.75), ('friends', 0.75)]" in database network_1 (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.002057 seconds.
Processed example 895 out of 1034

Question: Show names of all high school students who do not have any friends.
SQL: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id
Look for potential candidates "[('Show names', 0.75), ('Show', 0.75), ('names', 0.75), ('high school students', 0.75), ('high', 0.75), ('school', 0.75), ('students', 0.75), ('high school', 0.75), ('school students', 0.75), ('friends', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001778 seconds.
Processed example 896 out of 1034

Question: What are the names of students who have no friends?
SQL: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id
Look for potential candidates "[('no', 0.9), ('students', 0.75), ('names', 0.75), ('friends', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000857 seconds.
Processed example 897 out of 1034

Question: Show the ids of high schoolers who have friends and are also liked by someone else.
SQL: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
Look for potential candidates "[('schoolers', 0.75), ('ids', 0.75), ('friends', 0.75), ('someone', 0.75)]" in database network_1 (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.001164 seconds.
Processed example 898 out of 1034

Question: What are the ids of students who both have friends and are liked?
SQL: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
Look for potential candidates "[('students', 0.75), ('ids', 0.75), ('friends', 0.75)]" in database network_1 (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.000965 seconds.
Processed example 899 out of 1034

Question: Show name of all students who have some friends and also are liked by someone else.
SQL: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id
Look for potential candidates "[('students', 0.75), ('Show name', 0.75), ('Show', 0.75), ('name', 0.75), ('friends', 0.75), ('someone', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001160 seconds.
Processed example 900 out of 1034

Question: What are the names of high schoolers who both have friends and are liked?
SQL: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id
Look for potential candidates "[('schoolers', 0.75), ('names', 0.75), ('friends', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000696 seconds.
Processed example 901 out of 1034

Question: Count the number of likes for each student id.
SQL: SELECT student_id ,  count(*) FROM Likes GROUP BY student_id
Look for potential candidates "[('number', 0.75), ('likes', 0.75), ('student id', 0.75), ('student', 0.75), ('id', 0.75)]" in database network_1 (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.001441 seconds.
Processed example 902 out of 1034

Question: How many likes correspond to each student id?
SQL: SELECT student_id ,  count(*) FROM Likes GROUP BY student_id
Look for potential candidates "[('likes', 0.75), ('student id', 0.75), ('student', 0.75), ('id', 0.75)]" in database network_1 (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.001169 seconds.
Processed example 903 out of 1034

Question: Show the names of high schoolers who have likes, and numbers of likes for each.
SQL: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
Look for potential candidates "[('schoolers', 0.75), ('names', 0.75), ('likes', 0.75), ('each', 0.75), ('numbers', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001034 seconds.
Processed example 904 out of 1034

Question: What are the names of high schoolers who have likes, and how many likes does each have?
SQL: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
Look for potential candidates "[('schoolers', 0.75), ('names', 0.75), ('likes', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000710 seconds.
Processed example 905 out of 1034

Question: What is the name of the high schooler who has the greatest number of likes?
SQL: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('schooler', 0.75), ('name', 0.75), ('likes', 0.75), ('number', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000888 seconds.
Processed example 906 out of 1034

Question: Give the name of the student with the most likes.
SQL: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('name', 0.75), ('student', 0.75), ('likes', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000705 seconds.
Processed example 907 out of 1034

Question: Show the names of students who have at least 2 likes.
SQL: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2
Look for potential candidates "[('students', 0.75), ('names', 0.75), ('likes', 0.75), ('2', 1.0)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000721 seconds.
Processed example 908 out of 1034

Question: What are the names of students who have 2 or more likes?
SQL: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2
Look for potential candidates "[('students', 0.75), ('names', 0.75), ('likes', 0.75), ('2', 1.0)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000730 seconds.
Processed example 909 out of 1034

Question: Show the names of students who have a grade higher than 5 and have at least 2 friends.
SQL: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2
Look for potential candidates "[('students', 0.75), ('names', 0.75), ('grade', 0.75), ('friends', 0.75), ('5', 1.0), ('2', 1.0)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000891 seconds.
Processed example 910 out of 1034

Question: What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?
SQL: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2
Look for potential candidates "[('schoolers', 0.75), ('names', 0.75), ('grade', 0.75), ('friends', 0.75), ('5', 1.0), ('2', 1.0)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000892 seconds.
Processed example 911 out of 1034

Question: How many likes does Kyle have?
SQL: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
Look for potential candidates "[('Kyle', 0.75), ('likes', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[('Kyle', 'name', 'high schooler')]"
Elapsed time is 0.000561 seconds.
Processed example 912 out of 1034

Question: Return the number of likes that the high schooler named Kyle has.
SQL: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
Look for potential candidates "[('Kyle', 0.75), ('schooler', 0.75), ('likes', 0.75), ('number', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[('Kyle', 'name', 'high schooler')]"
Elapsed time is 0.000837 seconds.
Processed example 913 out of 1034

Question: Find the average grade of all students who have some friends.
SQL: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
Look for potential candidates "[('students', 0.75), ('grade', 0.75), ('friends', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000689 seconds.
Processed example 914 out of 1034

Question: What is the average grade of students who have friends?
SQL: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
Look for potential candidates "[('students', 0.75), ('grade', 0.75), ('friends', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000759 seconds.
Processed example 915 out of 1034

Question: Find the minimum grade of students who have no friends.
SQL: SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
Look for potential candidates "[('no', 0.9), ('students', 0.75), ('grade', 0.75), ('friends', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000857 seconds.
Processed example 916 out of 1034

Question: What is the lowest grade of students who do not have any friends?
SQL: SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
Look for potential candidates "[('students', 0.75), ('grade', 0.75), ('friends', 0.75)]" in database network_1 (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000746 seconds.
Processed example 917 out of 1034

Question: Which states have both owners and professionals living there?
SQL: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
Look for potential candidates "[('states', 0.75), ('owners', 0.75), ('professionals', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.008309 seconds.
Processed example 918 out of 1034

Question: Find the states where both owners and professionals live.
SQL: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
Look for potential candidates "[('states', 0.75), ('owners', 0.75), ('professionals', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.008141 seconds.
Processed example 919 out of 1034

Question: What is the average age of the dogs who have gone through any treatments?
SQL: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
Look for potential candidates "[('age', 0.75), ('dogs', 0.75), ('treatments', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.009392 seconds.
Processed example 920 out of 1034

Question: Find the average age of the dogs who went through treatments.
SQL: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
Look for potential candidates "[('age', 0.75), ('dogs', 0.75), ('treatments', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.007930 seconds.
Processed example 921 out of 1034

Question: Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.
SQL: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2
Look for potential candidates "[('List', 0.75), ('IN', 0.9), ('Indiana', 0.9), ('professionals', 0.75), ('state', 0.75), ('treatment', 0.75), ('treatments', 0.75), ('name', 0.75), ('cell phone', 0.75), ('cell', 0.75), ('phone', 0.75), ('id', 0.75), ('2', 1.0)]" in database dog_kennels (include primary keys: True)
Confirmed the following candidates "[('2', 'charge id', 'charges'), ('2', 'treatment id', 'treatments'), ('Indiana', 'state', 'owners'), ('Indiana', 'state', 'professionals'), ('2', 'owner id', 'owners'), ('2', 'professional id', 'professionals'), ('2', 'dog id', 'dogs'), ('2', 'age', 'dogs')]"
Elapsed time is 0.033813 seconds.
Processed example 922 out of 1034

Question: Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.
SQL: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2
Look for potential candidates "[('IN', 0.9), ('Indiana', 0.9), ('id', 0.75), ('professionals', 0.75), ('name', 0.75), ('cell phone', 0.75), ('cell', 0.75), ('phone', 0.75), ('state', 0.75), ('treatments', 0.75), ('2', 1.0)]" in database dog_kennels (include primary keys: True)
Confirmed the following candidates "[('2', 'charge id', 'charges'), ('2', 'treatment id', 'treatments'), ('Indiana', 'state', 'owners'), ('Indiana', 'state', 'professionals'), ('2', 'owner id', 'owners'), ('2', 'professional id', 'professionals'), ('2', 'dog id', 'dogs'), ('2', 'age', 'dogs')]"
Elapsed time is 0.029142 seconds.
Processed example 923 out of 1034

Question: Which dogs have not cost their owner more than 1000 for treatment ? List the dog names .
SQL: select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )
Look for potential candidates "[('List', 0.75), ('dogs', 0.75), ('owner', 0.75), ('treatment', 0.75), ('dog names', 0.75), ('dog', 0.75), ('names', 0.75), ('1000', 1.0)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.018088 seconds.
Processed example 924 out of 1034

Question: What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?
SQL: select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )
Look for potential candidates "[('dogs', 0.75), ('names', 0.75), ('owner', 0.75), ('treatment', 0.75), ('1000', 1.0)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.010519 seconds.
Processed example 925 out of 1034

Question: Which first names are used for professionals or owners but are not used as dog names?
SQL: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
Look for potential candidates "[('names', 0.75), ('owners', 0.75), ('professionals', 0.75), ('dog names', 0.75), ('dog', 0.75), ('1', 1.0)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[('1', 'abandoned yes or no', 'dogs'), ('1', 'age', 'dogs'), ('1', 'gender', 'dogs')]"
Elapsed time is 0.013576 seconds.
Processed example 926 out of 1034

Question: Find the first names that are used for professionals or owners but are not used as dog names.
SQL: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
Look for potential candidates "[('names', 0.75), ('professionals', 0.75), ('owners', 0.75), ('dog names', 0.75), ('dog', 0.75), ('1', 1.0)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[('1', 'abandoned yes or no', 'dogs'), ('1', 'age', 'dogs'), ('1', 'gender', 'dogs')]"
Elapsed time is 0.013496 seconds.
Processed example 927 out of 1034

Question: Which professional did not operate any treatment on dogs? List the professional's id, role and email.
SQL: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
Look for potential candidates "[('List', 0.75), ('dogs', 0.75), ('professional', 0.75), ('role', 0.75), ('treatment', 0.75), ('email', 0.75), ('id', 0.75)]" in database dog_kennels (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.019627 seconds.
Processed example 928 out of 1034

Question: Give me the id, role and email of the professionals who did not perform any treatment on dogs.
SQL: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
Look for potential candidates "[('professionals', 0.75), ('role', 0.75), ('id', 0.75), ('email', 0.75), ('treatment', 0.75), ('dogs', 0.75)]" in database dog_kennels (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.017040 seconds.
Processed example 929 out of 1034

Question: Which owner owns the most dogs? List the owner id, first name and last name.
SQL: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('List', 0.75), ('owner', 0.75), ('dogs', 0.75), ('owner id', 0.75), ('id', 0.75), ('name', 0.75), ('1', 1.0)]" in database dog_kennels (include primary keys: True)
Confirmed the following candidates "[('1', 'owner id', 'owners'), ('1', 'treatment id', 'treatments'), ('1', 'age', 'dogs'), ('1', 'professional id', 'professionals'), ('1', 'dog id', 'dogs'), ('1', 'abandoned yes or no', 'dogs'), ('1', 'charge id', 'charges'), ('1', 'gender', 'dogs')]"
Elapsed time is 0.016945 seconds.
Processed example 930 out of 1034

Question: Return the owner id, first name and last name of the owner who has the most dogs.
SQL: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('name', 0.75), ('owner', 0.75), ('owner id', 0.75), ('id', 0.75), ('dogs', 0.75), ('1', 1.0)]" in database dog_kennels (include primary keys: True)
Confirmed the following candidates "[('1', 'owner id', 'owners'), ('1', 'treatment id', 'treatments'), ('1', 'age', 'dogs'), ('1', 'professional id', 'professionals'), ('1', 'dog id', 'dogs'), ('1', 'abandoned yes or no', 'dogs'), ('1', 'charge id', 'charges'), ('1', 'gender', 'dogs')]"
Elapsed time is 0.014056 seconds.
Processed example 931 out of 1034

Question: Which professionals have done at least two treatments? List the professional's id, role, and first name.
SQL: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
Look for potential candidates "[('List', 0.75), ('professionals', 0.75), ('treatments', 0.75), ('professional', 0.75), ('id', 0.75), ('name', 0.75), ('role', 0.75), ('1', 1.0), ('2', 1.0)]" in database dog_kennels (include primary keys: True)
Confirmed the following candidates "[('2', 'charge id', 'charges'), ('2', 'treatment id', 'treatments'), ('1', 'owner id', 'owners'), ('2', 'owner id', 'owners'), ('2', 'professional id', 'professionals'), ('1', 'treatment id', 'treatments'), ('1', 'age', 'dogs'), ('1', 'professional id', 'professionals'), ('2', 'dog id', 'dogs'), ('2', 'age', 'dogs')]"
Elapsed time is 0.021275 seconds.
Processed example 932 out of 1034

Question: What are the id, role, and first name of the professionals who have performed two or more treatments?
SQL: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
Look for potential candidates "[('professionals', 0.75), ('role', 0.75), ('id', 0.75), ('name', 0.75), ('treatments', 0.75), ('1', 1.0), ('2', 1.0)]" in database dog_kennels (include primary keys: True)
Confirmed the following candidates "[('2', 'charge id', 'charges'), ('2', 'treatment id', 'treatments'), ('1', 'owner id', 'owners'), ('2', 'owner id', 'owners'), ('2', 'professional id', 'professionals'), ('1', 'treatment id', 'treatments'), ('1', 'age', 'dogs'), ('1', 'professional id', 'professionals'), ('2', 'dog id', 'dogs'), ('2', 'age', 'dogs')]"
Elapsed time is 0.015260 seconds.
Processed example 933 out of 1034

Question: What is the name of the breed with the most dogs?
SQL: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('name', 0.75), ('breed', 0.75), ('dogs', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.007676 seconds.
Processed example 934 out of 1034

Question: Which breed do the most dogs have? Give me the breed name.
SQL: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('Give', 0.75), ('dogs', 0.75), ('breed name', 0.75), ('breed', 0.75), ('name', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.013273 seconds.
Processed example 935 out of 1034

Question: Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.
SQL: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('List', 0.75), ('owner', 0.75), ('treatments', 0.75), ('dogs', 0.75), ('owner id', 0.75), ('id', 0.75), ('name', 0.75)]" in database dog_kennels (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.019386 seconds.
Processed example 936 out of 1034

Question: Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.
SQL: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
Look for potential candidates "[('owner', 0.75), ('owner id', 0.75), ('id', 0.75), ('name', 0.75), ('most', 0.75), ('dogs', 0.75), ('treatments', 0.75)]" in database dog_kennels (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.019490 seconds.
Processed example 937 out of 1034

Question: What is the description of the treatment type that costs the least money in total?
SQL: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1
Look for potential candidates "[('treatment type', 0.75), ('treatment', 0.75), ('type', 0.75), ('description', 0.75), ('total', 0.75), ('money', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.015425 seconds.
Processed example 938 out of 1034

Question: Give me the description of the treatment type whose total cost is the lowest.
SQL: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1
Look for potential candidates "[('lowest', 0.75), ('description', 0.75), ('treatment type', 0.75), ('treatment', 0.75), ('type', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.012986 seconds.
Processed example 939 out of 1034

Question: Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.
SQL: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
Look for potential candidates "[('Show', 0.75), ('owner', 0.75), ('total', 0.75), ('money', 0.75), ('amount', 0.75), ('dogs', 0.75), ('zip code', 0.75), ('zip', 0.75), ('code', 0.75), ('owner id', 0.75), ('id', 0.75)]" in database dog_kennels (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.029708 seconds.
Processed example 940 out of 1034

Question: Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.
SQL: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
Look for potential candidates "[('owner', 0.75), ('owner id', 0.75), ('id', 0.75), ('zip code', 0.75), ('zip', 0.75), ('code', 0.75), ('money', 0.75), ('dogs', 0.75), ('total', 0.75)]" in database dog_kennels (include primary keys: True)
Confirmed the following candidates "[]"
Elapsed time is 0.024933 seconds.
Processed example 941 out of 1034

Question: Which professionals have done at least two types of treatments? List the professional id and cell phone.
SQL: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
Look for potential candidates "[('List', 0.75), ('professionals', 0.75), ('treatments', 0.75), ('types', 0.75), ('cell phone', 0.75), ('cell', 0.75), ('phone', 0.75), ('id', 0.75), ('2', 1.0)]" in database dog_kennels (include primary keys: True)
Confirmed the following candidates "[('2', 'charge id', 'charges'), ('2', 'treatment id', 'treatments'), ('2', 'owner id', 'owners'), ('2', 'professional id', 'professionals'), ('2', 'dog id', 'dogs'), ('2', 'age', 'dogs')]"
Elapsed time is 0.023673 seconds.
Processed example 942 out of 1034

Question: Find the id and cell phone of the professionals who operate two or more types of treatments.
SQL: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
Look for potential candidates "[('professionals', 0.75), ('id', 0.75), ('cell phone', 0.75), ('cell', 0.75), ('phone', 0.75), ('treatments', 0.75), ('types', 0.75), ('2', 1.0)]" in database dog_kennels (include primary keys: True)
Confirmed the following candidates "[('2', 'charge id', 'charges'), ('2', 'treatment id', 'treatments'), ('2', 'owner id', 'owners'), ('2', 'professional id', 'professionals'), ('2', 'dog id', 'dogs'), ('2', 'age', 'dogs')]"
Elapsed time is 0.020902 seconds.
Processed example 943 out of 1034

Question: What are the first name and last name of the professionals who have done treatment with cost below average?
SQL: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )
Look for potential candidates "[('professionals', 0.75), ('name', 0.75), ('cost', 0.75), ('average', 0.75), ('treatment', 0.75), ('1', 1.0)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[('1', 'abandoned yes or no', 'dogs'), ('1', 'age', 'dogs'), ('1', 'gender', 'dogs')]"
Elapsed time is 0.013162 seconds.
Processed example 944 out of 1034

Question: Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.
SQL: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )
Look for potential candidates "[('Give', 0.75), ('professionals', 0.75), ('treatment', 0.75), ('average', 0.75), ('names', 0.75), ('1', 1.0)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[('1', 'abandoned yes or no', 'dogs'), ('1', 'age', 'dogs'), ('1', 'gender', 'dogs')]"
Elapsed time is 0.013228 seconds.
Processed example 945 out of 1034

Question: List the date of each treatment, together with the first name of the professional who operated it.
SQL: SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id
Look for potential candidates "[('professional', 0.75), ('treatment', 0.75), ('name', 0.75), ('1', 1.0)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[('1', 'abandoned yes or no', 'dogs'), ('1', 'age', 'dogs'), ('1', 'gender', 'dogs')]"
Elapsed time is 0.008549 seconds.
Processed example 946 out of 1034

Question: What are the date and the operating professional's first name of each treatment?
SQL: SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id
Look for potential candidates "[('professional', 0.75), ('treatment', 0.75), ('name', 0.75), ('1', 1.0)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[('1', 'abandoned yes or no', 'dogs'), ('1', 'age', 'dogs'), ('1', 'gender', 'dogs')]"
Elapsed time is 0.008556 seconds.
Processed example 947 out of 1034

Question: List the cost of each treatment and the corresponding treatment type description.
SQL: SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code
Look for potential candidates "[('cost', 0.75), ('treatment', 0.75), ('treatment type description', 0.75), ('type', 0.75), ('description', 0.75), ('treatment type', 0.75), ('type description', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.019358 seconds.
Processed example 948 out of 1034

Question: What are the cost and treatment type description of each treatment?
SQL: SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code
Look for potential candidates "[('cost', 0.75), ('treatment type description', 0.75), ('treatment', 0.75), ('type', 0.75), ('description', 0.75), ('treatment type', 0.75), ('type description', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.019105 seconds.
Processed example 949 out of 1034

Question: List each owner's first name, last name, and the size of his for her dog.
SQL: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
Look for potential candidates "[('owner', 0.75), ('name', 0.75), ('dog', 0.75), ('size', 0.75), ('1', 1.0)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[('1', 'abandoned yes or no', 'dogs'), ('1', 'age', 'dogs'), ('1', 'gender', 'dogs')]"
Elapsed time is 0.010153 seconds.
Processed example 950 out of 1034

Question: What are each owner's first name, last name, and the size of their dog?
SQL: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
Look for potential candidates "[('owner', 0.75), ('name', 0.75), ('dog', 0.75), ('size', 0.75), ('1', 1.0)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[('1', 'abandoned yes or no', 'dogs'), ('1', 'age', 'dogs'), ('1', 'gender', 'dogs')]"
Elapsed time is 0.010458 seconds.
Processed example 951 out of 1034

Question: List pairs of the owner's first name and the dogs's name.
SQL: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
Look for potential candidates "[('List pairs', 0.75), ('List', 0.75), ('pairs', 0.75), ('name', 0.75), ('owner', 0.75), ('dogs', 0.75), ('1', 1.0)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[('1', 'abandoned yes or no', 'dogs'), ('1', 'age', 'dogs'), ('1', 'gender', 'dogs')]"
Elapsed time is 0.015964 seconds.
Processed example 952 out of 1034

Question: What are each owner's first name and their dogs's name?
SQL: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
Look for potential candidates "[('owner', 0.75), ('name', 0.75), ('dogs', 0.75), ('1', 1.0)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[('1', 'abandoned yes or no', 'dogs'), ('1', 'age', 'dogs'), ('1', 'gender', 'dogs')]"
Elapsed time is 0.007959 seconds.
Processed example 953 out of 1034

Question: List the names of the dogs of the rarest breed and the treatment dates of them.
SQL: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )
Look for potential candidates "[('names', 0.75), ('dogs', 0.75), ('breed', 0.75), ('treatment', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.010677 seconds.
Processed example 954 out of 1034

Question: Which dogs are of the rarest breed? Show their names and treatment dates.
SQL: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )
Look for potential candidates "[('Show', 0.75), ('dogs', 0.75), ('breed', 0.75), ('treatment', 0.75), ('names', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.012541 seconds.
Processed example 955 out of 1034

Question: Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.
SQL: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'
Look for potential candidates "[('List', 0.75), ('VA', 0.9), ('Virginia', 0.9), ('someone', 0.75), ('dogs', 0.75), ('owner', 0.75), ('dog', 0.75), ('name', 0.75), ('1', 1.0)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[('Virginia', 'state', 'owners'), ('1', 'abandoned yes or no', 'dogs'), ('1', 'age', 'dogs'), ('1', 'gender', 'dogs')]"
Elapsed time is 0.019956 seconds.
Processed example 956 out of 1034

Question: Find the first names of owners living in Virginia and the names of dogs they own.
SQL: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'
Look for potential candidates "[('VA', 0.9), ('Virginia', 0.9), ('owners', 0.75), ('names', 0.75), ('dogs', 0.75), ('1', 1.0)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[('Virginia', 'state', 'owners'), ('1', 'abandoned yes or no', 'dogs'), ('1', 'age', 'dogs'), ('1', 'gender', 'dogs')]"
Elapsed time is 0.012823 seconds.
Processed example 957 out of 1034

Question: What are the arriving date and the departing date of the dogs who have gone through a treatment?
SQL: SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
Look for potential candidates "[('dogs', 0.75), ('treatment', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.005751 seconds.
Processed example 958 out of 1034

Question: Find the arriving date and the departing date of the dogs that received a treatment.
SQL: SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
Look for potential candidates "[('dogs', 0.75), ('treatment', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.005689 seconds.
Processed example 959 out of 1034

Question: List the last name of the owner owning the youngest dog.
SQL: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )
Look for potential candidates "[('name', 0.75), ('owner', 0.75), ('dog', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.008020 seconds.
Processed example 960 out of 1034

Question: Who owns the youngest dog? Give me his or her last name.
SQL: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )
Look for potential candidates "[('Give', 0.75), ('dog', 0.75), ('name', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.007582 seconds.
Processed example 961 out of 1034

Question: List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.
SQL: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'
Look for potential candidates "[('HI', 0.9), ('Hawaii', 0.9), ('WI', 0.9), ('Wisconsin', 0.9), ('emails', 0.75), ('professionals', 0.75), ('state', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[('Wisconsin', 'state', 'professionals'), ('Hawaii', 'state', 'professionals'), ('Wisconsin', 'state', 'owners')]"
Elapsed time is 0.017487 seconds.
Processed example 962 out of 1034

Question: What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?
SQL: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'
Look for potential candidates "[('HI', 0.9), ('Hawaii', 0.9), ('WI', 0.9), ('Wisconsin', 0.9), ('emails', 0.75), ('state', 0.75), ('professionals', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[('Wisconsin', 'state', 'professionals'), ('Hawaii', 'state', 'professionals'), ('Wisconsin', 'state', 'owners')]"
Elapsed time is 0.017646 seconds.
Processed example 963 out of 1034

Question: What are the arriving date and the departing date of all the dogs?
SQL: SELECT date_arrived ,  date_departed FROM Dogs
Look for potential candidates "[('dogs', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003199 seconds.
Processed example 964 out of 1034

Question: List the arrival date and the departure date for all the dogs.
SQL: SELECT date_arrived ,  date_departed FROM Dogs
Look for potential candidates "[('dogs', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.003096 seconds.
Processed example 965 out of 1034

Question: How many dogs went through any treatments?
SQL: SELECT count(DISTINCT dog_id) FROM Treatments
Look for potential candidates "[('dogs', 0.75), ('treatments', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.005551 seconds.
Processed example 966 out of 1034

Question: Count the number of dogs that went through a treatment.
SQL: SELECT count(DISTINCT dog_id) FROM Treatments
Look for potential candidates "[('dogs', 0.75), ('number', 0.75), ('treatment', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.007884 seconds.
Processed example 967 out of 1034

Question: How many professionals have performed any treatment to dogs?
SQL: SELECT count(DISTINCT professional_id) FROM Treatments
Look for potential candidates "[('professionals', 0.75), ('treatment', 0.75), ('dogs', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.008180 seconds.
Processed example 968 out of 1034

Question: Find the number of professionals who have ever treated dogs.
SQL: SELECT count(DISTINCT professional_id) FROM Treatments
Look for potential candidates "[('professionals', 0.75), ('number', 0.75), ('dogs', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.008441 seconds.
Processed example 969 out of 1034

Question: Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.
SQL: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
Look for potential candidates "[('West', 0.9), ('List', 0.75), ('professionals', 0.75), ('city', 0.75), ('substring', 0.75), ('street', 0.75), ('state', 0.75), ('role', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.019798 seconds.
Processed example 970 out of 1034

Question: Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.
SQL: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
Look for potential candidates "[('West', 0.9), ('role', 0.75), ('city', 0.75), ('street', 0.75), ('professionals', 0.75), ('state', 0.75), ('substring', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.017291 seconds.
Processed example 971 out of 1034

Question: Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.
SQL: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
Look for potential candidates "[('North', 0.9), ('List', 0.75), ('owners', 0.75), ('name', 0.75), ('state', 0.75), ('substring', 0.75), ('email', 0.75), ('1', 1.0)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[('1', 'abandoned yes or no', 'dogs'), ('1', 'age', 'dogs'), ('1', 'gender', 'dogs')]"
Elapsed time is 0.017235 seconds.
Processed example 972 out of 1034

Question: Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.
SQL: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
Look for potential candidates "[('North', 0.9), ('owners', 0.75), ('name', 0.75), ('email', 0.75), ('state', 0.75), ('substring', 0.75), ('1', 1.0)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[('1', 'abandoned yes or no', 'dogs'), ('1', 'age', 'dogs'), ('1', 'gender', 'dogs')]"
Elapsed time is 0.015073 seconds.
Processed example 973 out of 1034

Question: How many dogs have an age below the average?
SQL: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )
Look for potential candidates "[('dogs', 0.75), ('age', 0.75), ('average', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.007787 seconds.
Processed example 974 out of 1034

Question: Count the number of dogs of an age below the average.
SQL: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )
Look for potential candidates "[('number', 0.75), ('dogs', 0.75), ('age', 0.75), ('average', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.010211 seconds.
Processed example 975 out of 1034

Question: How much does the most recent treatment cost?
SQL: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
Look for potential candidates "[('treatment cost', 0.75), ('treatment', 0.75), ('cost', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.008069 seconds.
Processed example 976 out of 1034

Question: Show me the cost of the most recently performed treatment.
SQL: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
Look for potential candidates "[('treatment', 0.75), ('cost', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.005822 seconds.
Processed example 977 out of 1034

Question: How many dogs have not gone through any treatment?
SQL: SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )
Look for potential candidates "[('dogs', 0.75), ('treatment', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.007145 seconds.
Processed example 978 out of 1034

Question: Tell me the number of dogs that have not received any treatment .
SQL: select count(*) from dogs where dog_id not in ( select dog_id from treatments )
Look for potential candidates "[('dogs', 0.75), ('number', 0.75), ('treatment', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.008205 seconds.
Processed example 979 out of 1034

Question: How many owners temporarily do not have any dogs?
SQL: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )
Look for potential candidates "[('owners', 0.75), ('dogs', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.005452 seconds.
Processed example 980 out of 1034

Question: Find the number of owners who do not own any dogs at this moment.
SQL: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )
Look for potential candidates "[('owners', 0.75), ('number', 0.75), ('dogs', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.007859 seconds.
Processed example 981 out of 1034

Question: How many professionals did not operate any treatment on dogs?
SQL: SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )
Look for potential candidates "[('professionals', 0.75), ('dogs', 0.75), ('treatment', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.008147 seconds.
Processed example 982 out of 1034

Question: Find the number of professionals who have not treated any dogs.
SQL: SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )
Look for potential candidates "[('professionals', 0.75), ('number', 0.75), ('dogs', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.007998 seconds.
Processed example 983 out of 1034

Question: List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.
SQL: SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
Look for potential candidates "[('yes', 0.9), ('no', 0.9), ('dog name', 0.75), ('dog', 0.75), ('name', 0.75), ('age', 0.75), ('weight', 0.75), ('dogs', 0.75), ('stands', 0.75), ('1', 1.0), ('0', 1.0)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[('0', 'abandoned yes or no', 'dogs'), ('1', 'age', 'dogs'), ('0', 'gender', 'dogs'), ('1', 'abandoned yes or no', 'dogs'), ('1', 'gender', 'dogs')]"
Elapsed time is 0.022906 seconds.
Processed example 984 out of 1034

Question: What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.
SQL: SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
Look for potential candidates "[('yes', 0.9), ('no', 0.9), ('Note', 0.75), ('dog name', 0.75), ('dog', 0.75), ('name', 0.75), ('dogs', 0.75), ('age', 0.75), ('weight', 0.75), ('stands', 0.75), ('tables', 0.75), ('0', 1.0), ('1', 1.0)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[('0', 'abandoned yes or no', 'dogs'), ('1', 'age', 'dogs'), ('0', 'gender', 'dogs'), ('1', 'abandoned yes or no', 'dogs'), ('1', 'gender', 'dogs')]"
Elapsed time is 0.026459 seconds.
Processed example 985 out of 1034

Question: What is the average age of all the dogs?
SQL: SELECT avg(age) FROM Dogs
Look for potential candidates "[('age', 0.75), ('dogs', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.005300 seconds.
Processed example 986 out of 1034

Question: Compute the average age of all the dogs.
SQL: SELECT avg(age) FROM Dogs
Look for potential candidates "[('age', 0.75), ('dogs', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.005282 seconds.
Processed example 987 out of 1034

Question: What is the age of the oldest dog?
SQL: SELECT max(age) FROM Dogs
Look for potential candidates "[('age', 0.75), ('dog', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.005556 seconds.
Processed example 988 out of 1034

Question: Tell me the age of the oldest dog.
SQL: SELECT max(age) FROM Dogs
Look for potential candidates "[('age', 0.75), ('dog', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.005496 seconds.
Processed example 989 out of 1034

Question: How much does each charge type costs? List both charge type and amount.
SQL: SELECT charge_type ,  charge_amount FROM Charges
Look for potential candidates "[('List', 0.75), ('charge type costs', 0.75), ('charge', 0.75), ('type', 0.75), ('costs', 0.75), ('charge type', 0.75), ('type costs', 0.75), ('amount', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.020731 seconds.
Processed example 990 out of 1034

Question: List each charge type and its amount.
SQL: SELECT charge_type ,  charge_amount FROM Charges
Look for potential candidates "[('charge type', 0.75), ('charge', 0.75), ('type', 0.75), ('amount', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.010603 seconds.
Processed example 991 out of 1034

Question: How much does the most expensive charge type costs?
SQL: SELECT max(charge_amount) FROM Charges
Look for potential candidates "[('charge type costs', 0.75), ('charge', 0.75), ('type', 0.75), ('costs', 0.75), ('charge type', 0.75), ('type costs', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.015678 seconds.
Processed example 992 out of 1034

Question: What is the charge amount of the most expensive charge type?
SQL: SELECT max(charge_amount) FROM Charges
Look for potential candidates "[('charge amount', 0.75), ('charge', 0.75), ('amount', 0.75), ('charge type', 0.75), ('type', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.013381 seconds.
Processed example 993 out of 1034

Question: List the email, cell phone and home phone of all the professionals.
SQL: SELECT email_address ,  cell_number ,  home_phone FROM professionals
Look for potential candidates "[('email', 0.75), ('cell phone', 0.75), ('cell', 0.75), ('phone', 0.75), ('home', 0.75), ('professionals', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.015172 seconds.
Processed example 994 out of 1034

Question: What are the email, cell phone and home phone of each professional?
SQL: SELECT email_address ,  cell_number ,  home_phone FROM professionals
Look for potential candidates "[('email', 0.75), ('cell phone', 0.75), ('cell', 0.75), ('phone', 0.75), ('home', 0.75), ('professional', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.015348 seconds.
Processed example 995 out of 1034

Question: What are all the possible breed type and size type combinations?
SQL: SELECT DISTINCT breed_code ,  size_code FROM dogs
Look for potential candidates "[('breed type', 0.75), ('breed', 0.75), ('type', 0.75), ('size type combinations', 0.75), ('size', 0.75), ('combinations', 0.75), ('size type', 0.75), ('type combinations', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.021512 seconds.
Processed example 996 out of 1034

Question: Find the distinct breed type and size type combinations for dogs.
SQL: SELECT DISTINCT breed_code ,  size_code FROM dogs
Look for potential candidates "[('breed type', 0.75), ('breed', 0.75), ('type', 0.75), ('size', 0.75), ('dogs', 0.75), ('type combinations', 0.75), ('combinations', 0.75)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.018249 seconds.
Processed example 997 out of 1034

Question: List the first name of all the professionals along with the description of the treatment they have done.
SQL: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code
Look for potential candidates "[('professionals', 0.75), ('name', 0.75), ('description', 0.75), ('treatment', 0.75), ('1', 1.0)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[('1', 'abandoned yes or no', 'dogs'), ('1', 'age', 'dogs'), ('1', 'gender', 'dogs')]"
Elapsed time is 0.010876 seconds.
Processed example 998 out of 1034

Question: What are each professional's first name and description of the treatment they have performed?
SQL: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code
Look for potential candidates "[('professional', 0.75), ('description', 0.75), ('name', 0.75), ('treatment', 0.75), ('1', 1.0)]" in database dog_kennels (include primary keys: False)
Confirmed the following candidates "[('1', 'abandoned yes or no', 'dogs'), ('1', 'age', 'dogs'), ('1', 'gender', 'dogs')]"
Elapsed time is 0.011060 seconds.
Processed example 999 out of 1034

Question: How many singers are there?
SQL: SELECT count(*) FROM singer
Look for potential candidates "[('singers', 0.75)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000663 seconds.
Processed example 1000 out of 1034

Question: What is the count of singers?
SQL: SELECT count(*) FROM singer
Look for potential candidates "[('count', 0.75), ('singers', 0.75)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000865 seconds.
Processed example 1001 out of 1034

Question: List the name of singers in ascending order of net worth.
SQL: SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
Look for potential candidates "[('name', 0.75), ('singers', 0.75), ('order', 0.75), ('net worth', 0.75), ('net', 0.75), ('worth', 0.75)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001973 seconds.
Processed example 1002 out of 1034

Question: What are the names of singers ordered by ascending net worth?
SQL: SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
Look for potential candidates "[('names', 0.75), ('singers', 0.75), ('net worth', 0.75), ('net', 0.75), ('worth', 0.75)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001711 seconds.
Processed example 1003 out of 1034

Question: What are the birth year and citizenship of singers?
SQL: SELECT Birth_Year ,  Citizenship FROM singer
Look for potential candidates "[('citizenship', 0.75), ('singers', 0.75)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000930 seconds.
Processed example 1004 out of 1034

Question: What are the birth years and citizenships of the singers?
SQL: SELECT Birth_Year ,  Citizenship FROM singer
Look for potential candidates "[('citizenships', 0.75), ('singers', 0.75)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000915 seconds.
Processed example 1005 out of 1034

Question: List the name of singers whose citizenship is not "France".
SQL: SELECT Name FROM singer WHERE Citizenship != "France"
Look for potential candidates "[('France', 0.9), ('singers', 0.75), ('name', 0.75), ('citizenship', 0.75)]" in database singer (include primary keys: False)
Confirmed the following candidates "[('France', 'citizenship', 'singer')]"
Elapsed time is 0.001452 seconds.
Processed example 1006 out of 1034

Question: What are the names of the singers who are not French citizens?
SQL: SELECT Name FROM singer WHERE Citizenship != "France"
Look for potential candidates "[('French', 0.75), ('singers', 0.75), ('names', 0.75), ('citizens', 0.75)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001428 seconds.
Processed example 1007 out of 1034

Question: Show the name of singers whose birth year is either 1948 or 1949?
SQL: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
Look for potential candidates "[('singers', 0.75), ('name', 0.75), ('1948', 1.0), ('1949', 1.0)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000921 seconds.
Processed example 1008 out of 1034

Question: What are the names of the singers whose birth years are either 1948 or 1949?
SQL: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
Look for potential candidates "[('singers', 0.75), ('names', 0.75), ('1948', 1.0), ('1949', 1.0)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000925 seconds.
Processed example 1009 out of 1034

Question: What is the name of the singer with the largest net worth?
SQL: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
Look for potential candidates "[('name', 0.75), ('singer', 0.75), ('net worth', 0.75), ('net', 0.75), ('worth', 0.75)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001686 seconds.
Processed example 1010 out of 1034

Question: What is the name of the singer who is worth the most?
SQL: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
Look for potential candidates "[('singer', 0.75), ('name', 0.75), ('most', 0.75)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001134 seconds.
Processed example 1011 out of 1034

Question: Show different citizenship of singers and the number of singers of each citizenship.
SQL: SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship
Look for potential candidates "[('singers', 0.75), ('number', 0.75), ('citizenship', 0.75)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001167 seconds.
Processed example 1012 out of 1034

Question: For each citizenship, how many singers are from that country?
SQL: SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship
Look for potential candidates "[('citizenship', 0.75), ('singers', 0.75), ('country', 0.75)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001166 seconds.
Processed example 1013 out of 1034

Question: Please show the most common citizenship of singers.
SQL: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
Look for potential candidates "[('singers', 0.75), ('citizenship', 0.75)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000897 seconds.
Processed example 1014 out of 1034

Question: What is the most common singer citizenship ?
SQL: select citizenship from singer group by citizenship order by count(*) desc limit 1
Look for potential candidates "[('singer citizenship', 0.75), ('singer', 0.75), ('citizenship', 0.75)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001195 seconds.
Processed example 1015 out of 1034

Question: Show different citizenships and the maximum net worth of singers of each citizenship.
SQL: SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
Look for potential candidates "[('net worth', 0.75), ('net', 0.75), ('worth', 0.75), ('citizenships', 0.75), ('citizenship', 0.75), ('singers', 0.75)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001991 seconds.
Processed example 1016 out of 1034

Question: For each citizenship, what is the maximum net worth?
SQL: SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
Look for potential candidates "[('citizenship', 0.75), ('net worth', 0.75), ('net', 0.75), ('worth', 0.75)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001453 seconds.
Processed example 1017 out of 1034

Question: Show titles of songs and names of singers.
SQL: SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID
Look for potential candidates "[('Show titles', 0.75), ('Show', 0.75), ('titles', 0.75), ('songs', 0.75), ('names', 0.75), ('singers', 0.75)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002013 seconds.
Processed example 1018 out of 1034

Question: What are the song titles and singer names?
SQL: SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID
Look for potential candidates "[('song titles', 0.75), ('song', 0.75), ('titles', 0.75), ('singer names', 0.75), ('singer', 0.75), ('names', 0.75)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.002113 seconds.
Processed example 1019 out of 1034

Question: Show distinct names of singers that have songs with sales more than 300000.
SQL: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000
Look for potential candidates "[('names', 0.75), ('singers', 0.75), ('songs', 0.75), ('sales', 0.75), ('300000', 1.0)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001434 seconds.
Processed example 1020 out of 1034

Question: what are the different names of the singers that have sales more than 300000?
SQL: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000
Look for potential candidates "[('names', 0.75), ('singers', 0.75), ('sales', 0.75), ('300000', 1.0)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001209 seconds.
Processed example 1021 out of 1034

Question: Show the names of singers that have more than one song.
SQL: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
Look for potential candidates "[('names', 0.75), ('singers', 0.75), ('song', 0.75), ('1', 1.0)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001195 seconds.
Processed example 1022 out of 1034

Question: What are the names of the singers that have more than one songs?
SQL: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
Look for potential candidates "[('names', 0.75), ('singers', 0.75), ('songs', 0.75), ('1', 1.0)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001219 seconds.
Processed example 1023 out of 1034

Question: Show the names of singers and the total sales of their songs.
SQL: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
Look for potential candidates "[('singers', 0.75), ('sales', 0.75), ('names', 0.75), ('songs', 0.75)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001410 seconds.
Processed example 1024 out of 1034

Question: For each singer name, what is the total sales for their songs?
SQL: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
Look for potential candidates "[('sales', 0.75), ('singer name', 0.75), ('singer', 0.75), ('name', 0.75), ('songs', 0.75)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001741 seconds.
Processed example 1025 out of 1034

Question: List the name of singers that do not have any song.
SQL: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
Look for potential candidates "[('name', 0.75), ('singers', 0.75), ('song', 0.75)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001202 seconds.
Processed example 1026 out of 1034

Question: What is the sname of every sing that does not have any song?
SQL: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
Look for potential candidates "[('sing', 0.75), ('sname', 0.75), ('song', 0.75)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001135 seconds.
Processed example 1027 out of 1034

Question: Show the citizenship shared by singers with birth year before 1945 and after 1955.
SQL: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
Look for potential candidates "[('singers', 0.75), ('citizenship', 0.75), ('1945', 1.0), ('1955', 1.0)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.000957 seconds.
Processed example 1028 out of 1034

Question: What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?
SQL: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
Look for potential candidates "[('citizenships', 0.75), ('singers', 0.75), ('1945', 1.0), ('1955', 1.0)]" in database singer (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.001029 seconds.
Processed example 1029 out of 1034

Question: How many available features are there in total?
SQL: SELECT count(*) FROM Other_Available_Features
Look for potential candidates "[('features', 0.75), ('total', 0.75)]" in database real_estate_properties (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.004526 seconds.
Processed example 1030 out of 1034

Question: What is the feature type name of feature AirCon?
SQL: SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  "AirCon"
Look for potential candidates "[('AirCon', 0.75), ('feature type name', 0.75), ('feature', 0.75), ('type', 0.75), ('name', 0.75), ('feature type', 0.75), ('type name', 0.75), ('feature AirCon', 0.75)]" in database real_estate_properties (include primary keys: False)
Confirmed the following candidates "[('AirCon', 'feature name', 'other available features')]"
Elapsed time is 0.016611 seconds.
Processed example 1031 out of 1034

Question: Show the property type descriptions of properties belonging to that code.
SQL: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code
Look for potential candidates "[('properties', 0.75), ('code', 0.75), ('property type descriptions', 0.75), ('property', 0.75), ('type', 0.75), ('descriptions', 0.75), ('property type', 0.75), ('type descriptions', 0.75)]" in database real_estate_properties (include primary keys: False)
Confirmed the following candidates "[]"
Elapsed time is 0.017037 seconds.
Processed example 1032 out of 1034

Question: What are the names of properties that are either houses or apartments with more than 1 room?
SQL: SELECT property_name FROM Properties WHERE property_type_code  =  "House" UNION SELECT property_name FROM Properties WHERE property_type_code  =  "Apartment" AND room_count  >  1
Look for potential candidates "[('properties', 0.75), ('names', 0.75), ('houses', 0.75), ('apartments', 0.75), ('room', 0.75), ('1', 1.0)]" in database real_estate_properties (include primary keys: False)
Confirmed the following candidates "[('1', 'room count', 'properties')]"
Elapsed time is 0.010504 seconds.
Processed example 1033 out of 1034


Process finished with exit code 0